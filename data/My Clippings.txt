Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 2664-2665 | Added on Wednesday, 6 July 2016 20:11:09

Recall that the apply and bind methods both take a first argument that can be used to simulate method calls.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 2679-2680 | Added on Wednesday, 6 July 2016 20:15:42

In addition to their set of properties, almost all objects also have a prototype. A prototype is another object that is used as a fallback source of properties.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 2716-2717 | Added on Wednesday, 6 July 2016 20:39:31

It is a convention to capitalize the names of constructors so that they are easily distinguished from other functions.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 2712-2715 | Added on Wednesday, 6 July 2016 20:39:37

In JavaScript, calling a function with the new keyword in front of it causes it to be treated as a constructor. The constructor will have its this variable bound to a fresh object, and unless it explicitly returns another object value, this new object will be returned from the call.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Bookmark at location 2870 | Added on Wednesday, 6 July 2016 22:27:00


==========
﻿online notepad - free, no login required (shrib.com)
- Your Highlight at location 65-67 | Added on Wednesday, 6 July 2016 22:43:26

The pharmaceutical industry has something called Eroom's Law (which is ‘Moore’s Law’ spelled backwards). It's the observation that the number of drugs discovered per billion dollars in research has dropped by half every nine years since 1950.
==========
﻿online notepad - free, no login required (shrib.com)
- Your Highlight at location 73-76 | Added on Wednesday, 6 July 2016 22:44:44

The growing fear is that the data-driven approach is inherently a poor fit for life science. In the world of computers, we learn to avoid certain kinds of complexity, because they make our systems impossible to reason about. But Nature is full of self-modifying, interlocking systems, with interdependent variables you can't isolate. In these vast data spaces, directed iterative search performs better than any amount of data mining.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 2898-2899 | Added on Thursday, 7 July 2016 08:22:48

Using a variable name starting with an underscore (_) or consisting entirely of a single underscore is a way to indicate (to human readers) that this argument is not going to be used.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Highlight at location 3181-3182 | Added on Thursday, 7 July 2016 09:11:24

Inheritance is a fundamental part of the object-oriented tradition, alongside encapsulation and polymorphism. But while the latter two are now generally regarded as wonderful ideas, inheritance is somewhat controversial.
==========
﻿Away From Her (Alice Munro)
- Your Highlight at location 622-624 | Added on Friday, 8 July 2016 14:25:52

The houses looked to have been built all around the same time, perhaps thirty or forty years ago. The streets were wide and curving and there were no sidewalks—recalling the time when it was thought unlikely that anybody would do much walking ever again.
==========
﻿Away From Her (Alice Munro)
- Your Highlight at location 653-655 | Added on Friday, 8 July 2016 14:31:49

He suspected that she did that because it made his company easier for her—she was able to shut her eyes and sink back into her own grief. Because if she let go of her grief even for a minute it would only hit her harder when she bumped into it again.
==========
﻿Away From Her (Alice Munro)
- Your Highlight at location 807-809 | Added on Friday, 8 July 2016 14:58:04

Just the same, they have their points, those people. (He could hear himself now arguing with somebody. Fiona?) There’s some advantage to the narrow focus. Marian would probably be good in a crisis. Good at survival, able to scrounge for food and able to take the shoes off a dead body in the street.
==========
﻿Programmers Need To Learn Statistics Or I Will Kill Them All (zedshaw.com)
- Your Highlight at location 85-86 | Added on Friday, 8 July 2016 23:03:26

Two averages can be the same, but hide massive differences in behavior. Without a standard deviation it’s not possible to figure out if the two might even be close.
==========
﻿Programmers Need To Learn Statistics Or I Will Kill Them All (zedshaw.com)
- Your Highlight at location 101-102 | Added on Friday, 8 July 2016 23:05:32

The moral of the story is that if you give an average without standard deviations then you’re totally missing the entire point of even trying to measure something.
==========
﻿Programmers Need To Learn Statistics Or I Will Kill Them All (zedshaw.com)
- Your Highlight at location 113-115 | Added on Friday, 8 July 2016 23:07:37

How do you fix or even detect confounding? Well, in “the real world” it’s a bitch–and sometimes it’s impossible–so some super smart motha fu.. (shut your mouth) came up with all sorts of ways to reduce the impact of confounding. One way is to randomize the confounding element so that it’s effect is not influencing the element under investigation.
==========
﻿Eloquent JavaScript (Marijn Haverbeke)
- Your Bookmark at location 3187 | Added on Sunday, 10 July 2016 20:34:12


==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Bookmark at location 352 | Added on Monday, 11 July 2016 22:54:28


==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Highlight at location 609-609 | Added on Tuesday, 12 July 2016 16:50:10

When the prevailing fantasy is that we can be ageless, the geriatrician’s uncomfortable demand is that we accept we are not.
==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Bookmark at location 770 | Added on Tuesday, 12 July 2016 17:53:04


==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Highlight at location 1250-1252 | Added on Thursday, 14 July 2016 09:49:04

If we shift as we age toward appreciating everyday pleasures and relationships rather than toward achieving, having, and getting, and if we find this more fulfilling, then why do we take so long to do it? Why do we wait until we’re old? The common view was that these lessons are hard to learn. Living is a kind of skill. The calm and wisdom of old age are achieved over time.
==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Highlight at location 1287-1293 | Added on Thursday, 14 July 2016 09:56:53

The simpler way to say it is that perspective matters. She produced a series of experiments to test the idea. In one, she and her team studied a group of adult men ages twenty-three to sixty-six. Some of the men were healthy. But some were terminally ill with HIV/AIDS. The subjects were given a deck of cards with descriptions of people they might know, ranging in emotional closeness from family members to the author of a book they’d read, and they were asked to sort the cards according to how they would feel about spending half an hour with them. In general, the younger the subjects were, the less they valued time with people they were emotionally close to and the more they valued time with people who were potential sources of information or new friendship. However, among the ill, the age differences disappeared. The preferences of a young person with AIDS were the same as those of an old person.
==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Highlight at location 1294-1298 | Added on Thursday, 14 July 2016 09:57:54

When they were asked how they would like to spend half an hour of time, the age differences in their preferences were again clear. But when asked simply to imagine they were about to move far away, the age differences again disappeared. The young chose as the old did. Next, the researchers asked them to imagine that a medical breakthrough had been made that would add twenty years to their life. Again, the age differences disappeared—but this time the old chose as the young did.
==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Highlight at location 1305-1306 | Added on Thursday, 14 July 2016 09:59:08

When, as the researchers put it, “life’s fragility is primed,” people’s goals and motives in their everyday lives shift completely. It’s perspective, not age, that matters most.
==========
﻿Being Mortal: Medicine and What Matters in the End (Gawande, Atul)
- Your Bookmark at location 1948 | Added on Thursday, 14 July 2016 20:09:04


==========
﻿A szív segédigéi (Esterházy Péter)
- Your Bookmark at location 255 | Added on Saturday, 16 July 2016 17:01:06


==========
﻿Bioinformatics Programming Using Python (Mitchell L Model)
- Your Bookmark at location 453 | Added on Monday, 18 July 2016 14:18:13


==========
﻿A szavak csodálatos életéből (pastepad.fivefilters.org)
- Your Highlight at location 338-339 | Added on Monday, 18 July 2016 17:38:12

Olykor épp a drasztikus szó ki nem mondása teszi a szöveget obszcénné, mert gusztustalanná változtatja a szó körüli sunyi oldalazásunk.
==========
﻿A szavak csodálatos életéből (pastepad.fivefilters.org)
- Your Highlight at location 458-461 | Added on Monday, 18 July 2016 17:58:00

Nem aggasztó-e, hogy az irodalom egyre kisebb jelentőségű? Nem egyre, de valóban kis. De mi az, hogy kis és nagy? Merjünk nagyok lenni, szokták most mondani. Amire azonnal kieszelték az ellenajánlatot, hogy merjünk kicsik lenni. Az eszükbe se jut, hogy merjünk akkorák lenni, amekkorák vagyunk.
==========
﻿Au revoir là-haut (Lemaitre, Pierre)
- Your Highlight at location 98-99 | Added on Tuesday, 19 July 2016 15:19:56

sous-chef de bureau au ministère des Postes, qui concevait la hiérarchie de son administration comme une métaphore de l’univers.
==========
﻿Au revoir là-haut (Lemaitre, Pierre)
- Your Bookmark at location 225 | Added on Wednesday, 20 July 2016 11:17:22


==========
﻿White privilege - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 223-225 | Added on Friday, 22 July 2016 10:44:46

Whites in general cannot avoid benefiting from the historical legacy of racial discrimination and oppression. So unjust enrichment is almost never absent from the life situation of Whites.
==========
﻿Au revoir là-haut (Lemaitre, Pierre)
- Your Bookmark at location 601 | Added on Friday, 22 July 2016 17:10:18


==========
﻿Au revoir là-haut (Lemaitre, Pierre)
- Your Highlight at location 645-646 | Added on Saturday, 23 July 2016 17:58:38

le cadet de ses soucis.
==========
﻿== DIA Mű == (dia.pool.pim.hu)
- Your Highlight at location 24-25 | Added on Monday, 25 July 2016 15:38:35

„Nem megtartó, de megszokható hely ez – ha az első rémület lefut az agyakon.”
==========
﻿LÁZÁR ERVIN: BAB BERCI KALANDJAI (mek.oszk.hu)
- Your Highlight at location 227-229 | Added on Tuesday, 26 July 2016 12:45:56

Csak teljesen mellékesen - mondta, és könnyedén meghajolt Bab Berci felé. - Pálinkós Gyurka mellékes költő mellékes verse mellékes kezdetéhez mellékes folytatást keres. Bab Berci úgy érezte, hogy a világesemények zajló folyamának legsodróbb sodrába került.
==========
﻿Au revoir là-haut (Lemaitre, Pierre)
- Your Bookmark at location 720 | Added on Thursday, 28 July 2016 11:33:39


==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 163-165 | Added on Friday, 29 July 2016 09:40:47

In Yoko Ogawa’s charming novel The Housekeeper and the Professor, an astute but uneducated young woman with a ten-year-old son is hired to take care of an elderly mathematician who has suffered a traumatic brain injury that leaves him with only eighty minutes of short-term memory.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 708-711 | Added on Saturday, 30 July 2016 17:45:14

In the early part of the ninth century, Muhammad ibn Musa al-Khwarizmi, a mathematician working in Baghdad, wrote a seminal textbook in which he highlighted the usefulness of restoring a quantity being subtracted (like 2, above) by adding it to the other side of an equation. He called this process al-jabr (Arabic for “restoring”), which later morphed into “algebra.” Then, long after his death, he hit the etymological jackpot again. His own name, al-Khwarizmi, lives on today in the word “algorithm.”
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 942-944 | Added on Sunday, 31 July 2016 08:01:45

Euclidean geometry has been a model for logical reasoning in all walks of life, from science and law to philosophy and politics. For example, Isaac Newton channeled Euclid in the structure of his masterwork The Mathematical Principles of Natural Philosophy. Using
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 946-948 | Added on Sunday, 31 July 2016 08:02:22

You can even hear echoes of Euclid in the Declaration of Independence. When Thomas Jefferson wrote, “We hold these truths to be self-evident,” he was mimicking the style of the Elements.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1322-1324 | Added on Sunday, 31 July 2016 11:30:25

Snell’s law. What’s spooky is that nature obeys it too. Snell’s law describes how light rays bend when they pass from air into water, as they do when the sun shines into a swimming pool. Light moves more slowly in water, much like the hiker in the snow, and it bends accordingly to minimize its travel time.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1660-1661 | Added on Sunday, 31 July 2016 14:22:42

Overall, the pattern is utterly predictable: it always forms a bell-shaped distribution—even though it’s impossible to predict where any given ball will end up.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1666-1668 | Added on Sunday, 31 July 2016 14:37:55

Just as the ultimate location of each ball is determined by the sum of many chance events, lots of phenomena in this world are the net result of many tiny flukes, so they too are governed by a bell-shaped curve. Insurance companies bank on this. They know, with great accuracy, how many of their customers will die each year. They just don’t know who the unlucky ones will be.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1699-1703 | Added on Sunday, 31 July 2016 14:44:51

Power-law distributions have counterintuitive properties from the standpoint of conventional statistics. For example, unlike normal distributions’, their modes, medians, and means do not agree because of the skewed, asymmetrical shapes of their L-curves. President Bush made use of this property when he stated that his 2003 tax cuts had saved families an average of $1,586 each. Though that is technically correct, he was conveniently referring to the mean rebate, a figure that averaged in the whopping rebates of hundreds of thousands of dollars received by the richest 0.1 percent of the population.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1734-1735 | Added on Sunday, 31 July 2016 14:51:09

This is the central lesson of Calculated Risks, a fascinating book by Gerd Gigerenzer, a cognitive psychologist at the Max Planck Institute for Human Development in Berlin.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 1735-1737 | Added on Sunday, 31 July 2016 14:51:43

In a series of studies about medical and legal issues ranging from AIDS counseling to the interpretation of DNA fingerprinting, Gigerenzer explores how people miscalculate risk and uncertainty. But rather than scold or bemoan human frailty, he tells us how to do better—how to avoid clouded thinking by recasting conditional-probability problems in terms of natural frequencies, much as my students did.
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 2005-2007 | Added on Sunday, 31 July 2016 19:26:02

(Images like this abound in a terrific book called Visual Group Theory, by Nathan Carter. It’s one of the best introductions to group theory—or to any branch of higher math—I’ve ever read.)
==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Bookmark at location 2193 | Added on Sunday, 31 July 2016 20:55:26


==========
﻿The Joy of x: A Guided Tour of Math, from One to Infinity (Strogatz, Steven)
- Your Highlight at location 2443-2445 | Added on Monday, 1 August 2016 08:32:02

A very readable version of that proof, and a gentle introduction to the mathematics of balance theory, has been given by two of my colleagues at Cornell: D. Easley and J. Kleinberg, Networks, Crowds, and Markets (Cambridge University Press, 2010).
==========
LÁZÁR ERVIN: BAB BERCI KALANDJAI (mek.oszk.hu)
- Your Bookmark at location 676 | Added on Friday, 5 August 2016 16:03:51


==========
Searching for the Algorithms Underlying Life | Quanta Magazine (John Pavlus)
- Your Highlight at location 13-14 | Added on Sunday, 14 August 2016 18:03:18

“probably approximately correct” (PAC) model mathematically defined the conditions under which a mechanistic system could be said to “learn” information.
==========
Searching for the Algorithms Underlying Life | Quanta Magazine (John Pavlus)
- Your Highlight at location 16-17 | Added on Sunday, 14 August 2016 18:03:43

Valiant’s conceptual leaps didn’t stop there. In a 2013 book, also entitled “Probably Approximately Correct,” Valiant generalized his PAC learning framework to encompass biological evolution as well.
==========
Searching for the Algorithms Underlying Life | Quanta Magazine (John Pavlus)
- Your Highlight at location 43-44 | Added on Sunday, 14 August 2016 18:08:20

A point made in my book is that all the knowledge an individual has must have been acquired either through learning or through the evolutionary process. And if this is so, then individual learning and evolutionary processes should have a unified theory to explain them.
==========
Searching for the Algorithms Underlying Life | Quanta Magazine (John Pavlus)
- Your Highlight at location 52-54 | Added on Sunday, 14 August 2016 18:09:01

Yes, certainly. Scientifically, the point has been made for more than half a century that if our brains run computations, then if we could identify the algorithms producing those computations, we could simulate them on a machine, and “artificial intelligence” and “intelligence” would become the same.
==========
Here’s Looking at Euclid (Alex Bellos)
- Your Highlight at location 139-141 | Added on Sunday, 4 September 2016 10:34:19

“When I come back from Amazonia I lose sense of time and sense of number, and perhaps sense of space,” he said. He forgets appointments. He is disoriented by simple directions. “I have extreme difficulty adjusting to Paris again, with its angles and straight lines.” Pica’s inability to give me quantitative data was part of his culture shock.
==========
Here’s Looking at Euclid (Alex Bellos)
- Your Highlight at location 222-225 | Added on Sunday, 4 September 2016 11:33:39

The logarithmic scale is also faithful to the way distances are perceived, which is possibly why it is so intuitive. It takes account of perspective. For example, if we see a tree 100 meters away and another 100 meters behind it, the second 100 meters looks shorter. To a Munduruku, the idea that every 100 meters represents an equal distance is a distortion of how he perceives the environment.
==========
Here’s Looking at Euclid (Alex Bellos)
- Your Highlight at location 227-229 | Added on Sunday, 4 September 2016 11:37:09

For example, our understanding of the passing of time is often logarithmic. I remember the years of my childhood passing a lot more slowly than the years seem to fly by now.
==========
Related (python3.codes)
- Your Highlight at location 12-13 | Added on Thursday, 15 September 2016 09:52:01

list.sort() will sort a list in place, newlist=sorted(list) will return a sorted copy, the original list remains unchanged.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 610-612 | Added on Friday, 16 September 2016 16:52:12

Slicing can be extended to any Python class that implements the __getitem__ and __setitem__ special methods (see
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1060-1064 | Added on Friday, 16 September 2016 22:48:13

for name, count in zip(names, letters):
    if count > max_letters:
        longest_name = name
        max_letters = count
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Bookmark at location 1080 | Added on Friday, 16 September 2016 22:49:35


==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1086-1088 | Added on Saturday, 17 September 2016 09:19:10

The zip built-in function can be used to iterate over multiple iterators in parallel.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1088-1091 | Added on Saturday, 17 September 2016 09:19:18

In Python 3, zip is a lazy generator that produces tuples. In Python 2, zip returns the full result as a list of tuples.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1282-1285 | Added on Saturday, 17 September 2016 10:23:09

The try/finally compound statement lets you run cleanup code regardless of whether exceptions were raised in the try block.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1324-1325 | Added on Saturday, 17 September 2016 10:27:48

returning None from a function is error prone.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1325-1328 | Added on Saturday, 17 September 2016 10:31:43

The first way is to split the return value into a two-tuple. The first part of the tuple indicates that the operation was a success or failure. The second part is the actual result that was computed.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1333-1335 | Added on Saturday, 17 September 2016 10:32:01

Callers of this function have to unpack the tuple. That forces them to consider the status part of the tuple instead of just looking at the result of division.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1344-1346 | Added on Saturday, 17 September 2016 10:33:30

The second, better way to reduce these errors is to never return None at all. Instead, raise an exception up to the caller and make them deal with it.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1366-1369 | Added on Saturday, 17 September 2016 10:35:31

Functions that return None to indicate special meaning are error prone because None and other values (e.g., zero, the empty string) all evaluate to False in conditional expressions.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1401-1404 | Added on Saturday, 17 September 2016 11:16:11

Python has specific rules for comparing tuples. It first compares items in index zero, then index one, then index two, and so on. This is why the return value from the helper closure causes the sort order to have two distinct groups.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1452-1454 | Added on Saturday, 17 September 2016 11:20:41

Encountering this problem is sometimes called the scoping bug because it can be so surprising to newbies. But this is the intended result. This behavior prevents local variables in a function from polluting the containing module.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1471-1474 | Added on Saturday, 17 September 2016 11:24:03

The nonlocal statement makes it clear when data is being assigned out of a closure into another scope. It’s complementary to the global statement, which indicates that a variable’s assignment should go directly into the module scope.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1474-1475 | Added on Saturday, 17 September 2016 11:24:20

However, much like the anti-pattern of global variables, I’d caution against using nonlocal for anything beyond simple functions.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1516-1517 | Added on Saturday, 17 September 2016 11:28:16

By default, closures can’t affect enclosing scopes by assigning variables.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1518-1520 | Added on Saturday, 17 September 2016 11:28:23

In Python 3, use the nonlocal statement to indicate when a closure can modify a variable in its enclosing scopes.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1547-1551 | Added on Saturday, 17 September 2016 11:31:40

When called, generator functions do not actually run but instead immediately return an iterator. With each call to the next built-in function, the iterator will advance the generator to its next yield expression. Each value passed to yield by the generator will be returned by the iterator to the caller.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1589-1590 | Added on Saturday, 17 September 2016 11:36:10

The only gotcha of defining generators like this is that the callers must be aware that the iterators returned are stateful and can’t be reused
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1631-1633 | Added on Saturday, 17 September 2016 11:46:36

an iterator only produces its results a single time. If you iterate over an iterator or generator that has already raised a StopIteration exception, you won’t get any results the second time around.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1643-1644 | Added on Saturday, 17 September 2016 12:20:46

you can explicitly exhaust an input iterator and keep a copy of its entire contents in a list. You can then iterate over the list version of the data as many times as you need to.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1659-1661 | Added on Saturday, 17 September 2016 12:21:36

The problem with this approach is the copy of the input iterator’s contents could be large. Copying the iterator could cause your program to run out of memory and crash. One way around this is to accept a function that returns a new iterator each time it’s called.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1737-1738 | Added on Saturday, 17 September 2016 12:32:18

Beware of functions that iterate over input arguments multiple times. If these arguments are iterators, you may see strange behavior and missing values.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1794-1795 | Added on Saturday, 17 September 2016 12:53:42

Functions that accept *args are best for situations where you know the number of inputs in the argument list will be reasonably small.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1819-1822 | Added on Saturday, 17 September 2016 12:57:33

Functions can accept a variable number of positional arguments by using *args in the def statement.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1824-1826 | Added on Saturday, 17 September 2016 12:57:55

Using the * operator with a generator may cause your program to run out of memory and crash.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1826-1828 | Added on Saturday, 17 September 2016 12:58:08

Adding new positional parameters to functions that accept *args can introduce hard-to-find bugs.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1836-1837 | Added on Saturday, 17 September 2016 12:59:19

The keyword arguments can be passed in any order as long as all of the required positional arguments are specified. You
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1844-1845 | Added on Saturday, 17 September 2016 13:00:10

Positional arguments must be specified before keyword arguments.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1853-1854 | Added on Saturday, 17 September 2016 13:01:24

The first advantage is that keyword arguments make the function call clearer to new readers of the code.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1858-1859 | Added on Saturday, 17 September 2016 13:01:35

The second impact of keyword arguments is that they can have default values specified in the function definition
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1894-1895 | Added on Saturday, 17 September 2016 13:07:20

The third reason to use keyword arguments is that they provide a powerful way to extend a function’s parameters while remaining backwards compatible with existing callers.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1921-1921 | Added on Saturday, 17 September 2016 13:12:44

The best practice is to always specify optional arguments using the keyword names and never pass them as positional arguments.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1928-1929 | Added on Saturday, 17 September 2016 13:14:28

Function arguments can be specified by position or by keyword.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1930-1935 | Added on Saturday, 17 September 2016 13:14:40

Keywords make it clear what the purpose of each argument is when it would be confusing with only positional arguments.  Keyword arguments with default values make it easy to add new behaviors to a function, especially when the function has existing callers.  Optional keyword arguments should always be passed by keyword instead of by position.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1945-1946 | Added on Saturday, 17 September 2016 13:18:23

The timestamps are the same because datetime.now is only executed a single time: when the function is defined.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 1976-1978 | Added on Saturday, 17 September 2016 14:20:00

The dictionary specified for default will be shared by all calls to decode because default argument values are only evaluated once (at module load time).
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2013-2016 | Added on Saturday, 17 September 2016 14:21:37

Default arguments are only evaluated once: during function definition at module load time. This can cause odd behaviors for dynamic values (like {} or []).
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2030-2030 | Added on Saturday, 17 September 2016 14:23:46

OverflowError:
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2072-2074 | Added on Saturday, 17 September 2016 14:24:39

Python 3, you can demand clarity by defining your functions with keyword-only arguments. These arguments can only be supplied by keyword, never by position.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2075-2077 | Added on Saturday, 17 September 2016 14:27:26

The * symbol in the argument list indicates the end of positional arguments and the beginning of keyword-only arguments.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2097-2097 | Added on Saturday, 17 September 2016 14:28:24

Unfortunately, Python 2 doesn’t have explicit syntax for specifying keyword-only arguments like Python 3.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2159-2161 | Added on Saturday, 17 September 2016 14:44:04

You can define a class to store the names in a dictionary instead of using a predefined attribute for each student.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2237-2238 | Added on Saturday, 17 September 2016 14:49:32

When you see complexity like this happen, it’s time to make the leap from dictionaries and tuples to a hierarchy of classes.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2240-2242 | Added on Saturday, 17 September 2016 14:49:58

But you should avoid doing this for more than one level of nesting (i.e., avoid dictionaries that contain dictionaries). It makes your code hard to read by other programmers and sets you up for a maintenance nightmare.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2257-2258 | Added on Saturday, 17 September 2016 14:51:38

use _ (the underscore variable name, a Python convention for unused variables)
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2335-2336 | Added on Saturday, 17 September 2016 14:56:32

Avoid making dictionaries with values that are other dictionaries or long tuples.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2337-2338 | Added on Saturday, 17 September 2016 14:56:44

Use namedtuple for lightweight, immutable data containers before you need the flexibility of a full class.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2339-2340 | Added on Saturday, 17 September 2016 14:57:03

Move your bookkeeping code to use multiple helper classes when your internal state dictionaries get complicated.
==========
Is Python call-by-value or call-by-reference? Neither. (Jeff Knupp)
- Your Highlight at location 71-71 | Added on Saturday, 17 September 2016 15:10:07

In Python a variable is not an alias for a location in memory. Rather, it is simply a binding to a Python object.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Bookmark at location 2456 | Added on Saturday, 17 September 2016 20:13:41


==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2465-2466 | Added on Sunday, 18 September 2016 11:57:33

Polymorphism is a way for multiple classes in a hierarchy to implement their own unique versions of a method.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2621-2623 | Added on Sunday, 18 September 2016 12:01:03

Python only supports a single constructor per class, the __init__ method.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 2623-2625 | Added on Sunday, 18 September 2016 12:01:10

Use @classmethod to define alternative constructors for your classes.
==========
Astronomy - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 443-444 | Added on Sunday, 18 September 2016 12:26:16

The concept of the big bang can be traced back to the discovery of the microwave background radiation in 1965.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 54-54 | Added on Monday, 19 September 2016 15:10:31

Python’s HTTP libraries do not support caching, but httplib2 does.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 75-76 | Added on Monday, 19 September 2016 15:10:38

Python’s HTTP libraries do not support last-modified date checking, but httplib2 does.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 85-86 | Added on Monday, 19 September 2016 15:19:26

By including the ETag hash in your second request, you’re telling the server that there’s no need to re-send the same data if it still matches this hash,
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 92-92 | Added on Monday, 19 September 2016 15:19:51

Python’s HTTP libraries do not support ETags, but httplib2 does.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 93-95 | Added on Monday, 19 September 2016 15:20:25

When you talk about HTTP web services, you’re almost always talking about moving text-based data back and forth over the wire. Maybe it’s XML, maybe it’s JSON, maybe it’s just plain text. Regardless of the format, text compresses well.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 96-98 | Added on Monday, 19 September 2016 15:20:40

HTTP supports several compression algorithms. The two most common types are gzip and deflate.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 140-142 | Added on Monday, 19 September 2016 15:26:28

Downloading anything over HTTP is incredibly easy in Python; in fact, it’s a one-liner. The urllib.request module has a handy urlopen() function that takes the address of the page you want, and returns a file-like object that you can just read() from to get the full contents of the page.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 143-144 | Added on Monday, 19 September 2016 15:26:39

The urlopen().read() method always returns a bytes object, not a string. Remember, bytes are bytes; characters are an abstraction.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Highlight at location 143-146 | Added on Monday, 19 September 2016 15:26:57

The urlopen().read() method always returns a bytes object, not a string. Remember, bytes are bytes; characters are an abstraction. HTTP servers don’t deal in abstractions. If you request a resource, you get bytes. If you want it as a string, you’ll need to determine the character encoding and explicitly convert it to a string.
==========
HTTP Web Services - Dive Into Python 3 (diveintopython3.net)
- Your Bookmark at location 287 | Added on Monday, 19 September 2016 15:43:24


==========
Files - Dive Into Python 3 (The Nine Mile Walk)
- Your Highlight at location 27-29 | Added on Monday, 19 September 2016 15:47:28

Bytes are bytes; characters are an abstraction. A string is a sequence of Unicode characters. But a file on disk is not a sequence of Unicode characters; a file on disk is a sequence of bytes.
==========
Files - Dive Into Python 3 (The Nine Mile Walk)
- Your Highlight at location 99-102 | Added on Monday, 19 September 2016 15:55:34

Chinese characters require multiple bytes to encode in UTF-8. The English characters in the file only require one byte each, so you might be misled into thinking that the seek() and read() methods are counting the same thing. But that’s only true for some characters. But wait, it gets worse!
==========
Files - Dive Into Python 3 (The Nine Mile Walk)
- Your Highlight at location 132-134 | Added on Monday, 19 September 2016 16:12:01

Stream objects have an explicit close() method, but what happens if your code has a bug and crashes before you call close()? That file could theoretically stay open for much longer than necessary. While you’re debugging on your local computer, that’s not a big deal. On a production server, maybe it is.
==========
Files - Dive Into Python 3 (The Nine Mile Walk)
- Your Highlight at location 145-147 | Added on Monday, 19 September 2016 16:13:41

Here’s the kicker: no matter how or when you exit the with block, Python will close that file… even if you “exit” it via an unhandled exception. That’s right, even if your code raises an exception and your entire program comes to a screeching halt, that file will get closed.
==========
Files - Dive Into Python 3 (The Nine Mile Walk)
- Your Highlight at location 160-162 | Added on Monday, 19 September 2016 16:15:40

Now breathe a sigh of relief, because Python handles line endings automatically by default. If you say, “I want to read this text file one line at a time,” Python will figure out which kind of line ending the text file uses and and it will all Just Work.
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1507-1508 | Added on Tuesday, 20 September 2016 08:39:55

If your goal can be accomplished with string methods, you should use them. They’re fast and simple and easy to read, and there’s a lot to be said for fast, simple, readable code.
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1508-1510 | Added on Tuesday, 20 September 2016 08:40:12

But if you find yourself using a lot of different string functions with if statements to handle special cases, or if you’re chaining calls to split() and join() to slice-and-dice your strings, you may need to move up to regular expressions.
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1540-1540 | Added on Tuesday, 20 September 2016 08:44:57

^ matches the start of a string. $ matches the end of a string.
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1549-1549 | Added on Tuesday, 20 September 2016 08:46:05

To express this in a regular expression, you use \b, which means “a word boundary must occur right here.”
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1553-1555 | Added on Tuesday, 20 September 2016 08:48:22

you can use what is called a raw string, by prefixing the string with the letter r. This tells Python that nothing in this string should be escaped; '\t' is a tab character, but r'\t' is really the backslash character \ followed by the letter t.
==========
A Practical Guide to Designing for the Web (Mark Boulton)
- Your Highlight at location 194-194 | Added on Thursday, 22 September 2016 07:24:25

is a whole different kettle of fish.
==========
A Practical Guide to Designing for the Web (Mark Boulton)
- Your Highlight at location 237-238 | Added on Thursday, 22 September 2016 07:55:23

Corporations spend thousands and thousands of pounds every year trying to achieve efficiency in departments where, in my opinion, a simple seating change would suffice.
==========
A Practical Guide to Designing for the Web (Mark Boulton)
- Your Bookmark at location 301 | Added on Thursday, 22 September 2016 08:05:21


==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 138-140 | Added on Thursday, 22 September 2016 16:47:20

This open textbook aims to fill the gap between the open-source implementations and the open-source network specifications by providing a detailed but pedagogical description of the key principles that guide the operation of the Internet.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 211-217 | Added on Thursday, 22 September 2016 16:57:41

To allow any host to send messages to any other host in the network, the easiest solution is to organise them as a full-mesh, with a direct and dedicated link between each pair of hosts. Such a physical topology is sometimes used, especially when high performance and high redundancy is required for a small number of hosts. However, it has two major drawbacks : for a network containing n hosts, each host must have n-1 physical interfaces. In practice, the number of physical interfaces on a node will limit the size of a full-mesh network that can be built for a network containing n hosts, links are required. This is possible when there are a few nodes in the same room, but rarely when they are located several kilometers apart
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 218-218 | Added on Thursday, 22 September 2016 16:57:54

A Full mesh network
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 219-220 | Added on Thursday, 22 September 2016 16:58:27

The second possible physical organisation, which is also used inside computers to connect different extension cards, is the bus. In a bus network, all hosts are attached to a shared medium, usually a cable through a single interface.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 221-223 | Added on Thursday, 22 September 2016 16:59:07

A drawback of bus-based networks is that if the bus is physically cut, then the network is split into two isolated networks. For this reason, bus-based networks are sometimes considered to be difficult to operate and maintain, especially when the cable is long and there are many places where it can break. Such a bus-based topology was used in early Ethernet networks.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 225-226 | Added on Thursday, 22 September 2016 16:59:44

A third organisation of a computer network is a star topology. In such topologies, hosts have a single physical interface and there is one physical link between each host and the center of the star.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 228-228 | Added on Thursday, 22 September 2016 17:00:03

the failure of the central node implies the failure of the network.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 229-230 | Added on Thursday, 22 September 2016 17:00:16

one node is disconnected from the network. In practice, star-shaped networks are easier to operate and maintain than bus-shaped networks. Many
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 230-232 | Added on Thursday, 22 September 2016 17:00:58

Administered from a Web interface, or through a console-like connection, the center of the star is a useful point of control (enabling or disabling devices) and an excellent observation point (usage statistics).
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 233-237 | Added on Thursday, 22 September 2016 17:01:23

Ring topology. Like the bus organisation, each host has a single physical interface connecting it to the ring. Any signal sent by a host on the ring will be received by all hosts attached to the ring. From a redundancy point of view, a single ring is not the best solution, as the signal only travels in one direction on the ring; thus if one of the links composing the ring is cut, the entire network fails. In practice, such rings have been used in local area networks, but are now often replaced by star-shaped networks.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 240-241 | Added on Thursday, 22 September 2016 17:01:51

A fifth physical organisation of a network is the tree. Such networks are typically used when a large number of customers must be connected in a very cost-effective manner.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 243-243 | Added on Thursday, 22 September 2016 17:02:00

In practice, most real networks combine part of these topologies.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 254-254 | Added on Friday, 23 September 2016 08:44:07

Broadcast is sometimes used in computer networks, but only in local area networks where the number of recipients is limited.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 255-256 | Added on Friday, 23 September 2016 08:44:16

The first and most widespread transmission mode is called unicast . In the unicast transmission mode, information is sent by one sender to one receiver.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 256-256 | Added on Friday, 23 September 2016 08:44:31

Most of today’s Internet applications rely on the unicast transmission mode.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 258-261 | Added on Friday, 23 September 2016 08:45:10

Each of these nodes receives the information from its upstream node or host, then processes and forwards it to its downstream node or host. This is called store and forward and we will see later that this concept is key in computer networks. 
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 261-262 | Added on Friday, 23 September 2016 08:45:28

A second transmission mode is multicast transmission mode. This mode is used when the same information must be sent to a set of recipients.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 298-300 | Added on Friday, 23 September 2016 10:19:54

Throughout this book, we will define a service as a set of capabilities provided by a system (and its underlying elements) to its user. A user interacts with a service through a service access point.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Bookmark at location 338 | Added on Friday, 23 September 2016 10:21:28


==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 487-492 | Added on Friday, 23 September 2016 10:30:35

Storage devices such as hard-disks also store streams of bits. There are hardware devices that process the bit stream produced by a hard-disk, but computer scientists have designed filesystems to allow applications to easily access such storage devices. These filesystems are typically divided into several layers as well. Hard-disks store sectors of 512 bytes or more. Unix filesystems group sectors in larger blocks that can contain data or inodes representing the structure of the filesystem. Finally, applications manipulate files and directories that are translated in blocks, sectors and eventually bits by the operating system.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 505-506 | Added on Friday, 23 September 2016 10:32:20

The Datalink layer allows directly connected hosts to exchange information, but it is often necessary to exchange information between hosts that are not attached to the same physical medium.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 505-507 | Added on Friday, 23 September 2016 10:32:47

The Datalink layer allows directly connected hosts to exchange information, but it is often necessary to exchange information between hosts that are not attached to the same physical medium. This is the task of the network layer. The network layer is built above the datalink layer. Network layer entities exchange packets.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 507-508 | Added on Friday, 23 September 2016 10:32:56

A packet is a finite sequence of bytes that is transported by the datalink layer inside one or more frames.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 512-514 | Added on Friday, 23 September 2016 10:33:29

Ensuring the reliable delivery of the data produced by applications is the task of the transport layer. Transport layer entities exchange segments. A segment is a finite sequence of bytes that are transported inside one or more packets.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Highlight at location 515-517 | Added on Friday, 23 September 2016 10:34:08

The most widely used transport layers on the Internet are TCP ,that provides a reliable connection-oriented bytestream transport service, and UDP ,that provides an unreliable connection-less transport service.
==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Bookmark at location 621 | Added on Friday, 23 September 2016 10:39:01


==========
Computer Networking : Principles, Protocols and Practice (Olivier Bonaventure)
- Your Bookmark at location 651 | Added on Friday, 23 September 2016 10:42:08


==========
Paging - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 144-146 | Added on Friday, 23 September 2016 10:47:39

Unix systems, and other Unix-like operating systems, use the term "swap" to describe both the act of moving memory pages between RAM and disk, and the region of a disk the pages are stored on.
==========
Paging - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 146-147 | Added on Friday, 23 September 2016 10:47:46

In some of those systems, it is common to dedicate an entire partition of a hard disk to swapping.
==========
Virtual memory - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 23-26 | Added on Friday, 23 September 2016 10:53:58

The primary benefits of virtual memory include freeing applications from having to manage a shared memory space, increased security due to memory isolation, and being able to conceptually use more memory than might be physically available, using the technique of paging.
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 70-74 | Added on Friday, 23 September 2016 11:12:08

There are multiple levels of health monitoring, each with increasing granularity and focus. A basic monitor would simply PING the host itself. If the host does not respond to PING, it is a good assumption that any services defined on the host are probably down and should be removed from the cluster of available services. Unfortunately, even if the host responds to PING, it doesn't necessarily mean the service itself is working. Therefore most devices can do "service PINGs" of some kind, ranging from simple TCP connections all the way to interacting with the application via a scripted or intelligent interaction. These higher-level health monitors not only provide
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 70-76 | Added on Friday, 23 September 2016 11:12:15

There are multiple levels of health monitoring, each with increasing granularity and focus. A basic monitor would simply PING the host itself. If the host does not respond to PING, it is a good assumption that any services defined on the host are probably down and should be removed from the cluster of available services. Unfortunately, even if the host responds to PING, it doesn't necessarily mean the service itself is working. Therefore most devices can do "service PINGs" of some kind, ranging from simple TCP connections all the way to interacting with the application via a scripted or intelligent interaction. These higher-level health monitors not only provide greater confidence in the availability of the actual services (as opposed to the host), but they also allow the load balancer to differentiate between multiple services on a single host.
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 76-77 | Added on Friday, 23 September 2016 11:12:59

The load balancer understands that while one service might be unavailable, other services on the same host might be working just fine and should still be considered as valid destinations for user traffic.
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 100-104 | Added on Friday, 23 September 2016 11:21:27

Increasingly more common, however, is when the client uses multiple short-lived TCP connections (for example, HTTP) to accomplish a single task. In some cases, like standard web browsing, it doesn't matter and each new request can go to any of the back-end service hosts; however, there are many more instances (XML, e-commerce "shopping cart," HTTPS, and so on) where it is extremely important that multiple connections from the same user go to the same back-end service host and not be load balanced. This concept is called persistence, or server affinity.
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 104-106 | Added on Friday, 23 September 2016 11:21:54

For example, in modern HTTP transactions, the server can specify a "keep-alive" connection, which turns those multiple short-lived connections into a single long-lived connection that can be handled just like the other long-lived connections
==========
Load Balancing 101: Nuts and Bolts (f5.com)
- Your Highlight at location 106-108 | Added on Friday, 23 September 2016 11:22:05

However, this provides little relief. Even worse, as the use of web services increases, keeping all of these connections open longer than necessary would strain the resources of the entire system. In these cases, most load balancers provide other mechanisms for creating artificial server affinity.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 92-94 | Added on Saturday, 24 September 2016 20:47:09

For more information on JS natives and "boxing," see Chapter 3 of the Types & Grammar title of this series. To better understand the prototype of an object, see Chapter 5 of the this & Object Prototypes title of this series.
==========
getify/You-Dont-Know-JS (getify)
- Your Bookmark at location 387 | Added on Sunday, 25 September 2016 17:03:09


==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 66-67 | Added on Monday, 26 September 2016 11:32:12

UDP does not guarantee packet delivery, and is therefore not reliable. However, UDP has less network overhead and can be used for applications such as video and audio streaming, where reliability is not critical.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 84-84 | Added on Monday, 26 September 2016 11:34:45

Apache HTTP server is a popular industrial-strength production server, produced by Apache Software Foundation
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 89-91 | Added on Monday, 26 September 2016 11:35:41

Read "Apache How-to" on how to install and configuare Apache HTTP server; or "Tomcat How-to" to install and get started with Apache Tomcat Server.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 140-141 | Added on Monday, 26 September 2016 11:40:32

"Telnet" is a very useful networking utility. You can use telnet to establish a TCP connection with a server; and issue raw HTTP requests.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 241-242 | Added on Monday, 26 September 2016 11:49:36

If an optional header is misspelled or invalid, it will be ignored by the server.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 250-253 | Added on Monday, 26 September 2016 11:49:59

HTTP/1.1 server supports so-called virtual hosts. That is, the same physical server could house several virtual hosts, with different hostnames (e.g., www.nowhere123.com and www.test909.com) and their own dedicated document root directories. Hence, in an HTTP/1.1 GET request, it is mandatory to include a request header called "Host", to select one of the virtual hosts.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 254-255 | Added on Monday, 26 September 2016 11:50:12

HTTP/1.1 maintains persistent (or keep-alive) connection by default to improve the network efficiency. You can use a request header "Connection: Close" to ask the server to close the TCP connection once the response is delivered.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 273-275 | Added on Monday, 26 September 2016 11:55:30

Host: domain-name - HTTP/1.1 supports virtual hosts. Multiple DNS names (e.g., www.nowhere123.com and www.nowhere456.com) can reside on the same physical server, with their own document root directories. Host header is mandatory in HTTP/1.1 to select one of the hosts.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 336-339 | Added on Monday, 26 September 2016 12:04:53

HEAD request is similar to GET request. However, the server returns only the response header without the response body, which contains the actual document. HEAD request is useful for checking the headers, such as Last-Modified, Content-Type, Content-Length, before sending a proper GET request to retrieve the document.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 353-353 | Added on Monday, 26 September 2016 12:07:18

A client can send a TRACE request to ask the server to return a diagnostic trace.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 397-398 | Added on Monday, 26 September 2016 12:10:56

GET request-URI?query-string HTTP-version
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 399-401 | Added on Monday, 26 September 2016 12:11:12

The amount of data you could append behind request-URI is limited. If this amount exceed a server-specific threshold, the server would return an error "414 Request URI too Large". The URL-encoded query string would appear on the address box of the browser.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 455-458 | Added on Monday, 26 September 2016 12:16:19

POST request has the following advantage compared with the GET request in sending the query string: The amount of data that can be posted is unlimited, as they are kept in the request body, which is often sent to the server in a separate data stream. The query string is not shown on the address box of the browser.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 458-460 | Added on Monday, 26 September 2016 12:16:46

Note that although the password is not shown on the browser’s address box, it is transmitted to the server in clear text, and subjected to network sniffing. Hence, sending password using a POST request is absolutely not secure.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 484-485 | Added on Monday, 26 September 2016 12:18:48

The HTTP CONNECT request is used to ask a proxy to make a connection to anther host and simply relay the content, rather than attempting to parse or cache the message. This is often used to make a connection through a proxy.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 486-486 | Added on Monday, 26 September 2016 12:18:55

PUT: Ask the server to store the data.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 487-487 | Added on Monday, 26 September 2016 12:18:59

DELETE: Ask the server to delete the data.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 549-552 | Added on Monday, 26 September 2016 12:20:51

In HTTP/1.0, the server closes the TCP connection after delivering the response by default (Connection: Close). That is, each TCP connection services only one request. This is not efficiency as many HTML pages contain hyperlinks (via <a href="url"> tag) to other resources (such as images, scripts – either locally or from a remote server). If you download a page containing 5 inline images, the browser has to establish TCP connection 6 times to the same server.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 552-554 | Added on Monday, 26 September 2016 12:21:09

The client can negotiate with the server and ask the server not to close the connection after delivering the response, so that another request can be sent through the same connection. This is known as persistent connection (or keep-alive connection). Persistent connections greatly enhance the efficiency of the network.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 558-562 | Added on Monday, 26 September 2016 12:22:12

Persistent connection is extremely useful for web pages with many small inline images and other associated data, as all these can be downloaded using the same connection. The benefits for persistent connection are: CPU time and resource saving in opening and closing TCP connection in client, proxy, gateways, and the origin server. Request can be "pipelined". That is, a client can make several requests without waiting for each response, so as to use the network more efficiently. Faster response as no time needed to perform TCP’s connection opening handshaking.
==========
In Introduction to HTTP Basics (www.ntu.edu.sg)
- Your Highlight at location 562-564 | Added on Monday, 26 September 2016 12:22:23

In Apache HTTP server, several configuration directives are related to the persistent connections: The KeepAlive directive decides whether to support persistent connections. This takes value of either On or Off.
==========
HTTP to HTTPS | What is a HTTPS Certificate (instantssl.com)
- Your Highlight at location 12-14 | Added on Monday, 26 September 2016 12:28:26

Both the TLS and SSL protocols use what is known as an 'asymmetric' Public Key Infrastructure (PKI) system. An asymmetric system uses two 'keys' to encrypt communications, a 'public' key and a 'private' key. Anything encrypted with the public key can only be decrypted by the private key and vice-versa.
==========
HTTP to HTTPS | What is a HTTPS Certificate (instantssl.com)
- Your Highlight at location 15-16 | Added on Monday, 26 September 2016 12:29:22

In the case of a website, the private key remains securely ensconced on the web server.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 14-16 | Added on Monday, 26 September 2016 12:32:20

The really, really clever part is that anyone can intercept every single one of the messages you exchange with a server, including the ones where you are agreeing on the key and encryption strategy to use, and still not be able to read any of the actual data you send.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 55-56 | Added on Monday, 26 September 2016 12:38:31

SSL certificates have an associated public/private key pair. The public key is distributed as part of the certificate, and the private key is kept incredibly safely guarded.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 57-58 | Added on Monday, 26 September 2016 12:39:16

The client uses the server’s public key to encrypt the symmetric key and send it securely to the server, and the server uses its private key to decrypt it. Anyone can encrypt using the public key, but only the server can decrypt using the private key.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 83-83 | Added on Monday, 26 September 2016 12:43:15

Order is maintained as long as the attacker doesn’t control a trusted certificate’s private key.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 83-84 | Added on Monday, 26 September 2016 12:43:30

If the client is somehow tricked into trusting a certificate and public key whose private key is controlled by an attacker, trouble begins.
==========
How does HTTPS actually work? | Robert Heaton (robertheaton.com)
- Your Highlight at location 85-87 | Added on Monday, 26 September 2016 12:43:51

The magic of public-key cryptography means that an attacker can watch every single byte of data exchanged between your client and the server and still have no idea what you are saying to each other beyond roughly how much data you are exchanging.
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 19-23 | Added on Monday, 26 September 2016 13:00:41

Quite simply, a cookie is a small text file that is stored by a browser on the user’s machine. Cookies are plain text; they contain no executable code. A web page or server instructs a browser to store this information and then send it back with each subsequent request based on a set of rules. Web servers can then use this information to identify individual users. Most sites requiring a login will typically set a cookie once your credentials have been verified, and you are then free to navigate to all parts of the site so long as that cookie is present and validated
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 30-33 | Added on Monday, 26 September 2016 13:02:19

When a cookie is present, and the optional rules allow, the cookie value is sent to the server with each subsequent request. The cookie value is stored in an HTTP header called Cookie and contains just the cookie value without any of the other options. Such as: Cookie: value
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 46-47 | Added on Monday, 26 September 2016 13:04:54

Without the expires option, a cookie has a lifespan of a single session.
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 59-61 | Added on Monday, 26 September 2016 13:07:18

The value set for the domain option must be part of the host name that is sending the Set-Cookie header. I couldn’t, for example, set a cookie on google.com because that would introduce a security issue. Invalid domain options are simply ignored.
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 69-71 | Added on Monday, 26 September 2016 13:08:26

The last option is secure. Unlike the other options, this is just a flag and has no additional value specified. A secure cookie will only be sent to the server when a request is made using SSL and the HTTPS protocol. The idea that the contents of the cookie are of high value and could be potentially damaging to transmit as clear text.
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 100-104 | Added on Monday, 26 September 2016 13:11:23

There are a few reasons why a cookie might be automatically removed by the browser: Session cookies are removed when the session is over (browser is closed). Persistent cookies are removed when the expiration date and time have been reached. If the browser’s cookie limit is reached, then cookies will be removed to make room for the most recently created cookie. For more details, see my post on cookie restrictions.
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 106-107 | Added on Monday, 26 September 2016 13:12:58

There are two types of restrictions: number of cookies and total cookie size. The original specification placed a limit of 20 cookies
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 118-121 | Added on Monday, 26 September 2016 13:13:57

You can create, manipulate, and remove cookies in JavaScript by using the document.cookie property. This property acts as the Set-Cookie header when assigned to and as the Cookie header when read from. When creating a cookie, you must use a string that’s in the same format that Set-Cookie expects:
==========
HTTP cookies explained - NCZOnline (Nicholas C. Zakas)
- Your Highlight at location 136-138 | Added on Monday, 26 September 2016 13:16:51

The idea behind HTTP-only cookies is to instruct a browser that a cookie should never be accessible via JavaScript through the document.cookie property. This feature was designed as a security measure to help prevent cross-site scripting (XSS) attacks perpetrated by stealing cookies via JavaScript
==========
Cookies vs Tokens: The Definitive Guide (Ado Kukic)
- Your Highlight at location 65-68 | Added on Monday, 26 September 2016 17:27:07

Native mobile platforms and cookies do not mix well. While possible, there are many limitations and considerations to using cookies with mobile platforms. Tokens on the other hand are much easier to implement on both iOS and Android. Tokens are also easier to implement for Internet of Things applications and services that do not have a concept of a cookie store.
==========
Cross-origin resource sharing - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 43-45 | Added on Monday, 26 September 2016 18:32:09

A wildcard same-origin policy is also widely and appropriately used in the object-capability model, where pages have unguessable URLs and are meant to be accessible to anyone who knows the secret.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 168-170 | Added on Monday, 26 September 2016 19:33:23

Scope is the set of rules that determines where and how a variable (identifier) can be looked-up. This look-up may be for the purposes of assigning to the variable, which is an LHS (left-hand-side) reference, or it may be for the purposes of retrieving its value, which is an RHS (right-hand-side) reference.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 172-175 | Added on Monday, 26 September 2016 19:33:44

The JavaScript Engine first compiles code before it executes, and in so doing, it splits up statements like var a = 2; into two separate steps: First, var a to declare it in that Scope. This is performed at the beginning, before code execution. Later, a = 2 to look up the variable (LHS reference) and assign to it if found.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 40-41 | Added on Monday, 26 September 2016 20:33:46

Scope look-up stops once it finds the first match.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 43-47 | Added on Monday, 26 September 2016 20:35:18

Note: Global variables are also automatically properties of the global object (window in browsers, etc.), so it is possible to reference a global variable not directly by its lexical name, but instead indirectly as a property reference of the global object. window.a This technique gives access to a global variable which would otherwise be inaccessible due to it being shadowed. However, non-global shadowed variables cannot be accessed.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 47-48 | Added on Monday, 26 September 2016 20:35:38

No matter where a function is invoked from, or even how it is invoked, its lexical scope is only defined by where the function was declared.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 113-115 | Added on Tuesday, 27 September 2016 08:55:17

The with statement takes an object, one which has zero or more properties, and treats that object as if it is a wholly separate lexical scope, and thus the object's properties are treated as lexically defined identifiers in that "scope".
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 117-119 | Added on Tuesday, 27 September 2016 08:56:12

While the eval(..) function can modify existing lexical scope if it takes a string of code with one or more declarations in it, the with statement actually creates a whole new lexical scope out of thin air, from the object you pass to it.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 128-129 | Added on Tuesday, 27 September 2016 08:57:38

Both eval(..) and with cheat the otherwise author-time defined lexical scope by modifying or creating new lexical scope at runtime.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 141-143 | Added on Tuesday, 27 September 2016 08:59:26

Lexical scope means that scope is defined by author-time decisions of where functions are declared. The lexing phase of compilation is essentially able to know where and how all identifiers are declared, and thus predict how they will be looked-up during execution.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 33-36 | Added on Tuesday, 27 September 2016 09:07:30

Why would "hiding" variables and functions be a useful technique? There's a variety of reasons motivating this scope-based hiding. They tend to arise from the software design principle "Principle of Least Privilege" [^note-leastprivilege], also sometimes called "Least Authority" or "Least Exposure". This principle states that in the design of software, such as the API for a module/object, you should expose only what is minimally necessary, and "hide" everything else.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 68-70 | Added on Tuesday, 27 September 2016 09:15:33

A particularly strong example of (likely) variable collision occurs in the global scope. Multiple libraries loaded into your program can quite easily collide with each other if they don't properly hide their internal/private functions and variables.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 70-73 | Added on Tuesday, 27 September 2016 09:15:53

Such libraries typically will create a single variable declaration, often an object, with a sufficiently unique name, in the global scope. This object is then used as a "namespace" for that library, where all specific exposures of functionality are made as properties off that object (namespace), rather than as top-level lexically scoped identifiers themselves.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 77-79 | Added on Tuesday, 27 September 2016 09:16:38

Another option for collision avoidance is the more modern "module" approach, using any of various dependency managers. Using these tools, no libraries ever add any identifiers to the global scope, but are instead required to have their identifier(s) be explicitly imported into another specific scope through usage of the dependency manager's various mechanisms.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 111-112 | Added on Tuesday, 27 September 2016 09:20:52

Function expressions can be anonymous, but function declarations cannot omit the name -- that would be illegal JS grammar.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 126-128 | Added on Tuesday, 27 September 2016 09:32:11

Now that we have a function as an expression by virtue of wrapping it in a ( ) pair, we can execute that function by adding another () on the end, like (function foo(){ .. })(). The first enclosing ( ) pair makes the function an expression, and the second () executes the function.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 129-130 | Added on Tuesday, 27 September 2016 09:32:22

Immediately Invoked Function Expression.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 162-164 | Added on Tuesday, 27 September 2016 09:36:51

While functions are the most common unit of scope, and certainly the most wide-spread of the design approaches in the majority of JS in circulation, other units of scope are possible, and the usage of these other scope units can lead to even better, cleaner to maintain code.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 168-171 | Added on Tuesday, 27 September 2016 09:37:34

We declare the variable i directly inside the for-loop head, most likely because our intent is to use i only within the context of that for-loop, and essentially ignore the fact that the variable actually scopes itself to the enclosing scope (function or global). That's what block-scoping is all about. Declaring variables as close as possible, as local as possible, to where they will be used.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 205-207 | Added on Tuesday, 27 September 2016 09:42:55

The let keyword attaches the variable declaration to the scope of whatever block (commonly a { .. } pair) it's contained in. In other words, let implicitly hijacks any block's scope for its variable declaration.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 239-240 | Added on Tuesday, 27 September 2016 09:58:29

// anything declared inside this block can go away after! { let someReallyBigData = { .. }; process( someReallyBigData ); }
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 244-244 | Added on Tuesday, 27 September 2016 09:58:56

Declaring explicit blocks for variables to locally bind to is a powerful tool that you can add to your code toolbox.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 245-245 | Added on Tuesday, 27 September 2016 09:59:09

A particular case where let shines is in the for-loop case as we discussed previously.
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 250-253 | Added on Tuesday, 27 September 2016 09:59:45

Here's another way of illustrating the per-iteration binding behavior that occurs: { let j; for (j=0; j<10; j++) { let i = j; // re-bound for each iteration! console.log( i ); }
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 250-253 | Added on Tuesday, 27 September 2016 10:00:04

Here's another way of illustrating the per-iteration binding behavior that occurs: { let j; for (j=0; j<10; j++) { let i = j; // re-bound for each iteration! console.log( i ); } } The
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 269-274 | Added on Tuesday, 27 September 2016 10:02:04

In addition to let, ES6 introduces const, which also creates a block-scoped variable, but whose value is fixed (constant). Any attempt to change that value at a later time results in an error. var foo = true; if (foo) { var a = 2; const b = 3; // block-scoped to the containing `if` a = 3; // just fine! b = 4; // error! } console.log( a ); // 3 console.log( b ); // ReferenceError!
==========
getify/You-Dont-Know-JS (getify)
- Your Highlight at location 275-284 | Added on Tuesday, 27 September 2016 10:02:56

Review (TL;DR) Functions are the most common unit of scope in JavaScript. Variables and functions that are declared inside another function are essentially "hidden" from any of the enclosing "scopes", which is an intentional design principle of good software. But functions are by no means the only unit of scope. Block-scope refers to the idea that variables and functions can belong to an arbitrary block (generally, any { .. } pair) of code, rather than only to the enclosing function. Starting with ES3, the try/catch structure has block-scope in the catch clause. In ES6, the let keyword (a cousin to the var keyword) is introduced to allow declarations of variables in any arbitrary block of code. if (..) { let a = 2; } will declare a variable a that essentially hijacks the scope of the if's { .. } block and attaches itself there. Though some seem to believe so, block scope should not be taken as an outright replacement of var function scope. Both functionalities co-exist, and developers can and should use both function-scope and block-scope techniques where respectively appropriate to produce better, more readable/maintainable code.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 3057-3058 | Added on Tuesday, 27 September 2016 11:53:23

Private attributes aren’t rigorously enforced by the Python compiler.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 3183-3185 | Added on Tuesday, 27 September 2016 13:08:31

Have your custom container types inherit from the interfaces defined in collections.abc to ensure that your classes match required interfaces and behaviors.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 3195-3197 | Added on Tuesday, 27 September 2016 13:10:54

Use Plain Attributes Instead of Get and Set Methods Programmers coming to Python from other languages may naturally try to implement explicit getter and setter methods in their classes.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 4106-4108 | Added on Tuesday, 27 September 2016 13:21:05

Concurrency is when a computer does many different things seemingly at the same time. For example, on a computer with one CPU core, the operating system will rapidly change which program is running on the single processor. This interleaves execution of the programs, providing the illusion that the programs are running simultaneously.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 4108-4111 | Added on Tuesday, 27 September 2016 13:21:22

Parallelism is actually doing many different things at the same time. Computers with multiple CPU cores can execute multiple programs simultaneously. Each CPU core runs the instructions of a separate program, allowing each program to make forward progress during the same instant.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5095-5097 | Added on Wednesday, 28 September 2016 17:38:52

Decorators have the ability to run additional code before and after any calls to the functions they wrap. This allows them to access and modify input arguments and return values. This functionality can be useful for enforcing semantics, debugging, registering functions, and more.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5116-5119 | Added on Wednesday, 28 September 2016 17:40:35

The @ symbol is equivalent to calling the decorator on the function it wraps and assigning the return value to the original name in the same scope.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5143-5146 | Added on Wednesday, 28 September 2016 17:45:09

The solution is to use the wraps helper function from the functools built-in module. This is a decorator that helps you write decorators. Applying it to the wrapper function will copy all of the important metadata about the inner function to the outer function.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5162-5164 | Added on Wednesday, 28 September 2016 17:47:18

Decorators are Python syntax for allowing one function to modify another function at runtime.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5171-5172 | Added on Wednesday, 28 September 2016 17:47:51

The with statement in Python is used to indicate when code is running in a special context.
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 122-127 | Added on Wednesday, 28 September 2016 18:06:35

The nlargest() and nsmallest() functions are most appropriate if you are trying to find a relatively small number of items. If you are simply trying to find the single smallest or largest item (N=1), it is faster to use min() and max(). Similarly, if N is about the same size as the collection itself, it is usually faster to sort it first and take a slice (i.e., use sorted(items)[:N] or sorted(items)[-N:]). It should be noted that the actual implementation of nlargest() and nsmallest() is adaptive in how it operates and will carry out some of these optimizations on your behalf (e.g., using sorting if N is close to the same size as the input).
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 195-196 | Added on Wednesday, 28 September 2016 18:17:26

To control the order of items in a dictionary, you can use an OrderedDict from the collections module. It exactly preserves the original insertion order of data when iterating.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 22-27 | Added on Thursday, 29 September 2016 14:14:59

Python includes a couple of functions that let us look at our namespaces. Let’s write a simple function to investigate the difference between local and global scope. >>> a_string = "This is a global variable" >>> def foo(): ... print locals() >>> print globals() # doctest: +ELLIPSIS
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 29-30 | Added on Thursday, 29 September 2016 14:15:26

The builtin globals function returns a dictionary containing all the variable names Python knows about.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 48-48 | Added on Thursday, 29 September 2016 14:17:52

As we can see, global variables can be accessed (even changed if they are mutable data types) but not (by default) assigned to.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 48-49 | Added on Thursday, 29 September 2016 14:18:06

At point #1 inside our function we are actually creating a new local variable that "shadows" the global variable with the same name.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 59-60 | Added on Thursday, 29 September 2016 14:19:15

The namespace created for our function foo is created from scratch each time the function is called and it is destroyed when the function ends.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 61-62 | Added on Thursday, 29 September 2016 14:20:28

The parameter names become local variables in our function.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 66-67 | Added on Thursday, 29 September 2016 14:21:00

For the full skinny you’ll want to see the Python documentation
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 112-112 | Added on Thursday, 29 September 2016 14:30:20

You may never have thought of your functions as having attributes - but functions are objects in Python, just like everything else.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 160-162 | Added on Thursday, 29 September 2016 14:38:43

Python supports a feature called function closures which means that inner functions defined in non-global scope remember what their enclosing namespaces looked like at definition time.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 172-173 | Added on Thursday, 29 September 2016 14:40:07

From this example you can see that closures - the fact that functions remember their enclosing scope - can be used to build custom functions that have, essentially, a hard coded argument.
==========
simeonfranklin.com - Understanding Python Decorators in 12 Easy Steps! (simeonfranklin.com)
- Your Highlight at location 180-181 | Added on Thursday, 29 September 2016 14:41:14

A decorator is just a callable that takes a function as an argument and returns a replacement function.
==========
Why the World Is Not Falling Apart (Steven Pinker and Andrew Mack)
- Your Highlight at location 21-25 | Added on Thursday, 29 September 2016 14:59:24

News is about things that happen, not things that don’t happen. We never see a reporter saying to the camera, “Here we are, live from a country where a war has not broken out”—or a city that has not been bombed, or a school that has not been shot up. As long as violence has not vanished from the world, there will always be enough incidents to fill the evening news. And since the human mind estimates probability by the ease with which it can recall examples, newsreaders will always perceive that they live in dangerous times.
==========
Why the World Is Not Falling Apart (Steven Pinker and Andrew Mack)
- Your Highlight at location 34-35 | Added on Thursday, 29 September 2016 15:02:24

The only sound way to appraise the state of the world is to count. How many violent acts has the world seen compared with the number of opportunities?
==========
Why the World Is Not Falling Apart (Steven Pinker and Andrew Mack)
- Your Highlight at location 67-68 | Added on Thursday, 29 September 2016 15:12:36

Rates of rape or sexual assault and of violence against intimate partners have been sinking for decades, and are now a quarter or less of their peaks in the past.
==========
Why the World Is Not Falling Apart (Steven Pinker and Andrew Mack)
- Your Highlight at location 199-201 | Added on Thursday, 29 September 2016 15:26:54

* * * The world is not falling apart. The kinds of violence to which most people are vulnerable—homicide, rape, battering, child abuse—have been in steady decline in most of the world.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 220-223 | Added on Thursday, 29 September 2016 15:29:39

Computer programming is taught in courses. The excellent books: The Pragmatic Programmer [Prag99], Code Complete [CodeC93], Rapid Development [RDev96], and Extreme Programming Explained [XP99] all teach computer programming and the larger issues of being a good programmer. The essays of Paul Graham [PGSite] and Eric Raymond [Hacker] should certainly be read before or along with this article. This
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 370-374 | Added on Thursday, 29 September 2016 15:32:55

The common ways of looking into the ‘innards’ of an executing program can be categorized as: Using a debugging tool, Printlining - Making a temporary modification to the program, typically adding lines that print information out, and Logging - Creating a permanent window into the programs execution in the form of a log.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 387-388 | Added on Thursday, 29 September 2016 15:35:51

If there is a single key to debugging it is to use the divide and conquer technique on the mystery.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 395-397 | Added on Thursday, 29 September 2016 15:37:22

The key to divide and conquer as a debugging technique is the same as it is for algorithm design: as long as you do a good job splitting the mystery in the middle, you won't have to split it too many times, and you will be debugging quickly. But what is the middle of a mystery? This is where true creativity and experience comes in.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 403-404 | Added on Thursday, 29 September 2016 15:39:43

‘Which single unknown line makes my program crash?’, you can ask yourself: ‘Is the unknown line executed before or after this line that I judge to be executed in the middle of the running program?’
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 414-416 | Added on Thursday, 29 September 2016 15:41:52

In fixing a bug, you want to make the smallest change that fixes the bug. You may see other things that need improvement; but don't fix those at the same time. Attempt to employ the scientific method of changing one thing and only one thing at a time.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 419-422 | Added on Thursday, 29 September 2016 15:43:25

Sometimes it is unclear what the program should do or what the original author intended. In this case, you must exercise your experience and judgment and assign your own meaning to the code. Decide what it should do, and comment it or clarify it in some way and then make the code conform to your meaning. This is an intermediate or advanced skill that is sometimes harder than writing the original function in the first place, but the real world is often messy. You may have to fix a system you cannot rewrite.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 427-428 | Added on Thursday, 29 September 2016 15:43:51

Absolute beginners must understand and use logs because their knowledge of programming is limited; system architects must understand and use logs because of the complexity of the system.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 434-437 | Added on Thursday, 29 September 2016 15:46:19

The amount to output into the log is always a compromise between information and brevity. Too much information makes the log expensive and produces scroll blindness, making it hard to find the information you need. Too little information and it may not contain what you need. For this reason, making what is output configurable is very useful.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 451-453 | Added on Thursday, 29 September 2016 15:58:58

There is a famous dictum that 90% of the time will be spent in 10% of the code. I would add to that the importance of input/output expense (I/O) to performance issues. Often most of the time is spent in I/O in one way or another. Finding the expensive I/O and the expensive 10% of the code is a good first step to building your mental model.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 467-468 | Added on Thursday, 29 September 2016 16:00:34

Under time-to-market pressure, it is both wise and effective to choose a solution that gets the job done simply and quickly, but less efficiently than some other solution. However, performance is a part of usability, and often it must eventually be considered more carefully.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 476-477 | Added on Thursday, 29 September 2016 16:01:43

Often, the bottlenecks in performance will be an example of counting cows by counting legs and dividing by four, instead of counting heads.
==========
How to be a Programmer (Braydie Grove)
- Your Bookmark at location 474 | Added on Thursday, 29 September 2016 16:01:52


==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 501-504 | Added on Thursday, 29 September 2016 16:19:57

For a lot of problems, processors are fast compared to the cost of communicating with a hardware device. This cost is usually abbreviated I/O, and can include network cost, disk I/O, database queries, file I/O, and other use of some hardware not very close to the processor. Therefore building a fast system is often more a question of improving I/O than improving the code in some tight loop, or even improving an algorithm.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 504-508 | Added on Thursday, 29 September 2016 16:20:30

There are two very fundamental techniques to improving I/O: caching and representation. Caching is avoiding I/O (generally avoiding the reading of some abstract value) by storing a copy of that value locally so no I/O is performed to get the value. The first key to caching is to make it crystal clear which data is the master and which are copies. There is only one master - period. Caching brings with it the danger that the copy sometimes can't reflect changes to the master instantaneously.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 524-527 | Added on Thursday, 29 September 2016 16:25:41

But even with garbage collection, you can fill up all memory with garbage. A classic mistake is to use a hash table as a cache and forget to remove the references in the hash table. Since the reference remains, the referent is non-collectable but useless. This is called a memory leak. You should look for and fix memory leaks early.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 528-530 | Added on Thursday, 29 September 2016 16:26:43

The creation of new objects is moderately expensive on any system. Memory allocated directly in the local variables of a subroutine, however, is usually cheap because the policy for freeing it can be very simple. You should avoid unnecessary object creation.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 575-576 | Added on Thursday, 29 September 2016 16:33:00

People who write books on the subject have a vested interest in making it seem scientific. Don't become dogmatic about particular design styles.
==========
How to be a Programmer (Braydie Grove)
- Your Bookmark at location 578 | Added on Thursday, 29 September 2016 16:33:05


==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 581-582 | Added on Thursday, 29 September 2016 16:36:12

...the harm was done: the topic became known as “computer science” - which, actually, is like referring to surgery as “knife science” - and it was firmly implanted in people's minds that computing science is about machines and their peripheral equipment.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 643-644 | Added on Thursday, 29 September 2016 16:46:34

there are big risks that cannot be evaluated, it is your duty to state so forcefully enough that your manager does not commit to them and then become embarrassed when the risk occurs.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 653-653 | Added on Thursday, 29 September 2016 16:47:32

the ratio of drivel to truth
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 656-659 | Added on Thursday, 29 September 2016 16:48:59

If you need to know how to do something that is not trivial get two or three books on the subject and read them. You might learn how to do something trivial, like install a software package, from the Internet. You can even learn important things, like good programming technique, but you can easily spend more time searching and sorting the results and attempting to divine the authority of the results than it would take to read the pertinent part of a solid book.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 675-679 | Added on Thursday, 29 September 2016 16:51:45

Asking someone a question accomplishes far more than just receiving the answer. The person learns about you, both by enjoying your presence and hearing the particular question. You learn about the person in the same way, and you may learn the answer you seek. This is usually far more important than your question. However, the value of this diminishes the more you do it. You are, after all, using the most precious commodity a person has: their time.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 683-684 | Added on Thursday, 29 September 2016 16:52:48

little. It may be uncomfortable, but I believe you have a duty to talk a little bit to all your superiors, each month, no matter what.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 689-691 | Added on Thursday, 29 September 2016 16:53:58

A summer intern in a highly technical position can't be expected to accomplish too much; they can be expected to pester the hell out of everybody there. So why is this tolerated? Because the pestered are receiving something important from the intern. They get a chance to show-off a little.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 693-696 | Added on Thursday, 29 September 2016 16:55:19

You should ask people for a little bit of their wisdom and judgement whenever you honestly believe they have something to say. This flatters them and you will learn something and teach them something. A good programmer does not often need the advice of a Vice President of Sales, but if you ever do, you be sure to ask for it. I once asked to listen in on a few sales calls to better understand the job of our sales staff. This took no more than 30 minutes but I think that small effort made an impression on the sales force.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 698-699 | Added on Thursday, 29 September 2016 16:55:42

Life is too short to write crap nobody will read; if you write crap, nobody will read it.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 699-701 | Added on Thursday, 29 September 2016 16:56:09

Therefore a little good documentation is best. Managers often don't understand this, because even bad documentation gives them a false sense of security that they are not dependent on their programmers. If someone absolutely insists that you write truly useless documentation, say 'yes' and quietly begin looking for a better job.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 703-704 | Added on Thursday, 29 September 2016 16:57:21

The truth is cold and hard: documentation, like testing, can take many times longer than developing code.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 710-711 | Added on Thursday, 29 September 2016 16:58:20

write self-explanatory code and only document code in the places that you cannot make it clear by writing the code itself. There are two good reasons for this. First, anyone who needs to see code-level documentation will in most cases be able to and prefer to read the code anyway.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 714-723 | Added on Thursday, 29 September 2016 16:59:38

How does one write self-explanatory code? What does that even mean? It means: Writing code knowing that someone will have to read it; Applying the golden rule; Choosing a solution that is straightforward, even if you could get by with another solution faster; Sacrificing small optimizations that obfuscate the code; Thinking about the reader and spending some of your precious time to make it easier on her; and Not ever using a function name like  foo , bar , or  doIt !
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 754-756 | Added on Thursday, 29 September 2016 17:06:12

Unit testing, the testing of an individual piece of coded functionality by the team that wrote it, is a part of coding, not something different from it. Part of designing the code is designing how it will be tested.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 767-769 | Added on Thursday, 29 September 2016 17:07:52

Computer programming is an activity that is also a culture. The unfortunate fact is that it is not a culture that values mental or physical health very much.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 777-780 | Added on Thursday, 29 September 2016 17:09:38

personally, that's any more than 60 hours a week. I personally think a programmer should exercise noblesse oblige and shoulder a heavy burden. However, it is not a programmer's duty to be a patsy. The sad fact is programmers are often asked to be patsies in order to put on a show for somebody, for example a manager trying to impress an executive.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 881-885 | Added on Thursday, 29 September 2016 18:31:36

Time (processor cycles) and space (memory) can be traded off against each other. Engineering is about compromise, and this is a fine example. It is not always systematic. In general, however, one can save space by encoding things more tightly, at the expense of more computation time when you have to decode them. You can save time by caching, that is, spending space to store a local copy of something, at the expense of having to maintain the consistency of the cache. You can sometimes save time by maintaining more information in a data structure. This usually costs a small amount of space, but may complicate the algorithm.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 887-888 | Added on Thursday, 29 September 2016 18:32:07

improving something that is not a problem will not make any noticeable difference and will create a test burden.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 888-891 | Added on Thursday, 29 September 2016 18:32:30

Memory on modern computers appears cheap, because unlike processor time, you can't see it being used until you hit the wall; but then failure is catastrophic. There are also other hidden costs to using memory, such as your effect on other programs that must be resident, and the time to allocate and deallocate it.
==========
How to be a Programmer (Braydie Grove)
- Your Bookmark at location 926 | Added on Thursday, 29 September 2016 18:43:26


==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 943-945 | Added on Saturday, 1 October 2016 10:26:08

A good mentor is no replacement for doing things yourself, but is a lot better than a book. What can you offer a potential mentor in exchange for their knowledge? At a minimum, you should offer to study hard so their time won't be wasted.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 998-998 | Added on Saturday, 1 October 2016 10:46:10

data is the core value of every programming activity. Whatever you do in your programs, you are either moving around or modifying data.
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 1022-1028 | Added on Saturday, 1 October 2016 10:53:17

Let's suppose that your task is to find all the words in a dictionary with more than three anagrams, where an anagram must be another word in the same dictionary. If you think of it as a computational task, you will end up with an endless effort, trying to work out all the combinations of each word and then comparing it to the other words in the list. However, if you analyze the data at hand, you'll realize that each word may be represented by a record containing the word itself and a sorted array of its letters as ID. Armed with such knowledge, finding anagrams means just sorting the list on the additional field and picking up the ones that share the same ID. The brute force algorithm may take several days to run, while the smart one is just a matter of a few seconds. Remember this example the next time you are facing an intractable problem.
==========
Python progression path - From apprentice to guru - Stack Overflow (stackoverflow.com)
- Your Highlight at location 77-83 | Added on Saturday, 1 October 2016 15:51:12

Check out Peter Norvig's essay on becoming a master programmer in 10 years: http://norvig.com/21-days.html. I'd wager it holds true for any language. Understand Introspection write a dir() equivalent write a type() equivalent figure out how to "monkey-patch" use the dis module to see how various language constructs work Doing these things will give you some good theoretical knowledge about how python is implemented give you some good practical experience in lower-level programming give you a good
==========
How to be a Programmer (Braydie Grove)
- Your Highlight at location 1349-1350 | Added on Saturday, 1 October 2016 23:00:44

To be promoted to a role, act out that role first. To get promoted to a title, find out what is expected of that title and do that.
==========
The World is Actually Getting Better - The Startup Guide - Creating a Better World Through Entrepreneurship (startupguide.com)
- Your Highlight at location 69-73 | Added on Saturday, 1 October 2016 23:10:10

News publishers know that the human brain is instinctually structured to pay more attention to bad news and danger. Our brain’s amygdala developed on the grasslands of Eastern Africa 50,000 years ago to ensure that information connected to possible danger was processed and remembered with much higher priority than information connected to opportunity and safety. The early homo sapiens who paid attention to and remembered danger were those who prosperous and reproduced, creating an evolutionary selection for those with amygdalas that easily recalled danger. Peter Diamandis writes about this principle extensively in his 2012 book Abundance.
==========
The World is Actually Getting Better - The Startup Guide - Creating a Better World Through Entrepreneurship (startupguide.com)
- Your Highlight at location 197-203 | Added on Sunday, 2 October 2016 10:48:47

For Additional Reading & Watching: Abundance by Peter Diamandis The Better Angels of Our Nature by Steven Pinker Getting Better by Charles Kenny The Rational Optimist by Matt Ridley The Commanding Heights by Daniel Yergin The Future of Life by E.O. Wilson Sex At Dawn (Chapters 11-14)by Christopher Ryan and Cacilda Jetha The History of the World in Two Hours by The History Channel Understanding The Science for Tomorrow: Myth vs. Reality by Jeffrey Grossman The Earth Dashboard (well-sourced and with more statistics)
==========
Python progression path - From apprentice to guru - Stack Overflow (stackoverflow.com)
- Your Highlight at location 125-129 | Added on Sunday, 2 October 2016 10:57:49

This won't get you guru-hood but to start out, try working through the Project Euler problems The first 50 or so shouldn't tax you if you have decent high-school mathematics and know how to Google. When you solve one you get into the forum where you can look through other people's solutions which will teach you even more. Be decent though and don't post up your solutions as the idea is to encourage people to work it out for themselves.
==========
Python progression path - From apprentice to guru - Stack Overflow (stackoverflow.com)
- Your Highlight at location 148-150 | Added on Sunday, 2 October 2016 10:59:15

Not precisely what you're asking for, but I think it's good advice. Learn another language, doesn't matter too much which. Each language has it's own ideas and conventions that you can learn from. Learn about the differences in the languages and more importantly why they're different.
==========
Python progression path - From apprentice to guru - Stack Overflow (stackoverflow.com)
- Your Highlight at location 150-151 | Added on Sunday, 2 October 2016 10:59:37

Try a purely functional language like Haskell and see some of the benefits (and challenges) of functions free of side-effects.
==========
Python progression path - From apprentice to guru - Stack Overflow (stackoverflow.com)
- Your Highlight at location 155-157 | Added on Sunday, 2 October 2016 11:00:13

I spent a weekend trudging through the first 20 or so Project Euler problems and made a simple webapp with Django on Google App Engine. This will only take you from apprentice to novice, maybe, but you can then continue to making somewhat more advanced webapps and solve more advanced Project Euler problems.
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1732-1735 | Added on Sunday, 2 October 2016 11:14:14

The most important thing to remember when using verbose regular expressions is that you need to pass an extra argument when working with them: re.VERBOSE is a constant defined in the re module that signals that the pattern should be treated as a verbose regular expression. As you can see, this pattern has quite a bit of whitespace (all of which is ignored), and several comments (all of which are ignored).
==========
Dive_Into_Python_3[2016-09-19] (calibre)
- Your Highlight at location 1033-1034 | Added on Sunday, 2 October 2016 11:18:47

Don’t fuss with slashes; always use os.path.join() and let Python do the right thing.
==========
Python 3 OOP Part 4 - Polymorphism (Leonardo Giordani)
- Your Highlight at location 6-7 | Added on Wednesday, 5 October 2016 14:42:24

The term polymorphism, in the OOP lingo, refers to the ability of an object to adapt the code to the type of the data it is processing.
==========
Data compression - Wikipedia, the free encyclopedia (wikipedia.org)
- Your Highlight at location 130-132 | Added on Wednesday, 5 October 2016 20:27:45

Most lossy compression reduces perceptual redundancy by first identifying perceptually irrelevant sounds, that is, sounds that are very hard to hear. Typical examples include high frequencies or sounds that occur at the same time as louder sounds.
==========
What is REST? (Todd Fredrich, Pearson eCollege)
- Your Highlight at location 19-23 | Added on Wednesday, 5 October 2016 20:37:23

As REST is an acronym for REpresentational State Transfer, statelessness is key. Essentially, what this means is that the necessary state to handle the request is contained within the request itself, whether as part of the URI, query-string parameters, body, or headers. The URI uniquely identifies the resource and the body contains the state (or state change) of that resource. Then after the server does it's processing, the appropriate state, or the piece(s) of state that matter, are communicated back to the client via headers, status and response body.
==========
What is REST? (Todd Fredrich, Pearson eCollege)
- Your Highlight at location 24-26 | Added on Wednesday, 5 October 2016 20:38:16

In REST, the client must include all information for the server to fulfill the request, resending state as necessary if that state must span multiple requests. Statelessness enables greater scalability since the server does not have to maintain, update or communicate that session state.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 468-468 | Added on Wednesday, 5 October 2016 22:15:23

Some problems are better avoided than solved.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 469-473 | Added on Wednesday, 5 October 2016 22:15:58

I expect to pass through this world but once. Any good therefore that I can do, or any kindness that I can show to any fellow creature, let me do it now. Let me not defer or neglect it, for I shall not pass this way again. —STEPHEN GRELLET Spend the afternoon. You can’t take it with you. —ANNIE DILLARD
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 475-476 | Added on Thursday, 6 October 2016 13:12:35

Whether it involves secretaries, fiancé(e)s, or apartments, life is full of optimal stopping.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 496-498 | Added on Thursday, 6 October 2016 13:16:37

“After searching for a while, we humans just tend to get bored. It’s not irrational to get bored, but it’s hard to model that rigorously.” But this doesn’t make optimal stopping problems less important; it actually makes them more important, because the flow of time turns all decision-making into optimal stopping.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 499-502 | Added on Thursday, 6 October 2016 13:17:38

“The theory of optimal stopping is concerned with the problem of choosing a time to take a given action,” opens the definitive textbook on optimal stopping, and it’s hard to think of a more concise description of the human condition. We decide the right time to buy stocks and the right time to sell them, sure; but also the right time to open the bottle of wine we’ve been keeping around for a special occasion, the right moment to interrupt someone, the right moment to kiss them.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 505-506 | Added on Thursday, 6 October 2016 13:20:00

No choice recurs. We may get similar choices again, but never that exact one.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 506-506 | Added on Thursday, 6 October 2016 13:20:05

Hesitation—inaction—is just as irrevocable as action.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 520-522 | Added on Thursday, 6 October 2016 13:23:17

In the 1974 classic Zen and the Art of Motorcycle Maintenance, Robert Pirsig decries the conversational opener “What’s new?”—arguing that the question, “if pursued exclusively, results only in an endless parade of trivia and fashion, the silt of tomorrow.” He endorses an alternative as vastly superior: “What’s best?”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Bookmark at location 518 | Added on Thursday, 6 October 2016 13:28:43


==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 531-532 | Added on Thursday, 6 October 2016 13:40:03

to a computer scientist, these words have much more specific and neutral meanings. Simply put, exploration is gathering information, and exploitation is using the information you have to get a known good result.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 533-534 | Added on Thursday, 6 October 2016 13:40:31

It’s fairly intuitive that never exploring is no way to live. But it’s also worth mentioning that never exploiting can be every bit as bad.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 598-598 | Added on Thursday, 6 October 2016 13:53:54

By entering an almost purely exploit-focused phase, the film industry seems to be signaling a belief that it is near the end of its interval.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Bookmark at location 635 | Added on Thursday, 6 October 2016 14:08:01


==========
Why Coding Style Matters – Smashing Magazine (Nicholas C. Zakas)
- Your Highlight at location 35-36 | Added on Thursday, 6 October 2016 14:09:19

“Programs are meant to be read by humans and only incidentally for computers to execute.” — H. Abelson and G. Sussman (in “Structure and Interpretation of Computer Programs”)
==========
Why Coding Style Matters – Smashing Magazine (Nicholas C. Zakas)
- Your Highlight at location 49-50 | Added on Thursday, 6 October 2016 14:11:00

Keep in mind, your code is destined to be maintained by somebody other than you. You are not just communicating with other members of your team in the present, you’re also communicating with members of your team in the future.
==========
Why Coding Style Matters – Smashing Magazine (Nicholas C. Zakas)
- Your Highlight at location 63-63 | Added on Thursday, 6 October 2016 14:13:48

“be kind to your future self.”
==========
Computer Architecture for Beginners (sourceforge.net)
- Your Highlight at location 33-35 | Added on Friday, 7 October 2016 15:25:38

The Arithmetic Logic Unit (ALU) is the heart of the CPU operation. It takes values in registers and performs any of the multitude of operations the CPU is capable of. All modern processors have a number of ALUs so each can be working independently.
==========
Computer Architecture for Beginners (sourceforge.net)
- Your Highlight at location 37-38 | Added on Friday, 7 October 2016 15:25:59

The Address Generation Unit (AGU) handles talking to cache and main memory to get values into the registers for the ALU to operate on and get values out of registers back into main memory.
==========
Computer Architecture for Beginners (sourceforge.net)
- Your Highlight at location 40-44 | Added on Friday, 7 October 2016 15:27:59

As we can see above, whilst the ALU is adding registers together is completely separate to the AGU writing values back to memory, so there is no reason why the CPU can not be doing both at once. We also have multiple ALUs in the system, each which can be working on separate instructions. Finally the CPU could be doing some floating point operations with its floating point logic whilst integer instructions are in flight too. This process is called pipelining, and a processor that can do this is referred to as a superscalar architecture. All modern processors are superscalar.
==========
A simple example of Python OOP development (with TDD) - Part 1 (Leonardo Giordani)
- Your Highlight at location 78-80 | Added on Friday, 7 October 2016 19:49:45

To easily write tests that raise exceptions when failing we may use the assert Python statement, which shall be followed by an expression. If the expression returns a true value, assert does nothing, otherwise it raises an AssertionError exception.
==========
A simple example of Python OOP development (with TDD) - Part 1 (Leonardo Giordani)
- Your Highlight at location 154-155 | Added on Friday, 7 October 2016 19:55:41

TDD is an iterative methodology: when you find a bug or a missing feature you first write a good test or a set of tests that address the matter and then produce some code that make the tests pass.
==========
A simple example of Python OOP development (with TDD) - Part 1 (Leonardo Giordani)
- Your Highlight at location 191-193 | Added on Friday, 7 October 2016 21:08:16

If you do not know what Abstract Base Classes are, please check this post and the collections.abc module documentation.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 198-199 | Added on Friday, 7 October 2016 21:58:55

A system with a duplicated decision is a system that will eventually become inconsistent.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 222-227 | Added on Friday, 7 October 2016 22:18:13

It may sound amazing, but you could be a better programmer if you were both lazier and more stupid. First, you must be stupid, because if you are smart, or if you believe you are smart, you will stop doing two of the most important activities that make a programmer a good one: Learning and being critical of your own work. If you stop learning, it will make it hard to discover new techniques and algorithms that could allow you to work faster and more effectively. If you stop being critical, you will have a hard time debugging and refactoring your own work. In the endless battle between the programmer and the compiler, the best strategy for the programmer is to give up as soon as possible and admit that it is the programmer rather than the compiler who is most likely at fault.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 228-228 | Added on Friday, 7 October 2016 22:18:34

Learning from your own mistakes is probably the best way to learn something and improve the quality of your work.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 229-231 | Added on Friday, 7 October 2016 22:19:07

To find the best solutions to problems, you must always start from a clean slate, keeping an open mind and employing lateral thinking to explore all the available possibilities. The opposite approach does not work out so well: Believing you have the right solution may prevent you from discovering a better one.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 234-235 | Added on Friday, 7 October 2016 22:20:12

The lazy programmer can avoid writing monotonous, repetitive code, which in turns allows them to avoid redundancy, the enemy of software maintenance and flexible refactoring.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 288-291 | Added on Friday, 7 October 2016 22:37:30

Flow is good when you perform prioritized tasks, but flow may also steal a lot of time. Anyone who has surfed the Web knows this. Why does this happen? It’s certainly easy to get into flow when you’re having fun, but it can be hard to break out of it to do something less exciting. How can you restrict flow? Set a 15-minute timer. Every time it rings you must complete a mini-activity. If you want, you can then sit down again with a clear conscience – for another 15 minutes.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 293-295 | Added on Friday, 7 October 2016 22:38:12

When is multi-processing suitable? When you have downtime. Downtime is time spent on activities that you have to go through, but where you have excess capacity – such as when you are waiting for the bus or eating breakfast. If you can do something else as well during this time, you’ll get more time for other activities.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 326-327 | Added on Friday, 7 October 2016 22:45:13

a simple, readable implementation is head and shoulders above a clever-but-confusing, look-at-me implementation.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 338-340 | Added on Friday, 7 October 2016 22:46:37

If you code your branch logic so that the most frequent result is the condition that is tested for, you will help your CPU’s prefetch cache be “correct” more often, leading to fewer CPU-expensive cache invalidations.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 354-356 | Added on Friday, 7 October 2016 22:48:44

Computer systems are getting faster, smaller and cheaper all the time, but this does not warrant writing software without regards to performance and storage. Efforts to save clock CPU cycles and storage can pay off as dividends in performance and efficiency.
==========
Sorting HOW TO — Python 3.5.2 documentation (python.org)
- Your Highlight at location 90-92 | Added on Saturday, 8 October 2016 09:00:58

The Timsort algorithm used in Python does multiple sorts efficiently because it can take advantage of any ordering already present in a dataset.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 675-677 | Added on Saturday, 8 October 2016 09:54:22

Although most programmers are taught how to follow a software process appropriately, all too often they undervalue or overlook the role of testing while designing and coding the application.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 717-718 | Added on Saturday, 8 October 2016 10:01:59

It is your responsibility to improve your skills and marketability. Don’t wait for your company or your manager to prod you to try your hand at learning new things.
==========
The Spectator (The Spectator)
- Your Highlight at location 1662-1663 | Added on Saturday, 8 October 2016 10:36:10

At the first Alcoholics Anonymous meeting I attended, this guy got up and told such a harrowing tale I had to go to the pub
==========
The Spectator (The Spectator)
- Your Highlight at location 1662-1663 | Added on Saturday, 8 October 2016 10:36:23

At the first Alcoholics Anonymous meeting I attended, this guy got up and told such a harrowing tale I had to go to the pub afterwards and have a stiff one to cheer myself up.
==========
The Spectator (The Spectator)
- Your Highlight at location 325-326 | Added on Saturday, 8 October 2016 15:45:03

What happened? Divorces are traditionally about all sorts of things: boredom, infidelity, control-freakery, addictions, the lavish smorgasbord of unhappiness.
==========
The Spectator (The Spectator)
- Your Highlight at location 712-713 | Added on Saturday, 8 October 2016 16:17:44

We are sexually liberated, but emotionally depressed; free, but not all that happy. It’s reasonable to ask: is the Pill worth the pain?
==========
Abstract Base Classes in Python - The Digital Cat (thedigitalcatonline.com)
- Your Highlight at location 96-97 | Added on Monday, 10 October 2016 15:59:11

if you are programming in Python its better for you to understand everything Python provides you, both the good and the bad parts.
==========
Abstract Base Classes in Python - The Digital Cat (thedigitalcatonline.com)
- Your Highlight at location 97-97 | Added on Monday, 10 October 2016 15:59:19

Programming languages are tools, and you shall know their strengths and their limitations.
==========
Python IAQ: Infrequently Answered Questions (norvig.com)
- Your Highlight at location 46-47 | Added on Tuesday, 11 October 2016 09:41:38

The deeper question is: why doesn't Python allow x++? I believe it is the same reason why Python does not allow assignments in expressions: Python wants to clearly separate statements and expressions.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 29-32 | Added on Wednesday, 12 October 2016 12:53:51

HTML forms can create the illusion of controlling input. The form markup author might believe that because they are restricting the types of values that a user can enter in the form the data will conform to those restrictions. But rest assured, it is no more than an illusion. Even client-side JavaScript form validation provides absolutely no value from a security perspective.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 32-33 | Added on Wednesday, 12 October 2016 12:55:59

data coming from the user's browser, whether we are providing the form or not, and regardless of whether the connection is HTTPS-protected, is effectively zero.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 47-48 | Added on Wednesday, 12 October 2016 12:59:23

Input validation is the process of ensuring input data is consistent with application expectations.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 55-56 | Added on Wednesday, 12 October 2016 13:02:21

strategy of limiting input to known acceptable types is known as positive validation or whitelisting.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 68-69 | Added on Wednesday, 12 October 2016 13:05:01

If you must provide user feedback, you are best served with a canned response that doesn't echo back untrusted user data, for example "You must choose email or text".
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 71-73 | Added on Wednesday, 12 October 2016 13:06:10

Rejecting input that contains known dangerous values is a strategy referred to as negative validation or blacklisting. The trouble with this approach is that the number of possible bad inputs is extremely large.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 77-79 | Added on Wednesday, 12 October 2016 13:07:01

Resist the temptation to filter out invalid input. This is a practice commonly called "sanitization". It is essentially a blacklist that removes undesirable input rather than rejecting it. Like other blacklists, it is hard to get right and provides the attacker with more opportunities to evade it.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 158-161 | Added on Wednesday, 12 October 2016 14:23:02

The database is often the most crucial part of any web application since it contains state that can't be easily restored. It can contain crucial and sensitive customer information that must be protected. It is the data that drives the application and runs the business. So you would expect developers to take the most care when interacting with their database, and yet injection into the database tier continues to plague the modern web application even though it's relatively easy to prevent!
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 177-180 | Added on Wednesday, 12 October 2016 14:38:21

To quibble with Hacker Mom's solution, sanitizing is very difficult to get right, creates new potential attack vectors and is certainly not the right approach. Your best, and arguably only decent option is parameter binding. JDBC, for example, provides the PreparedStatement.setXXX() methods for this very purpose. Parameter binding provides a means of separating executable code, such as SQL, from content, transparently handling content encoding and escaping.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 224-226 | Added on Wednesday, 12 October 2016 14:41:49

When using an ordinary HTTP connection, users are exposed to many risks arising from the fact data is transmitted in plaintext. An attacker capable of intercepting network traffic anywhere between a user's browser and a server can eavesdrop or even tamper with the data completely undetected in a man-in-the-middle attack.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 235-238 | Added on Wednesday, 12 October 2016 14:46:03

The HTTPS protocol uses the Transport Layer Security (TLS) protocol, the successor to the Secure Sockets Layer (SSL) protocol, to secure communications. When configured and used correctly, it provides protection against eavesdropping and tampering, along with a reasonable guarantee that a website is the one we intend to be using. Or, in more technical terms, it provides confidentiality and data integrity, along with authentication of the website's identity.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 253-256 | Added on Wednesday, 12 October 2016 14:54:41

Unless the certificate for a site is known in advance, a client needs some way to verify that the certificate can be trusted. This is done based on a model of trust. In web browsers and many other applications, a trusted third party called a Certificate Authority (CA) is relied upon to verify the identity of a site and sometimes of the organization that owns it, then grant a signed certificate to the site to certify it has been verified.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 325-327 | Added on Wednesday, 12 October 2016 15:27:28

Setting the "secure" flag in a cookie will instruct a browser to only send a cookie when using HTTPS. This is an important safeguard to make use of even when HSTS is enabled.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 340-343 | Added on Wednesday, 12 October 2016 15:27:38

Use HTTPS for everything! Use HSTS to enforce it You will need a certificate from a trusted certificate authority if you plan to trust normal web browsers Protect your private key Use a configuration tool to help adopt a secure HTTPS configuration Set the "secure" flag in cookies Be mindful not to leak sensitive data in URLs Verify your server configuration after enabling HTTPS and every few months thereafter
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 351-352 | Added on Wednesday, 12 October 2016 15:29:01

Insecure password storage creates risks from both insiders and outsiders. In the former case, an insider such as an application developer or DBA who can read the above application_user table now has access to the credentials of your entire user base.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 359-360 | Added on Wednesday, 12 October 2016 15:30:17

That leaves two choices: either store credentials safely or don't store them at all.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 362-363 | Added on Wednesday, 12 October 2016 15:30:59

Firstly, you never want to store the password itself, but rather store a hash of the password.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 363-364 | Added on Wednesday, 12 October 2016 15:31:09

A cryptographic hashing algorithm is a one-way transformation from an input to an output from which the original input is, for all practical purposes, impossible to recover.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 364-366 | Added on Wednesday, 12 October 2016 15:31:33

For example, your password might be "littlegreenjedi". Applying Argon2 with the salt "12345678" (more on salts later) and default command-line options, gives you the the hex result 9b83665561e7ddf91b7fd0d4873894bbd5afd4ac58ca397826e11d5fb02082a1. Now you aren't storing the password at all, but rather this hash.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 368-372 | Added on Wednesday, 12 October 2016 15:32:23

The problem now is that, assuming we don't vary the salt, every user with the password "littlegreenjedi" will have the same hash in our database. Many people just re-use their same old password. Lookup tables generated using the most commonly occurring passwords and their variations can be used to efficiently reverse engineer hashed passwords. If an attacker gets hold of your password store, they can simply cross-reference a lookup table with your password hashes and are statistically likely to extract a lot of credentials in a pretty short period of time.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 373-375 | Added on Wednesday, 12 October 2016 15:32:45

A Dash of Salt A salt is some extra data that is added to the password before it is hashed so that two instances of a given password do not have the same hash value.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 380-382 | Added on Wednesday, 12 October 2016 15:33:55

It can live alongside the hash, or even encoded with it, as is the case with bcrypt. If your password table or file falls into attacker hands access to the salt won't help them use a lookup table to mount an attack on the collection of hashes. A salt should be globally unique per user.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 387-389 | Added on Wednesday, 12 October 2016 15:35:39

The best widely-available algorithms are now considered to be scrypt and bcrypt. Because contemporary SHA algorithms and PBKDF2 are less resistant to attacks where GPUs are used, they are probably not great long-term strategies.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 400-401 | Added on Wednesday, 12 October 2016 15:38:28

Key derivation functions have configurable iteration counts, also known as work factor, so that as hardware gets faster, you can increase the time it takes to brute force them.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 396-398 | Added on Wednesday, 12 October 2016 15:38:51

Argon2 was designed specifically for the purpose of hashing passwords and is resistant to attacks using GPUs and other specialized hardware. However, it is very new and has not yet been broadly adopted, although signs are good that it will be soon. Pay attention to how this adoption occurs, and when implementations become more widely available.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 437-440 | Added on Wednesday, 12 October 2016 16:02:39

In Summary Hash and salt all passwords Use an algorithm that is recognized as secure and sufficiently slow Ideally, make your password storage mechanism configurable so it can evolve Avoid storing passwords for external systems and services Be careful not to set password size limits that are too small, or character set limits that are too narrow
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 444-446 | Added on Wednesday, 12 October 2016 16:04:54

Authentication is sometimes confused with authorization. Authentication confirms that a user is who they claim to be. For example, when you log into your bank, your bank can verify it is in fact you and not an attacker trying to steal the fortune you amassed selling your captioned cat pictures site. Authorization defines whether a user is allowed to do something.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 447-449 | Added on Wednesday, 12 October 2016 16:05:12

Session management ties authentication and authorization together. Session management makes it possible to relate requests made by a particular user. Without session management, users would have to authenticate during each request they sent to a web application.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 472-474 | Added on Wednesday, 12 October 2016 16:09:23

One option that offers a convenience for many users is to allow them to log in using their existing account on popular services such as Facebook, Google, and Twitter, using a service called Single Sign-On (SSO). SSO allows users to log in to different systems using a single identity managed by an identity provider.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 481-484 | Added on Wednesday, 12 October 2016 16:11:24

With Two-Factor Authentication (2FA), a second, different factor of authentication is required to confirm the identity of a user. If something the user knows, such as a username and password, is used as the first factor of authentication, a second factor could be something the user has, such as a secret code generated using software on their mobile phone or by a hardware token. Verifying a secret code sent to a user via SMS text message was once a popular way of doing this, but it is now deprecated due to presenting various risks.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 487-489 | Added on Wednesday, 12 October 2016 16:11:53

Reauthenticate For Important Actions Authentication isn’t only important when logging in. We can also use it to provide additional protection when users perform sensitive actions such as changing their password or transferring money. This can help limit the exposure in the event a user’s account is compromised.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 506-507 | Added on Wednesday, 12 October 2016 16:14:32

Using short lockouts of between 10 to 60 seconds can be an effective deterrent without imposing the same availability risks.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 507-511 | Added on Wednesday, 12 October 2016 16:15:31

Another popular option is to use CAPTCHAs, which attempt to deter automated attacks by presenting a challenge that a human can solve but a computer can not. Oftentimes it seems as though they present challenges that can be solved by neither. These can be part of an effective strategy, but they have become decreasingly effective and face criticisms. Advancements have made it possible for computers to solve challenges with greater accuracy, and it has become inexpensive to hire human labor to solve them. They can also present problems for people with vision and hearing impairments, which is an important consideration if we want our site to be accessible.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 512-514 | Added on Wednesday, 12 October 2016 16:16:14

Layering these options has been used as an effective strategy on sites that see frequent brute force attacks. After two login failures occur for an account, a CAPTCHA might be presented to the user. After several more failures, the account might be locked out temporarily.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 529-532 | Added on Wednesday, 12 October 2016 16:17:03

In Summary Use existing authentication frameworks whenever possible instead of creating one yourself Support authentication methods that make sense for your needs Limit the ability of an attacker to take control of an account You can take steps to prevent attacks to identify or compromise accounts Never use default or hard-coded credentials
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 533-533 | Added on Wednesday, 12 October 2016 16:17:15

As a stateless protocol HTTP offers no built-in mechanism for relating user data across requests.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 541-542 | Added on Wednesday, 12 October 2016 16:19:05

Sessions are typically created by setting a session identifier inside a cookie that will be sent by a user’s browser in subsequent requests.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 552-554 | Added on Wednesday, 12 October 2016 16:21:06

Attackers can make use of freely available statistical analysis tools to improve the chances of guessing more complex tokens. Using predictable inputs such as the current time or a user’s IP address to derive a token are not enough for this purpose. So how can we generate a session identifier safely?
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 560-562 | Added on Wednesday, 12 October 2016 16:25:27

The decision to store any information about a user inside of a cookie is a subject of controversy and should not be taken lightly. As a principle, limit the information sent inside the cookie to what is absolutely necessary.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 566-569 | Added on Wednesday, 12 October 2016 16:26:50

Using HTTPS will help prevent someone from eavesdropping on network traffic to steal session identifiers, but they are sometimes leaked unintentionally in other ways. In a classic example, an airline customer sends a link to search results on the airline’s website to a friend. The link contains a parameter with the customer’s session identifier, and the friend is suddenly able to book flights as the customer.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 572-573 | Added on Wednesday, 12 October 2016 16:30:14

No matter what you choose to do, make sure the session identifier should not be exposed in URLs, logs, referrer, or anywhere they could be accessed by an attacker.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 574-575 | Added on Wednesday, 12 October 2016 16:30:31

When cookies are used for sessions, we should take some simple precautions to make sure they are not unintentionally exposed. There are four attributes that are important to understand for this purpose: Domain, Path, HttpOnly, and Secure.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 576-579 | Added on Wednesday, 12 October 2016 16:30:49

Domain restricts the scope of a cookie to a particular domain and its subdomains, and Path further restricts the scope to a path and its subpaths. Both attributes are set to fairly restrictive values by default when not explicitly set. The default for Domain will only permit a cookie to be sent to the originating domain and its subdomains, and the default for Path will restrict a cookie to the path of the resource where the cookie was set and its subpaths.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 586-589 | Added on Wednesday, 12 October 2016 16:32:01

The other two attributes, Secure and HttpOnly, control how the cookie is used. The Secure flag indicates that the browser should only send the cookie when using HTTPS. The HttpOnly flag instructs the browser that the cookie should not be accessible through JavaScript or other client side scripts, which helps prevent it being stolen by malicious code.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 596-600 | Added on Wednesday, 12 October 2016 16:33:49

Whatever you choose to do, there is a risk when changing the privilege level of a session. What would happen if an attacker is able to set the session identifier for a user to a less privileged session known to the attacker, for example in a cookie or in a hidden form field? If the attacker is able to trick the user into logging in, they are suddenly in control of a more privileged session. This is an attack called session fixation. There are two things we can do to avoid having our users falling into this trap. First, we should always create a new session when a user authenticates or elevates their privilege level. Second, we should only create session identifiers ourselves and ignore identifiers that aren’t valid.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 602-605 | Added on Wednesday, 12 October 2016 16:34:56

The longer a session is active, the greater the chance an attacker might be able to get their hands on it. To reduce that risk and keep our session table clean, we can impose timeouts on sessions that are left inactive for some amount of time. The duration of time depends on your risk tolerance. On our captioned cat pictures site, it might only be necessary to do this after a month or even longer. A bank, on the other hand, might have a strict policy of timing out sessions after 10 minutes of inactivity as a security precaution.
==========
The Basics of Web Application Security (martinfowler.com)
- Your Highlight at location 628-631 | Added on Wednesday, 12 October 2016 16:35:26

In Summary Use existing session management frameworks instead of creating your own Keep session identifiers secret, do not use them in URLs or logs Protect session cookies using attributes to restrict their scope Create a new session when one doesn't exist or whenever a user changes their privilege level Never create sessions with ids you haven't created yourself Make sure users have a way to log out and to terminate their existing sessions
==========
How to Make Mistakes in Python (Mike Pirnat)
- Your Highlight at location 1060-1062 | Added on Thursday, 13 October 2016 13:44:23

Typical uses for decorators involve altering or validating the input to a function, altering the output of a function, logging the usage or timing of a function, and — especially in web application frameworks — controlling access to a function.
==========
How to Make Mistakes in Python (Mike Pirnat)
- Your Highlight at location 1120-1121 | Added on Thursday, 13 October 2016 13:49:37

The Law of Demeter (also known as the principle of least knowledge) tells us that our code should only interact with the things that it knows about, and not reach deeply into nested attributes, across friends of friends, and into strangers.
==========
How to Make Mistakes in Python (Mike Pirnat)
- Your Highlight at location 1155-1157 | Added on Thursday, 13 October 2016 13:53:27

We should especially avoid depending on single- and double-underscore internals of an object, because they are prefixed this way for a reason. We are explicitly being told that these items are part of the internal implementation of the object and we cannot depend on them to remain as they are — they can be changed or removed at any time.
==========
How to Make Mistakes in Python (Mike Pirnat)
- Your Highlight at location 1215-1217 | Added on Thursday, 13 October 2016 13:56:44

came to prefer using just a single underscore to politely indicate that an attribute is part of the internal implementation of a class and shouldn’t be referenced externally without some hesitation. Since single-underscore names aren’t mangled, they can be more conveniently used if you absolutely must break the Law of Demeter.
==========
How to Make Mistakes in Python (Mike Pirnat)
- Your Highlight at location 1790-1794 | Added on Thursday, 13 October 2016 16:04:38

It turns out that Python doesn’t give us a new list every time the function gets called; it creates that empty list when the function is defined during the import of its module. After that, we get the same list every time the function is called without passing reminders. This issue never manifested in our development environment because our homegrown app server would fork a fresh Python process for each request.
==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 997 | Added on Friday, 14 October 2016 22:49:51


==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 1270 | Added on Saturday, 15 October 2016 00:31:27


==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 1793 | Added on Saturday, 15 October 2016 16:05:46


==========
Leviathan Wakes (James S.A. Corey)
- Your Highlight at location 1802-1803 | Added on Saturday, 15 October 2016 16:30:13

thinly veiled impatience;
==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 2490 | Added on Saturday, 15 October 2016 22:38:05


==========
Hadoop with Python (Zachary Radtka and Donald Miner)
- Your Highlight at location 333-335 | Added on Sunday, 16 October 2016 00:28:26

Map The first phase of a MapReduce application is the map phase. Within the map phase, a function (called the mapper) processes a series of key-value pairs. The mapper sequentially processes each key-value pair individually, producing zero or more output key-value pairs
==========
Hadoop with Python (Zachary Radtka and Donald Miner)
- Your Highlight at location 345-346 | Added on Sunday, 16 October 2016 00:29:10

Shuffle and Sort The second phase of MapReduce is the shuffle and sort. As the mappers begin completing, the intermediate outputs from the map phase are moved to the reducers.
==========
Hadoop with Python (Zachary Radtka and Donald Miner)
- Your Highlight at location 353-354 | Added on Sunday, 16 October 2016 00:29:57

Reduce The third phase of MapReduce is the reduce phase. Within the reducer phase, an iterator of values is provided to a function known as the reducer.
==========
Hadoop with Python (Zachary Radtka and Donald Miner)
- Your Highlight at location 346-350 | Added on Sunday, 16 October 2016 00:31:12

This process of moving output from the mappers to the reducers is known as shuffling. Shuffling is handled by a partition function, known as the partitioner. The partitioner is used to control the flow of key-value pairs from mappers to reducers. The partitioner is given the mapper’s output key and the number of reducers, and returns the index of the intended reducer. The partitioner ensures that all of the values for the same key are sent to the same reducer. The default partitioner is hash-based. It computes a hash value of the mapper’s output key and assigns a partition based on this result.
==========
Hadoop with Python (Zachary Radtka and Donald Miner)
- Your Highlight at location 351-352 | Added on Sunday, 16 October 2016 00:31:38

The final stage before the reducers start processing data is the sorting process. The intermediate keys and values for each partition are sorted by the Hadoop framework before being presented to the reducer.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 3679-3681 | Added on Sunday, 16 October 2016 01:05:22

Most important, understand that goals are for losers and systems are for winners. People who seem to have good luck are often the people who have a system that allows luck to find them.
==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 3119 | Added on Sunday, 16 October 2016 10:58:06


==========
Basic TCP/IP networking reference guide - Linux tutorial from PenguinTutor (penguintutor.com)
- Your Highlight at location 157-158 | Added on Sunday, 16 October 2016 11:37:59

The combination of IP address, port and protocol is called a socket, and has to be unique for every service
==========
Basic TCP/IP networking reference guide - Linux tutorial from PenguinTutor (penguintutor.com)
- Your Highlight at location 177-178 | Added on Sunday, 16 October 2016 11:40:54

The MAC address is usually hard coded into the ethernet card and are unique across every device made. This is achieved by allocating a block of addresses to each manufacturer of ethernet devices.
==========
Basic TCP/IP networking reference guide - Linux tutorial from PenguinTutor (penguintutor.com)
- Your Highlight at location 180-181 | Added on Sunday, 16 October 2016 11:41:29

To translate between IP addresses and MAC addresses on the local ethernet the Address Resolution Protocol (ARP) is used.
==========
Basic TCP/IP networking reference guide - Linux tutorial from PenguinTutor (penguintutor.com)
- Your Highlight at location 259-261 | Added on Sunday, 16 October 2016 11:56:26

Routing Information Protocol (RIP) RIP is a simple protocol based on distance vectors. It uses a shortest path algorithm to determine the best route to the destination. This is measured in hops which is normally then number of gateways (routers) that are passed through before reaching a destination network.
==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 3343 | Added on Sunday, 16 October 2016 15:10:40


==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 587-589 | Added on Sunday, 16 October 2016 16:53:11

Goal-oriented people exist in a state of continuous presuccess failure at best, and permanent failure at worst if things never work out. Systems people succeed every time they apply their systems, in the sense that they did what they intended to do.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 2838-2846 | Added on Sunday, 16 October 2016 22:02:54

Recapping the happiness formula: Eat right. Exercise. Get enough sleep. Imagine an incredible future (even if you don’t believe it). Work toward a flexible schedule. Do things you can steadily improve at. Help others (if you’ve already helped yourself). Reduce daily decisions to routine.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 2835-2838 | Added on Sunday, 16 October 2016 22:03:11

Likewise, I always have a banana at about 6:05 A.M., my first sip of coffee at about 6:10 A.M., and a protein bar to keep me from getting hungry again until late afternoon. I never waste a brain cell in the morning trying to figure out what to do when. Compare that with some people you know who spend two hours planning and deciding for every task that takes one hour to complete. I’m happier than those people.
==========
Idioms and Anti-Idioms in Python — Python 2.7.12 documentation (python.org)
- Your Highlight at location 14-19 | Added on Monday, 17 October 2016 07:51:28

f = open("www") f.read() does not work. Of course, it works just fine (assuming you have a file called “www”.) But it does not work if somewhere in the module, the statement from os import * is present. The os module has a function called open() which returns an integer. While it is very useful, shadowing a builtin is one of its least useful properties.
==========
Idioms and Anti-Idioms in Python — Python 2.7.12 documentation (python.org)
- Your Highlight at location 20-22 | Added on Monday, 17 October 2016 07:51:48

Remember, you can never know for sure what names a module exports, so either take what you need — from module import name1, name2, or keep them in the module and access on a per-need basis — import module;print module.name.
==========
Idioms and Anti-Idioms in Python — Python 2.7.12 documentation (python.org)
- Your Highlight at location 78-78 | Added on Monday, 17 October 2016 07:55:55

using a bare except: is almost never a good idea.
==========
Idioms and Anti-Idioms in Python — Python 2.7.12 documentation (python.org)
- Your Highlight at location 118-122 | Added on Monday, 17 October 2016 07:59:59

The best version of this function uses the open() call as a context manager, which will ensure that the file gets closed as soon as the function returns: def get_status(file): with open(file) as fp: return fp.readline()
==========
Idioms and Anti-Idioms in Python — Python 2.7.12 documentation (python.org)
- Your Highlight at location 137-138 | Added on Monday, 17 October 2016 08:01:56

Another highly useful function is reduce() which can be used to repeatly apply a binary operation to a sequence, reducing it to a single value.
==========
Python3 Tutorial: Memoization and Decorators (www.python-course.eu)
- Your Highlight at location 7-9 | Added on Monday, 17 October 2016 08:11:17

Memoisation is a technique used in computing to speed up programs. This is accomplished by memorizing the calculation results of processed input such as the results of function calls. If the same input or a function call with the same parameters is used, the previously stored results can be used again and unnecessary calculation are avoided.
==========
Python3 Tutorial: Memoization and Decorators (www.python-course.eu)
- Your Bookmark at location 31 | Added on Monday, 17 October 2016 08:16:14


==========
Function Programming in Python (David Mertz)
- Your Highlight at location 187-189 | Added on Monday, 17 October 2016 11:59:50

while you can nest comprehensions to arbitrary depth, past a fairly simple level they tend to stop clarifying and start obscuring. For genuinely complex construction of a data collection, refactoring into functions remains more readable.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Bookmark at location 5300 | Added on Monday, 17 October 2016 22:27:48


==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 4919 | Added on Tuesday, 18 October 2016 21:10:48


==========
Human leukocyte antigen - Wikipedia (wikipedia.org)
- Your Highlight at location 64-65 | Added on Tuesday, 18 October 2016 21:13:35

Because of the importance of HLA in transplantation, the HLA loci are some of the most frequently typed by serology and PCR.
==========
Human leukocyte antigen - Wikipedia (wikipedia.org)
- Your Highlight at location 85-86 | Added on Tuesday, 18 October 2016 21:13:57

HLA types are inherited, and some of them are connected with autoimmune disorders and other diseases.
==========
Human leukocyte antigen - Wikipedia (wikipedia.org)
- Your Highlight at location 104-105 | Added on Tuesday, 18 October 2016 21:15:15

There is evidence for non-random mate choice with respect to certain genetic characteristics. This has led to a field known as Genetic matchmaking.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5611-5614 | Added on Tuesday, 18 October 2016 21:30:50

The deque class from the collections module is a double-ended queue. It provides constant time operations for inserting or removing items from its beginning or end. This makes it ideal for first-in-first-out (FIFO) queues.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 2982-2987 | Added on Tuesday, 18 October 2016 21:48:49

The traditional view of weight maintenance is that you need to exercise and watch your diet to get good results. That’s mostly true, but a more useful way to look at the connection between food and exercise is not that they are equal partners. A more practical view is that food is the fuel that makes exercise possible. When you eat simple carbs for lunch, you find yourself wanting a nap more than you want to spend an hour on the treadmill. If you stuff yourself for dinner, you might cancel your plans to go for a run. If you manage your diet right, you’ll want to exercise more, and that will translate into doing so. The starting point for good health is diet.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 2991-2992 | Added on Tuesday, 18 October 2016 21:49:34

The main point for both diet and exercise is that you want to reduce the amount of willpower required. Any other approach is unsustainable.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 2999-2999 | Added on Tuesday, 18 October 2016 21:50:23

An attractive alternative makes willpower less necessary.
==========
Bioinformatics Zen - Bioinformatics - a wide set of transferable skills (bioinformaticszen.com)
- Your Highlight at location 19-21 | Added on Tuesday, 18 October 2016 22:18:06

bioinformatics requires classic statistics such as ANOVA and regression to prove or disprove a hypothesis and a solid grounding is therefore useful. Simple statistics are also the easiest to understand and implement. A good understanding of statistics always impresses me when I discuss a topic with someone.
==========
Design of experiments - Wikipedia (wikipedia.org)
- Your Highlight at location 96-97 | Added on Tuesday, 18 October 2016 22:28:25

Assigning units to treatments at random tends to mitigate confounding, which makes effects due to factors other than the treatment to appear to result from the treatment.
==========
Design of experiments - Wikipedia (wikipedia.org)
- Your Highlight at location 97-99 | Added on Tuesday, 18 October 2016 22:30:51

The risks associated with random allocation (such as having a serious imbalance in a key characteristic between a treatment group and a control group) are calculable and hence can be managed down to an acceptable level by using enough experimental units.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 24-27 | Added on Tuesday, 18 October 2016 22:43:35

Given the learning and practice required to become an effective user of a programming language, it is provident to not only gain basic proficiency in a diversity of languages but also to appropriate the time and energy to gain mastery in at least a single language. With programming language mastery comes knowledge and access to advanced language features and libraries, more efficient programming, and less time spent reading manuals and making novice errors.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 47-49 | Added on Tuesday, 18 October 2016 22:47:51

Too often there is an urge among programmers to reinvent the wheel despite the availability of existing solutions. In some cases this can be an innocent and useful learning exercise, yet in most cases, this is an improvident and wasteful exercise.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 49-51 | Added on Tuesday, 18 October 2016 22:48:09

For many common problems in bioinformatics (e.g., parsing file formats or working with nucleotide data), it is often the case that others have previously implemented a solution to the problem, and in many cases these solutions are easily found implemented in open source software in the public domain.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 51-52 | Added on Tuesday, 18 October 2016 22:48:26

there are specialized search engines, such as Koders and Google Code Search , that are specially designed to search across the public domain source code.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 76-77 | Added on Tuesday, 18 October 2016 22:52:38

the UNIX pipe operator, “|”, makes it possible to create ad hoc software pipelines by connecting the output of one command to the input of another.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 96-97 | Added on Tuesday, 18 October 2016 22:57:24

Tools like Doxygen , JavaDoc , PyDoc , and others offer lightweight means for documenting code and easily generating formalized code documentation.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 102-103 | Added on Tuesday, 18 October 2016 22:58:33

Also, many potential employers will want to see code you've written, and therefore it's beneficial to have a large portfolio of well-documented program code on hand for job interviews.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 140-142 | Added on Tuesday, 18 October 2016 23:02:52

There are essentially two major types of computational tasks that can be parallelized in software, which are defined by their dependency model as either Loosely Coupled (LC) or Tightly Coupled (TC). LC tasks are those whose execution does not depend on the state or output of any other computational task of the same class.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 152-154 | Added on Tuesday, 18 October 2016 23:04:09

Recently, a new paradigm for parallel computing, commonly referred to as MapReduce , was introduced by Google as a simplified software framework for parallelizing computation across large clusters of commodity computers. Since it was initially described, a large number of open source MapReduce projects have been implemented in various programming languages, such as Hadoop (Java) , Disco (Python) , and Skynet (Ruby) .
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 154-156 | Added on Tuesday, 18 October 2016 23:04:34

In essence, MapReduce frameworks help to break tasks down into discrete sub-problems (the Map step), which are distributed to networked compute nodes, and cohesively aggregate the results of the independent sub-tasks (the Reduce step).
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 193-195 | Added on Tuesday, 18 October 2016 23:07:05

Open source implementations of these systems include HBase , Hypertable , and Cassandra , which are being used by some of the world's largest Internet companies, often in conjunction with MapReduce-based parallel computations. These database systems are also well suited for working with bioinformatics data of similar scale.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 203-205 | Added on Tuesday, 18 October 2016 23:34:56

One straightforward means of using hardware to accelerate bioinformatics code is to vectorize its execution using the Single Instruction, Multiple Data (SIMD) instruction sets offered by all modern workstation CPUs.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 207-210 | Added on Tuesday, 18 October 2016 23:35:55

SIMD allows a set of instructions that would normally be executed serially (e.g., a “for” loop of 1..n floating point calculation) to be executed in parallel per CPU cycle (e.g., four loop iterations at a time). Many free and commercial compilers now have auto-vectorization capabilities, which attempt to analyze your code and automatically optimize sections of program execution using SIMD when possible.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 214-216 | Added on Tuesday, 18 October 2016 23:36:57

Because of their computational prowess for certain types of mathematical computations and transformations, which can be up to several orders of magnitude faster than the primary CPU(s) for similar tasks, GPUs have been appropriated for tasks beyond graphics processing, engendering the development of several techniques for General Purpose computing on GPU (GPGPU).
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 219-220 | Added on Tuesday, 18 October 2016 23:38:11

Interestingly, a number of scripting language interfaces are being developed for GPGPU libraries, such as gputools (R) and pystream (Python) , making GPGPU hardware acceleration capabilities accessible to those who are most comfortable working with high-level languages.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 237-238 | Added on Tuesday, 18 October 2016 23:40:18

one could alternatively use the lightweight data serialization formats such as JavaScript Object Notation (JSON) or YAML to provide a lightweight data format that is easily interpreted by both humans and programming languages.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 250-253 | Added on Tuesday, 18 October 2016 23:41:56

The advent of open source software and the commoditization and virtualization of computing hardware have drastically reduced the cost of software development. By far, the most expensive aspect of software development today is the programmer's time, and thus the success of programming efforts in academia or industry will be invariably tied to effective use of programmer time.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 258-260 | Added on Wednesday, 19 October 2016 09:40:09

The success of bioinformatics software is based not on the elegance of the software design, but rather its utility as a tool for driving and answering biological questions. Consequently it is no surprise that many successful bioinformatics apps are written by biologists who lack formal computer science training, as they undoubtedly put scientific utility ahead of architectural elegance and completeness.
==========
A Quick Guide for Developing Effective Bioinformatics Programming Skills (nih.gov)
- Your Highlight at location 264-265 | Added on Wednesday, 19 October 2016 09:41:09

hardware will accomplish the same performance gains? As a general principle, outsource or purchase everything but genius to maximize your contribution to driving scientific questions and accomplishment.
==========
Chromatin - Wikipedia (wikipedia.org)
- Your Highlight at location 7-11 | Added on Wednesday, 19 October 2016 09:43:45

Chromatin is a complex of macromolecules found in cells, consisting of DNA, protein, and RNA. The primary functions of chromatin are 1) to package DNA into a smaller volume to fit in the cell, 2) to reinforce the DNA macromolecule to allow mitosis, 3) to prevent DNA damage, and 4) to control gene expression and DNA replication.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 327-328 | Added on Wednesday, 19 October 2016 17:43:20

At no other point in human history has our ability to understand life’s complexities been so dependent on our skills to work with and analyze data.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Bookmark at location 342 | Added on Wednesday, 19 October 2016 17:45:56


==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 417-418 | Added on Wednesday, 19 October 2016 19:35:21

Karl Popper, in The Logic of Scientific Discovery, famously said: “non-reproducible single occurrences are of no significance to science” (1959).
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 416-417 | Added on Wednesday, 19 October 2016 19:35:32

Reproducing scientific findings is the only way to confirm they’re accurate and not the artifact of a single experiment or analysis.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 502-505 | Added on Wednesday, 19 October 2016 20:23:46

Robust research is largely about adopting a set of practices that stack the odds in your favor that a silent error won’t confound your results. As mentioned above, most of these practices are also beneficial for reasons other than preventing the dreaded silent error — which is all the more reason to include apply the recommendations below in your daily bioinformatics work.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 505-507 | Added on Wednesday, 19 October 2016 20:23:55

Pay Attention to Experimental Design Robust research starts with a good experimental design. Unfortunately, no amount of brilliant analysis can save an experiment with a bad design.
==========
Leviathan Wakes (James S.A. Corey)
- Your Bookmark at location 5752 | Added on Thursday, 20 October 2016 08:27:27


==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 514-516 | Added on Thursday, 20 October 2016 08:27:48

Most introductory statistics courses and books cover basic topics in experimental design. Quinn and Keough’s Experimental Design and Data Analysis for Biologists (Cambridge University Press, 2002) is an excellent book on this topic.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 516-517 | Added on Thursday, 20 October 2016 08:27:57

Chapter 18 of O’Reilly’s Statistics in a Nutshell, 2nd Edition, by Sarah Boslaugh covers the basics well, too.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 522-523 | Added on Thursday, 20 October 2016 08:28:52

Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it. Brian Kernighan
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 550-554 | Added on Thursday, 20 October 2016 08:33:12

implicit assumptions we make about data impact how we write code; for example, we may not think to handle a certain situation in code if we assume it won’t occur. Unfortunately, this can lead to the dreaded silent error: our code or programs receive values outside our expected values, behave improperly, and yet still return output without warning. Our best approach to prevent this type of error is to explicitly state and test our assumptions about data in our code using assert statements like Python’s assert() and R’s stopifnot().
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 592-594 | Added on Thursday, 20 October 2016 08:36:35

It’s difficult to compare floating-point values on a computer, as there are representation and roundoff errors. However, it’s a good reminder that we’re always limited by what our machine can
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 592-594 | Added on Thursday, 20 October 2016 08:36:45

It’s difficult to compare floating-point values on a computer, as there are representation and roundoff errors. However, it’s a good reminder that we’re always limited by what our machine can do, and we must mind these limitations in analysis.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 637-640 | Added on Thursday, 20 October 2016 08:48:02

In practice, I think of this process as turning one-off scripts into tools. Tools, in contrast to scripts, are designed to be run over and over again. They are well documented, have explicit versioning, have understandable command-line arguments, and are kept in a shared version control repository.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 649-651 | Added on Thursday, 20 October 2016 08:51:17

It’s important to never assume a dataset is high quality. Rather, data’s quality should be proved through exploratory data analysis (known as EDA). EDA is not complex or time consuming, and will make your research much more robust to lurking surprises in large datasets.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 656-658 | Added on Thursday, 20 October 2016 08:58:23

Release Your Code and Data For reproducibility, the absolute minimal requirements are that code and data are released. Without available code and data, your research is not reproducible (see Peng, 2001 for a nice discussion of this). We’ll
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 658-660 | Added on Thursday, 20 October 2016 08:58:33

Document Everything The first day a scientist steps into a lab, they’re told to keep a lab notebook.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 676-680 | Added on Thursday, 20 October 2016 09:02:50

Use Code as Documentation With complex processing pipelines, often the best documentation is well-documented code. Because code is sufficient to tell a computer how to execute a program (and which parameters to use), it’s also close to sufficient to tell a human how to replicate your work (additional information like software version and input data is also necessary to be fully reproducible).
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 689-690 | Added on Thursday, 20 October 2016 09:03:58

Just as a well-organized laboratory makes a scientist’s life easier, a well-organized and well-documented project makes a bioinformatician’s life easier.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 692-694 | Added on Thursday, 20 October 2016 09:05:20

it’s much easier to automate tasks when files are organized and clearly named. For example, processing 300 gene sequences stored in separate FASTA files with a script is trivial if these files are organized in a single directory and are consistently named.
==========
Bioinformatics Data Skills (Buffalo, Vince)
- Your Highlight at location 745-745 | Added on Thursday, 20 October 2016 09:13:16

When in doubt, explicit is always better than implicit when it comes to filenames, documentation, and writing code.
==========
How to Fail at Almost Everything and Still Win Big: Kind of the Story of My Life (Adams, Scott)
- Your Highlight at location 326-327 | Added on Thursday, 20 October 2016 14:43:57

I’m delighted to admit that I’ve failed at more challenges than anyone I know. There’s a nonzero chance that reading this book will set you on the path of your own magnificent screwups and cavernous disappointments. You’re welcome!
==========
Leviathan Wakes (James S.A. Corey)
- Your Highlight at location 6427-6429 | Added on Friday, 21 October 2016 10:26:04

Holden turned to look at Dresden again, taking in the blue blood European good looks, the gym-sculpted physique, the expensive haircut. Even now, surrounded by men with guns, Dresden managed to look like he was in charge. Holden could imagine him glancing down at his watch and wondering how much more of his expensive time this boarding party was going to take.
==========
Leviathan Wakes (James S.A. Corey)
- Your Highlight at location 6599-6600 | Added on Friday, 21 October 2016 10:49:47

Liquor doesn’t make you feel better. Just makes you not so worried about feeling bad.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 34-36 | Added on Friday, 21 October 2016 18:36:47

This credit is his most valuable possession; it is the result of years of faith and honorable dealing and while it may be quickly lost, once lost cannot be restored for a long time, if ever. The banker must at all times conduct himself so as to justify the confidence of his
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 34-36 | Added on Friday, 21 October 2016 18:37:10

This credit is his most valuable possession; it is the result of years of faith and honorable dealing and while it may be quickly lost, once lost cannot be restored for a long time, if ever. The banker must at all times conduct himself so as to justify the confidence of his clients in him and thus preserve it for his successors.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 41-43 | Added on Friday, 21 October 2016 18:38:13

In 1933, the Glass-Steagall Act was passed, requiring banks to cease either their commercial or investment banking business. J. P. Morgan and Company chose to remain solely a commercial bank. Two years later, in 1935, a small group of Morgan partners founded a new investment bank, Morgan Stanley.
==========
Tunneling protocol - Wikipedia (wikipedia.org)
- Your Highlight at location 41-46 | Added on Monday, 24 October 2016 14:53:25

One important use of a tunneling protocol is to allow a foreign protocol to run over a network that does not support that particular protocol; for example, running IPv6 over IPv4. Another important use is to provide services that are impractical or unsafe to be offered using only the underlying network services; for example, providing a corporate network address to a remote user whose physical network address is not part of the corporate network. Because tunneling involves repackaging the traffic data into a different form, perhaps with encryption as standard, a third use is to hide the nature of the traffic that is run through the tunnels.
==========
Tunneling protocol - Wikipedia (wikipedia.org)
- Your Highlight at location 82-84 | Added on Monday, 24 October 2016 14:58:15

SSH tunnels provide a means to bypass firewalls that prohibit certain Internet services – so long as a site allows outgoing connections.
==========
Tunneling protocol - Wikipedia (wikipedia.org)
- Your Highlight at location 84-89 | Added on Monday, 24 October 2016 14:58:46

For example, an organization may prohibit a user from accessing Internet web pages (port 80) directly without passing through the organization's proxy filter (which provides the organization with a means of monitoring and controlling what the user sees through the web). But users may not wish to have their web traffic monitored or blocked by the organization's proxy filter. If users can connect to an external SSH server, they can create an SSH tunnel to forward a given port on their local machine to port 80 on a remote web server. To access the remote web server, users would point their browser to the local port at http://localhost/
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 94-95 | Added on Monday, 24 October 2016 15:04:42

“At all times, the idea of doing only first class business, and that in a first class way, has been before our minds.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 263-264 | Added on Monday, 24 October 2016 16:56:20

J. P. Morgan and Company financed one-fifth of the cost of the Boer War for England.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 262-263 | Added on Monday, 24 October 2016 16:56:31

as historian Ron Chernow wrote in The House of Morgan, the salvation of the gold standard was Morgan’s “most dazzling feat.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 276-280 | Added on Monday, 24 October 2016 17:00:47

Pujo committee counsel Samuel Untermeyer, a leading lawyer with a specialty in trusts, asked Morgan whether he used money or property as the basis for deciding whether to make commercial capital available. Morgan responded, “No, sir. The first thing is character.” Untermeyer asked again, “Before money, or property?” Morgan insisted, “Before money or anything else. Money cannot buy it…Because a man I do not trust could not get money from me on all the bonds in Christendom.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 283-285 | Added on Monday, 24 October 2016 17:01:14

Regardless of Morgan’s personal code, it was time for the federal government to establish a financial safety net, and at the end of 1913 the government created the Federal Reserve Bank.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 287-289 | Added on Monday, 24 October 2016 17:03:13

J. P. Morgan was dead within months of the hearings, his death attended by transatlantic ceremonies. He died at the Grand Hotel in Rome, where the cable office was deluged by written condolences—3,698 on the first day, including one from the pope.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 296-302 | Added on Monday, 24 October 2016 17:05:54

On July 1, 1914, Jack Morgan went to the White House for a private talk with President Wilson, to discuss how the bank could provide extradiplomatic assistance. Over the next few years, J. P. Morgan and Company acted as the buying agent for the French and British governments, placing contracts for more than $3 billion in goods, about one-third of the purchases. In 1915, the firm took the lead in forming a syndicate to sell a $500 million bond issue for the Allies, on which J. P. Morgan and Company took no commission. When the United States finally entered the war, Morgan had been in the forefront of floating some $1.2 billion in bond issues. As a New Yorker profile noted, “The war helped Morgan & Company; and Morgan & Company, more than any other single financial force, saved the Allies.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 312-315 | Added on Monday, 24 October 2016 18:57:50

After the 1929 stock market crash, the mood of the country was dark, and Wall Street was blamed for the collapse of the economy. Time magazine referred to bankers as “banksters,” a reference to Chicago gangster Al Capone, who was convicted of tax evasion in 1931 on takings of some $100 million—tens of millions of dollars more than the estate J.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 367-370 | Added on Monday, 24 October 2016 23:13:23

At least one of them would have to leave J. P. Morgan and Company, with its capital of $340 million, to start an investment bank capitalized at $7.5 million, most of which would come from the Morgan and Lamont families. The man who agreed to take the job was fifty-year-old Harold Stanley, a college hero who went on to achieve great things, disproving the old saw that anyone who was outstandingly successful in college had already peaked. Stanley,
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 373-374 | Added on Monday, 24 October 2016 23:14:15

The Morgan in “Morgan Stanley” was one of Jack Morgan’s sons, thirty-five-year-old Henry Morgan, called Harry. That August he was in Scotland for the grouse season and wouldn’t return until September.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 391-397 | Added on Monday, 24 October 2016 23:18:42

Only a year after the firm was founded, Senator Gerald P. Nye of North Dakota chaired a Senate munitions investigation that led to J. P. Morgan and Company being labeled “merchants of death.” In order to prove that the firm had not been a war profiteer, Morgan had to exhume and submit twelve million documents—forty truckfuls. Jack Morgan declared at the hearings, “The fact that the Allies found us useful and valued our assistance in their task is the fact of which I am most proud in all my business life of more than forty-five years.” He added, “Do you suppose that because business was good I wanted my son to go to war? He did though.” The Nye Committee found nothing concrete to support Nye’s allegations, but the phrase “merchants of death” was hard to outlive, not just for J. P. Morgan but also for any firm with the Morgan name attached to it.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 405-408 | Added on Monday, 24 October 2016 23:20:50

The management style still had Victorian overtones in the 1960s. The partners met every day; they spent hours discussing even the adjectives and punctuation in prospectuses to be sure they were perfect; and the office manager still took notes at the meetings on a yellow legal pad, stopped by the desk of any partner who missed a meeting, read him the minutes in a near whisper, then tore them up and threw them out.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 446-449 | Added on Monday, 24 October 2016 23:30:06

It would be difficult to exaggerate the importance of investment banking to the national economy. The growth of the past fifty years has covered the United States with a vast network of manufacturing, processing, sales and distributing plants, the smooth functioning of which is vital to our welfare as a nation…[A]dequate financing of their needs is the life blood without which many if not most of these parts of the great machine of business would cease to function in a healthy, normal fashion. Harold Stanley’s role in successfully
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 466-468 | Added on Monday, 24 October 2016 23:32:32

The foundations of the 2005 mutiny were laid in the last quarter of the twentieth century amid dramatic changes in society, business, and scale that challenged and in some ways redefined the interpretation of doing only “a first class business in a first class way.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 531-534 | Added on Tuesday, 25 October 2016 01:13:36

On the subject of growth, Fred Whittemore recalls with a chuckle, “They were all wrong.” The older partners estimated that the firm would need to rent another floor to accommodate inevitable expansion, at about 10 percent over the next few years. The group in the middle age range predicted the firm might become “several times bigger,” while the younger partners believed that it would become ten times its current size. No one anticipated that by the end of the century Morgan Stanley would be one hundred times bigger than it was in 1971.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 639-641 | Added on Tuesday, 25 October 2016 09:12:19

“The other thing John did that was pretty remarkable, he picked people for key jobs based only on merit. John looked for insight and talent; he surrounded himself with people who were hungry. None of these guys were Ivy League old-school kind of guys.” In the 1970s,
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 642-644 | Added on Tuesday, 25 October 2016 09:13:06

Frank Petito hired Lewis W. Bernard, who was his son’s Princeton roommate. People who were at the meeting when Bernard was elected partner in 1969 recall the comment, “We’re about to have a partner who is smarter than all of us put together.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 663-670 | Added on Tuesday, 25 October 2016 09:17:49

the feisty Bob Greenhill, the firm’s first Head of Mergers and Acquisitions. Greenhill was a Yale graduate and Baker Scholar at Harvard Business School, and an extreme outdoorsman with a slight, muscular build, a big head of curly hair, and a wicked grin. He was famous for his endurance and his adventures. In the 1970s, he and his wife, Gayle, and their three children went to the Arctic with Jack Wadsworth, a handsome Kentuckian who worked at First Boston, and Wadsworth’s family. They were flown in by sea-plane and dropped off above the Arctic Circle to begin a monthlong canoe trip on the Back River—as in “watch your back,” one of Greenhill’s friends says—to the pickup point. They left their maps behind and guided themselves using the journals of earlier explorers. Among the outcomes of the trip was that Greenhill persuaded Wadsworth to come to work at Morgan Stanley. Wadsworth would become the head of Asia. Greenhill
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 681-682 | Added on Tuesday, 25 October 2016 09:20:29

Keeping the “first-class business” motto in mind was a challenge, but pride, or perhaps arrogance, was a powerful motivation.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 747-747 | Added on Tuesday, 25 October 2016 15:01:59

outside the traditional mold.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 806-807 | Added on Tuesday, 25 October 2016 15:48:42

“Parker did a superb job of making it fair, a brilliant job. Everybody was equally unhappy.”
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 34-35 | Added on Tuesday, 25 October 2016 17:18:58

Automation has become so sophisticated that on a typical passenger flight, a human pilot holds the controls for a grand total of just three minutes.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 19-21 | Added on Tuesday, 25 October 2016 17:25:10

Computer clusters emerged as a result of convergence of a number of computing trends including the availability of low-cost microprocessors, high speed networks, and software for high-performance distributed computing
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 34-37 | Added on Tuesday, 25 October 2016 17:26:46

Computer clustering relies on a centralized management approach which makes the nodes available as orchestrated shared servers. It is distinct from other approaches such as peer to peer or grid computing which also use many nodes, but with a far more distributed nature
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 81-82 | Added on Tuesday, 25 October 2016 17:29:04

Computer clusters may be configured for different purposes ranging from general purpose business needs such as web-service support, to computation-intensive scientific calculations.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 84-86 | Added on Tuesday, 25 October 2016 17:29:39

Load-balancing" clusters are configurations in which cluster-nodes share computational workload to provide better overall performance. For example, a web server cluster may assign different queries to different nodes, so the overall response time will be optimized.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 86-89 | Added on Tuesday, 25 October 2016 17:30:05

approaches to load-balancing may significantly differ among applications, e.g. a high-performance cluster used for scientific computations would balance load with different algorithms from a web-server cluster which may just use a simple round-robin method by assigning each new request to a different node.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 93-97 | Added on Tuesday, 25 October 2016 17:31:17

"High-availability clusters" (also known as failover clusters, or HA clusters) improve the availability of the cluster approach. They operate by having redundant nodes, which are then used to provide service when system components fail. HA cluster implementations attempt to use redundancy of cluster components to eliminate single points of failure.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 114-116 | Added on Tuesday, 25 October 2016 17:33:09

In a Beowulf system, the application programs never see the computational nodes (also called slave computers) but only interact with the "Master" which is a specific computer handling the scheduling and management of the slaves.
==========
Computer cluster - Wikipedia (wikipedia.org)
- Your Highlight at location 127-129 | Added on Tuesday, 25 October 2016 23:23:37

The use of graphics cards (or rather their GPU's) to do calculations for grid computing is vastly more economical than using CPU's, despite being less precise. However, when using double-precision values, they become as precise to work with as CPU's, and still be much less costly (purchase cost).
==========
Gossip protocol - Wikipedia (Demers)
- Your Highlight at location 7-13 | Added on Tuesday, 25 October 2016 23:39:06

A gossip protocol is a style of computer-to-computer communication protocol inspired by the form of gossip seen in social networks. Modern distributed systems often use gossip protocols to solve problems that might be difficult to solve in other ways, either because the underlying network has an inconvenient structure, is extremely large, or because gossip solutions are the most efficient ones available. The term epidemic protocol is sometimes used as a synonym for a gossip protocol, because gossip spreads information in a manner similar to the spread of a virus in a biological community.
==========
Basic Networking Tutorial (techiwarehouse.com)
- Your Highlight at location 230-231 | Added on Tuesday, 25 October 2016 23:43:24

A firewall is a system or group of systems that enforces an access control policy between two networks.
==========
Basic Networking Tutorial (techiwarehouse.com)
- Your Highlight at location 233-234 | Added on Tuesday, 25 October 2016 23:43:36

Probably the most important thing to recognize about a firewall is that it implements an access control policy. If you don't have a good idea of what kind of access you want to allow or to deny, a firewall really won't help you.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 821-822 | Added on Wednesday, 26 October 2016 17:23:29

As the risk-reward equation was heightened, Wall Street attracted people who were less interested in the first class business than in the promise of mega-paydays.
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Highlight at location 853-854 | Added on Wednesday, 26 October 2016 17:36:10

We’re going to run this business like there’s a big storm out there. We’re going to manage the business as if the market is going straight down from here.”
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Bookmark at location 863 | Added on Wednesday, 26 October 2016 17:39:15


==========
Blue Blood and Mutiny (Patricia Beard)
- Your Bookmark at location 892 | Added on Wednesday, 26 October 2016 22:55:05


==========
Blue Blood and Mutiny (Patricia Beard)
- Your Bookmark at location 958 | Added on Wednesday, 26 October 2016 23:04:21


==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5663-5665 | Added on Wednesday, 26 October 2016 23:11:55

The defaultdict class from the collections module simplifies this by automatically storing a default value when a key doesn’t exist. All you have to do is provide a function that will return the default value each time a key is missing.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5713-5716 | Added on Wednesday, 26 October 2016 23:19:47

The complexity of a binary search is logarithmic. That means using bisect to search a list of 1 million items takes roughly the same amount of time as using index to linearly search a list of 14 items.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5732-5734 | Added on Wednesday, 26 October 2016 23:21:39

Filtering items from an iterator • islice: Slices an iterator by numerical indexes without copying.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5742-5744 | Added on Thursday, 27 October 2016 11:39:29

Combinations of items from iterators • product: Returns the Cartesian product of items from an iterator, which is a nice alternative to deeply nested list comprehensions.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5746-5748 | Added on Thursday, 27 October 2016 11:39:40

• combination: Returns the unordered combinations of length N with unrepeated items from an iterator.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5744-5746 | Added on Thursday, 27 October 2016 11:39:46

• permutations: Returns ordered permutations of length N with items from an iterator.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5751-5755 | Added on Thursday, 27 October 2016 11:40:13

Things to Remember  Use Python’s built-in modules for algorithms and data structures.  Don’t reimplement this functionality yourself. It’s hard to get right.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5818-5823 | Added on Thursday, 27 October 2016 11:43:27

Things to Remember  Python has built-in types and classes in modules that can represent practically every type of numerical value.  The Decimal class is ideal for situations that require high precision and exact rounding behavior, such as computations of monetary values.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5825-5827 | Added on Thursday, 27 October 2016 11:44:14

When you find yourself facing an unfamiliar challenge, the Python Package Index (PyPI) is a great place to look for code that will get you closer to your goal.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5860-5862 | Added on Thursday, 27 October 2016 11:47:10

Collaborating with others on Python programs requires being deliberate about how you write your code. Even if you’re working on your own, chances are you’ll be using code written by someone else via the standard library or open source packages.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Bookmark at location 5972 | Added on Thursday, 27 October 2016 22:51:51


==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 5982-5984 | Added on Thursday, 27 October 2016 22:53:35

At some point, you’ll find yourself with so many modules that you need another layer in your program to make it understandable. For this purpose, Python provides packages. Packages are modules that contain other modules.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6121-6123 | Added on Thursday, 27 October 2016 23:01:28

Packages in Python are modules that contain other modules. Packages allow you to organize your code into separate, non-conflicting namespaces with unique absolute module names.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6336-6339 | Added on Thursday, 27 October 2016 23:11:57

The third—and often simplest—solution to the circular imports problem is to use an import statement within a function or method. This is called a dynamic import because the module import happens while the program is running, not while the program is first starting up and initializing its modules.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6367-6368 | Added on Thursday, 27 October 2016 23:12:46

Circular dependencies happen when two modules must call into each other at import time. They can cause your program to crash at startup.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6398-6399 | Added on Thursday, 27 October 2016 23:14:59

Python can only have a single global version of a module installed at a time. If one of your installed packages must use the new version and another package must use the old version, your system isn’t going to work properly.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6412-6415 | Added on Thursday, 27 October 2016 23:16:17

pyvenv allows you to create isolated versions of the Python environment. Using pyvenv, you can have many different versions of the same package installed on the same system at the same time without conflicts. This lets you work on many different projects and use many different tools on the same computer.
==========
Memory leak - Wikipedia (Crockford)
- Your Bookmark at location 48 | Added on Friday, 28 October 2016 16:54:12


==========
The Passion Fallacy (or, Why You Need More Than “Passion” to be Successful) (David Darmanin)
- Your Highlight at location 8-9 | Added on Friday, 28 October 2016 17:09:38

you need to stop thinking about what you enjoy, and instead - start thinking about your strengths and the opportunities around you.
==========
The Passion Fallacy (or, Why You Need More Than “Passion” to be Successful) (David Darmanin)
- Your Highlight at location 13-17 | Added on Friday, 28 October 2016 17:12:15

It wasn’t until I failed with 2 startups I was passionate about that I realized how bad the “follow your passion” advice was. I thought: “I’m so passionate that if I’m gonna do it it’ll succeed because passion will drive me!” But, it didn't drive me. It blinded me.
==========
The Passion Fallacy (or, Why You Need More Than “Passion” to be Successful) (David Darmanin)
- Your Highlight at location 56-58 | Added on Friday, 28 October 2016 17:31:47

You need to look at starting a business like a game. And if you want to do well, it’s a game you have to win that’s less about passion and (contrary to what a lot of people will tell you today) much more related to hard work (execution) and opportunity (timing).
==========
The Passion Fallacy (or, Why You Need More Than “Passion” to be Successful) (David Darmanin)
- Your Highlight at location 68-71 | Added on Friday, 28 October 2016 17:34:28

“Following your passion is a very “me”-centered view of the world. When you go through life, what you’ll find is what you take out of the world over time — be it money, cars, stuff, accolades — is much less important than what you’ve put into the world. So my recommendation would be follow your contribution. Find the thing that you’re great at, put that into the world, contribute to others, help the world be better and that is the thing to follow.”
==========
The Passion Fallacy (or, Why You Need More Than “Passion” to be Successful) (David Darmanin)
- Your Highlight at location 79-81 | Added on Friday, 28 October 2016 17:35:41

If you want to make it, you need some kind of “unfair advantage.” While timing can be on your side it’s also become super competitive – so it’s not always enough. This is why it’s critical to always be learning (e.g. read, network, and work with (and for) more clever people that yourself).
==========
Blue Blood and Mutiny (Patricia Beard)
- Your Bookmark at location 998 | Added on Friday, 28 October 2016 18:01:18


==========
How Prezi switched data centers on the fly (Peter Sipos)
- Your Highlight at location 15-18 | Added on Friday, 28 October 2016 18:07:41

The traditional process for database migration involves scheduled downtime during which a backup of the old database is used to populate the new DB. In our case, this would have meant none of our users could present with Prezi for at least a full day, something we didn’t want to put millions of people through. We needed to change the tire without stopping the car.
==========
How Prezi switched data centers on the fly (Peter Sipos)
- Your Highlight at location 45-46 | Added on Friday, 28 October 2016 18:32:28

Unfortunately replication lag was just the tip of the iceberg. We also had to worry about collisions, which happen when the two databases are simultaneously changed in divergent ways.
==========
How Prezi switched data centers on the fly (Peter Sipos)
- Your Bookmark at location 136 | Added on Friday, 28 October 2016 23:55:05


==========
Blue Blood and Mutiny (Patricia Beard)
- Your Bookmark at location 1058 | Added on Saturday, 29 October 2016 10:13:59


==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 822-824 | Added on Saturday, 29 October 2016 10:15:47

application. Following Amdahl’s Law, to make the program fast we should concentrate on those few lines which are run most of the time. Determine bottlenecks by empirically profiling representative runs instead of merely relying on algorithmic complexity theory or a hunch.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 846-848 | Added on Saturday, 29 October 2016 12:54:08

Littering a codebase with unintelligible tricks throughout would be bad, as would letting the application run too slowly. Find the right balance for you. Consult books and papers on algorithms. Measure the performance.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 885-889 | Added on Saturday, 29 October 2016 13:01:16

Both under- and overengineering are always around the corner, but there are some symptoms that could help you to recognize them. The first one is often revealed by excessive code duplication, while the second one is more subtle: Too many abstract classes, overly deep classes hierarchies, unused hook methods, and even interfaces implemented by only one class – when they are not used for some good reason, such as encapsulating external dependencies – can all be signs of overengineering.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 951-953 | Added on Saturday, 29 October 2016 13:12:08

A pattern allows you and your peers to make well-informed decisions. It can make all the difference between “this is how it is done” (a stale attitude that prevents new ideas and change) and “this is how and why we do this here” (an attitude that is aware of a world outside of the acquired habits and open to evaluation and learning).
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1036-1038 | Added on Saturday, 29 October 2016 13:16:55

Programming is often looked upon as a solitary and uncommunicative craft. In truth, it is the exact opposite. Programming. That’s you trying to communicate with the machine, telling it what to do. The machine will always do what you tell it to do, but not necessarily what you want it to do. There is huge potential for miscommunication.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Bookmark at location 1086 | Added on Saturday, 29 October 2016 13:40:08


==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1190-1191 | Added on Saturday, 29 October 2016 13:41:47

Also know the common ways of implementing cross-language idioms – the patterns in Design Patterns are a good start.
==========
Clean Code (Robert C. Martin)
- Your Bookmark at location 766 | Added on Saturday, 29 October 2016 15:18:12


==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6510-6512 | Added on Saturday, 29 October 2016 15:24:17

Virtual environments allow you to use pip to install many different versions of the same package on the same machine without conflicts.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6512-6515 | Added on Saturday, 29 October 2016 15:24:35

Virtual environments are created with pyvenv, enabled with source bin/activate, and disabled with deactivate.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6515-6521 | Added on Saturday, 29 October 2016 15:24:52

You can dump all of the requirements of an environment with pip freeze. You can reproduce the environment by supplying the requirements.txt file to pip install -r.  In versions of Python before 3.4, the pyvenv tool must be downloaded and installed separately. The command-line tool is called virtualenv instead of pyvenv.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Bookmark at location 6522 | Added on Sunday, 30 October 2016 19:42:24


==========
IT Infrastructure Basics (vcu.edu)
- Your Bookmark at location 142 | Added on Sunday, 30 October 2016 20:29:01


==========
IT Infrastructure Basics (vcu.edu)
- Your Highlight at location 468-469 | Added on Monday, 31 October 2016 11:03:06

Windows has been steadily gaining market share in this server environment, but *ix systems have been and are still the major platform for industrial strength computing.
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1894-1895 | Added on Monday, 31 October 2016 22:39:20

The dropwhile() and islice() functions are mainly convenience functions that you can use to avoid writing rather messy code
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1908-1909 | Added on Monday, 31 October 2016 23:02:18

these—itertools.permutations()—takes a collection of items and produces a sequence of tuples that rearranges all of the items into all possible permutations
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1920-1921 | Added on Monday, 31 October 2016 23:03:58

For combinations(), the actual order of the elements is not considered. That is, the combination ('a', 'b') is considered to be the same as ('b', 'a') (which is not produced).
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1921-1923 | Added on Monday, 31 October 2016 23:04:41

When producing combinations, chosen items are removed from the collection of possible candidates (i.e., if 'a' has already been chosen, then it is removed from consideration). The itertools.combinations_with_replacement() function relaxes this, and allows the same item to be chosen more than once.
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1928-1930 | Added on Monday, 31 October 2016 23:05:08

When faced with seemingly complicated iteration problems, it always pays to look at itertools first. If the problem is common, chances are a solution is already available.
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1930-1933 | Added on Monday, 31 October 2016 23:05:27

Iterating Over the Index-Value Pairs of a Sequence Problem You want to iterate over a sequence, but would like to keep track of which element of the sequence is currently being processed. Solution The built-in enumerate() function handles this quite nicely:
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1950-1951 | Added on Monday, 31 October 2016 23:08:57

enumerate() is a nice shortcut for situations where you might be inclined to keep your own counter variable.
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 1965-1967 | Added on Monday, 31 October 2016 23:10:07

zip(a, b) works by creating an iterator that produces tuples (x, y) where x is taken from a and y is taken from b. Iteration stops whenever one of the input sequences is exhausted. Thus, the length of the iteration is the same as the length of the shortest input.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 162-163 | Added on Tuesday, 1 November 2016 20:22:22

Design patterns abstract and present in neat, well-defined components and interfaces the experience of many software designers and architects over many years of solving similar problems.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 346-347 | Added on Tuesday, 1 November 2016 20:39:24

The key features of encapsulation are as follows: An object's behavior is kept hidden from the outside world or objects keep their state information private.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 348-350 | Added on Tuesday, 1 November 2016 20:39:30

Clients can't change the object's internal state by directly acting on them; rather, clients request the object by sending messages. Based on the type of requests, objects may respond by changing their internal state using special member functions such as get and set.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 350-353 | Added on Tuesday, 1 November 2016 20:39:46

In Python, the concept of encapsulation (data and method hiding) is not implicit, as it doesn't have keywords such as public, private, and protected (in languages such as C++ or Java) that are required to support encapsulation. Of course, accessibility can be made private by prefixing __ in the variable or function name.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 357-359 | Added on Tuesday, 1 November 2016 20:45:51

In Python, polymorphism is a feature built-in for the language. For example, the + operator can act on two integers to add them or can work with strings to concatenate them
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 355-357 | Added on Tuesday, 1 November 2016 20:45:59

Polymorphism can be of two types: An object provides different implementations of the method based on input parameters The same interface can be used by objects of different types
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 363-365 | Added on Tuesday, 1 November 2016 20:46:10

Inheritance indicates that one class derives (most of its) functionality from the parent class. Inheritance is described as an option to reuse functionality defined in the base class and allow independent extensions of the original software implementation.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 366-367 | Added on Tuesday, 1 November 2016 20:46:22

Inheritance creates hierarchy via the relationships among objects of different classes. Python, unlike Java, supports multiple inheritance (inheriting from multiple base classes).
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 371-375 | Added on Tuesday, 1 November 2016 20:48:01

Abstraction The key features of abstraction are as follows: It provides you with a simple interface to the clients, where the clients can interact with class objects and call methods defined in the interface It abstracts the complexity of internal classes with an interface so that the client need not be aware of internal implementations
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 425-428 | Added on Tuesday, 1 November 2016 20:56:45

The substitution principle states that derived classes must be able to completely substitute the base classes. This principle is pretty straightforward in the sense that it says when application developers write derived classes, they should extend the base classes.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Bookmark at location 493 | Added on Tuesday, 1 November 2016 21:03:09


==========
IT Infrastructure Basics (vcu.edu)
- Your Highlight at location 605-607 | Added on Tuesday, 1 November 2016 21:05:00

On the 'LAN side' Routers use ARP, Address Resolution Protocol, to regularly poll the devices on the LANs attached to them and update a table of which MAC address is associated with which IP address on the LANs for which it routes.
==========
IT Infrastructure Basics (vcu.edu)
- Your Bookmark at location 652 | Added on Tuesday, 1 November 2016 21:19:14


==========
The Spectator (The Spectator)
- Your Highlight at location 475-476 | Added on Tuesday, 1 November 2016 22:28:19

There is, at least, an explanation for the jokes — the Chris Rock formula that you must always ‘punch up, never punch down’.
==========
4.12. Dynamic Programming — Problem Solving with Algorithms and Data Structures (interactivepython.org)
- Your Highlight at location 5-8 | Added on Wednesday, 2 November 2016 12:20:51

Many programs in computer science are written to optimize some value; for example, find the shortest path between two points, find the line that best fits a set of points, or find the smallest set of objects that satisfies some criteria. There are many strategies that computer scientists use to solve these problems. One of the goals of this book is to expose you to several different problem solving strategies. Dynamic programming is one strategy for these types of optimization problems.
==========
4.12. Dynamic Programming — Problem Solving with Algorithms and Data Structures (interactivepython.org)
- Your Highlight at location 8-9 | Added on Wednesday, 2 November 2016 12:21:06

A classic example of an optimization problem involves making change using the fewest coins.
==========
4.12. Dynamic Programming — Problem Solving with Algorithms and Data Structures (interactivepython.org)
- Your Highlight at location 12-14 | Added on Wednesday, 2 November 2016 12:22:40

We start with the largest coin in our arsenal (a quarter) and use as many of those as possible, then we go to the next lowest coin value and use as many of those as possible. This first approach is called a greedy method because we try to solve as big a piece of the problem as possible right away.
==========
4.12. Dynamic Programming — Problem Solving with Algorithms and Data Structures (interactivepython.org)
- Your Highlight at location 129-130 | Added on Wednesday, 2 November 2016 12:36:15

It is important to realize that just because you can write a recursive solution to a problem does not mean it is the best or most efficient solution.
==========
The Spectator (The Spectator)
- Your Highlight at location 568-570 | Added on Wednesday, 2 November 2016 16:35:20

Referees at the most prestigious of journals have given the green light to research that was later found to be wholly fraudulent. Conversely, they’ve scoffed at work that went on to win Nobel prizes. Richard Smith, a former editor of the British Medical Journal , describes peer review as a roulette wheel, a lottery and a black box. He
==========
The Spectator (The Spectator)
- Your Highlight at location 576-576 | Added on Wednesday, 2 November 2016 16:42:05

A significant part of the problem is that anyone can start a scholarly journal and define peer review however they wish.
==========
The Spectator (The Spectator)
- Your Highlight at location 579-581 | Added on Wednesday, 2 November 2016 16:43:50

There are serious knock-on effects. Politicians and journalists have long found it convenient to regard peer-reviewed research as de facto sound science. Saying ‘Look at the studies!’ is a convenient way of avoiding argument.
==========
The Spectator (The Spectator)
- Your Highlight at location 1831-1832 | Added on Wednesday, 2 November 2016 17:10:03

we descended into the only kind of dinner party I like: everyone tipping it back like there’s no tomorrow and shouting across one another.
==========
The Spectator (The Spectator)
- Your Highlight at location 1879-1883 | Added on Wednesday, 2 November 2016 17:22:24

I stood and waited, my sad little ham and cheese croissant in my hand, and I thought: ‘I can’t do this any more.’ London has simply overtaken me. It has become too sophisticated, too complex, too demanding and, above all, too full of too many choices. I don’t want any more choice. I was full up years ago. I ran out of the ability to choose more after the BlackBerry, the laptop, and the regular latte. Everything since then simply won’t go in. I’m full. I want less, not more. I want fewer choices, fewer possibilities and fewer varieties of variety.
==========
Linux System Administration Basics <meta property= (linode.com)
- Your Highlight at location 120-121 | Added on Wednesday, 2 November 2016 21:50:11

It is totally normal for a Linux system to leave old data in RAM until the space is needed, and you should not be alarmed if only a small amount of memory is actually “free.”
==========
Linux System Administration Basics <meta property= (linode.com)
- Your Highlight at location 123-124 | Added on Wednesday, 2 November 2016 21:50:34

The vmstat tool provides information about memory, swap utilization, IO wait, and system activity. It is particularly useful for diagnosing I/O-related issues.
==========
Linux System Administration Basics <meta property= (linode.com)
- Your Highlight at location 443-447 | Added on Wednesday, 2 November 2016 21:58:09

The Apache HTTP Server is considered by many to be the de facto standard web server. It is the most widely deployed open source web server, its configuration interface has been stable for many years, and its modular architecture allows it to function in many different types of deployments. Apache forms the foundation of the LAMP stack, and contains superb support for integrating dynamic server-side applications into the web server.
==========
DNS spoofing - Wikipedia (&#34;DNS forgery&#34;. Retrieved 6 January 2011.)
- Your Highlight at location 18-20 | Added on Thursday, 3 November 2016 09:26:18

When a DNS server has received a false translation and caches it for performance optimization, it is considered poisoned, and it supplies the false data to clients. If a DNS server is poisoned, it may return an incorrect IP address, diverting traffic to another computer (often an attacker's).[
==========
DNS spoofing - Wikipedia (&#34;DNS forgery&#34;. Retrieved 6 January 2011.)
- Your Highlight at location 60-62 | Added on Thursday, 3 November 2016 09:34:02

Many cache poisoning attacks can be prevented on DNS servers by being less trusting of the information passed to them by other DNS servers, and ignoring any DNS records passed back which are not directly relevant to the query.
==========
ARP spoofing - Wikipedia (wikipedia.org)
- Your Highlight at location 50-51 | Added on Thursday, 3 November 2016 12:22:10

Software that detects ARP spoofing generally relies on some form of certification or cross-checking of ARP responses. Uncertified ARP responses are then blocked.
==========
ARP spoofing - Wikipedia (wikipedia.org)
- Your Highlight at location 54-56 | Added on Thursday, 3 November 2016 12:22:33

The existence of multiple IP addresses associated with a single MAC address may indicate an ARP spoof attack, although there are legitimate uses of such a configuration.
==========
ARP spoofing - Wikipedia (wikipedia.org)
- Your Highlight at location 66-69 | Added on Thursday, 3 November 2016 12:24:32

The techniques that are used in ARP spoofing can also be used to implement redundancy of network services. For example, some software allows a backup server to issue a gratuitous ARP request in order to take over for a defective server and transparently offer redundancy.
==========
RAID Basics (oracle.com)
- Your Highlight at location 13-15 | Added on Thursday, 3 November 2016 12:26:11

Redundant array of independent disks (RAID) is a storage technology used to improve the processing capability of storage systems. This technology is designed to provide reliability in disk array systems and to take advantage of the performance gains offered by an array of multiple disks over single-disk storage.
==========
RAID Basics (oracle.com)
- Your Highlight at location 16-17 | Added on Thursday, 3 November 2016 12:26:33

RAID’s two primary underlying concepts are: distributing data over multiple hard drives improves performance using multiple drives properly allows for any one drive to fail without loss of data and without system downtime
==========
RAID Basics (oracle.com)
- Your Highlight at location 19-20 | Added on Thursday, 3 November 2016 12:26:53

A logical drive is an array of independent physical drives. Increased availability, capacity, and performance are achieved by creating logical drives.
==========
RAID Basics (oracle.com)
- Your Highlight at location 25-26 | Added on Thursday, 3 November 2016 12:29:49

A local spare drive is a standby drive assigned to serve one specified logical drive. When a member drive of this specified logical drive fails, the local spare drive becomes a member drive and automatically starts to rebuild.
==========
RAID Basics (oracle.com)
- Your Highlight at location 27-28 | Added on Thursday, 3 November 2016 12:30:31

A global spare drive does not only serve one specified logical drive. When a member drive from any of the logical drives fails, the global spare drive joins that logical drive and automatically starts to rebuild.
==========
RAID Basics (oracle.com)
- Your Highlight at location 31-32 | Added on Thursday, 3 November 2016 12:31:50

A logical drive consists of a group of SCSI drives, Fibre Channel drives, or SATA drives. Physical drives in one logical drive do not have to come from the same SCSI channel. Also, each logical drive can be configured for a different RAID level.
==========
RAID Basics (oracle.com)
- Your Highlight at location 44-46 | Added on Thursday, 3 November 2016 12:33:05

There are several ways to implement a RAID array, using a combination of mirroring, striping, duplexing, and parity technologies. These various techniques are referred to as RAID levels. Each level offers a mix of performance, reliability, and cost.
==========
RAID Basics (oracle.com)
- Your Highlight at location 78-80 | Added on Thursday, 3 November 2016 12:35:41

RAID 0 implements block striping, where data is broken into logical blocks and is striped across several drives. Unlike other RAID levels, there is no facility for redundancy. In the event of a disk failure, data is lost.
==========
RAID Basics (oracle.com)
- Your Highlight at location 85-87 | Added on Thursday, 3 November 2016 12:37:38

RAID 1 implements disk mirroring, where a copy of the same data is recorded onto two drives. By keeping two copies of data on separate disks, data is protected against a disk failure. If, at any time, a disk in the RAID 1 array fails, the remaining good disk (copy) can provide all of the data needed, thus preventing downtime.
==========
RAID Basics (oracle.com)
- Your Highlight at location 96-97 | Added on Thursday, 3 November 2016 12:39:13

RAID 1+0 combines RAID 0 and RAID 1 to offer mirroring and disk striping. Using RAID 1+0 is a time-saving feature that enables you to configure a large number of disks for mirroring in one step.
==========
RAID Basics (oracle.com)
- Your Highlight at location 101-103 | Added on Thursday, 3 November 2016 12:39:31

RAID 3 implements block striping with dedicated parity. This RAID level breaks data into logical blocks, the size of a disk block, and then stripes these blocks across several drives. One drive is dedicated to parity. In the event that a disk fails, the original data can be reconstructed using the parity information and the information on the remaining disks.
==========
RAID Basics (oracle.com)
- Your Highlight at location 110-112 | Added on Thursday, 3 November 2016 12:42:27

RAID 5 implements multiple-block striping with distributed parity. This RAID level offers redundancy with the parity information distributed across all disks in the array. Data and its parity are never stored on the same disk. In the event that a disk fails, original data can be reconstructed using the parity information and the information on the remaining disks.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1231-1235 | Added on Thursday, 3 November 2016 12:46:45

solve. You need to get under the hood of the operating system and learn about common protocols like SMTP, HTTP, and FTP, client-server architecture, characteristics of daemons and services, and how to interrogate running processes and diagnose the state of the system. Most of the servers and services mentioned here enable interoperability with other systems in a standardized way, so they tell programmers how to interact with other systems and how a protocol can be used and incorporated in their own applications.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1279-1282 | Added on Thursday, 3 November 2016 12:52:57

It’s rare that a horrible codebase happens overnight (those are probably those demo systems thrown into production). Instead, our industry is addled by systems slowly brought to their knees by programmers who leave the code without any improvements, often making it just that little bit messier over time. Each small workaround adds another layer of unnecessary complexity, with the combined effect of quickly escalating a slightly complex system into the monstrous unmaintainable beasts we hear about all the time.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1295-1298 | Added on Thursday, 3 November 2016 12:54:22

Object-oriented software is composed of objects communicating via methods. So in a way it can be argued that not objects but methods are the basic building blocks of our code. While there is a lot of literature on design in the large – architecture and components – and on medium granularity – e.g., design patterns – surprisingly little can be found on designing individual methods. Design in the small, however, matters. A lot.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1298-1301 | Added on Thursday, 3 November 2016 12:54:48

Ideally, any piece of source code should be readable like a good book: it should be interesting; it should convey its intention clearly; and last, but not least, it should be fun to read. The simplest way to achieve readability is to use expressive names that properly describe the concepts they identify.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1303-1304 | Added on Thursday, 3 November 2016 12:55:11

Be particularly careful when designing your method names because they are the verbs in the story you are trying to tell.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1319-1319 | Added on Thursday, 3 November 2016 12:57:22

after all, most software development is maintenance.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1343-1345 | Added on Thursday, 3 November 2016 13:00:00

Brian Kernighan said it well: “Everyone knows that debugging is twice as hard as writing a program in the first place. So if you’re as clever as you can be when you write it, how will you ever debug it?”
==========
Python Cookbook [Tue, 20 Sep 2016] (calibre)
- Your Highlight at location 2106-2108 | Added on Thursday, 3 November 2016 13:04:37

A little-known feature of the built-in iter() function is that it optionally accepts a zero-argument callable and sentinel (terminating) value as inputs. When used in this way, it creates an iterator that repeatedly calls the supplied callable over and over again until it returns the value given as a sentinel.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6568-6570 | Added on Thursday, 3 November 2016 13:15:36

Tools like the configparser built-in module let you maintain production configurations separate from code, a distinction that’s crucial for collaborating with an operations team.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6675-6680 | Added on Thursday, 3 November 2016 13:19:12

Calling print on built-in Python types will produce the human-readable string version of a value, which hides type information.  Calling repr on built-in Python types will produce the printable string version of a value. These repr strings could be passed to the eval built-in function to get back the original value.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6686-6688 | Added on Thursday, 3 November 2016 13:19:24

You can reach into any object’s __dict__ attribute to view its internals.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6771-6772 | Added on Thursday, 3 November 2016 13:25:18

The only way to have confidence in a Python program is to write tests.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6778-6779 | Added on Thursday, 3 November 2016 13:25:41

It’s important to write both unit tests (for isolated functionality) and integration tests (for modules that interact).
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6774-6777 | Added on Thursday, 3 November 2016 13:25:45

You can define tests by subclassing TestCase and defining one method per behavior you’d like to test. Test methods on TestCase classes must start with the word test.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6785-6788 | Added on Thursday, 3 November 2016 13:26:47

But these tools aren’t enough to find every root cause. When you need something more powerful, it’s time to try Python’s built-in interactive debugger. The debugger lets you inspect program state, print local variables, and step through a Python program one statement at a time.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6827-6829 | Added on Thursday, 3 November 2016 13:28:21

You can initiate the Python interactive debugger at a point of interest directly in your program with the import pdb; pdb.set_trace() statements.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6836-6839 | Added on Thursday, 3 November 2016 14:05:29

The best approach is to ignore your intuition and directly measure the performance of a program before you try to optimize it. Python provides a built-in profiler for determining which parts of a program are responsible for its execution time. This lets you focus your optimization efforts on the biggest sources of trouble and ignore parts of the program that don’t impact speed.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6864-6867 | Added on Thursday, 3 November 2016 14:08:17

Python provides two built-in profilers, one that is pure Python (profile) and another that is a C-extension module (cProfile). The cProfile built-in module is better because of its minimal impact on the performance of your program while it’s being profiled. The pure-Python alternative imposes a high overhead that will skew the results.
==========
Monty Hall problem - Wikipedia (wikipedia.org)
- Your Highlight at location 109-115 | Added on Thursday, 3 November 2016 14:19:18

The problem continues to attract the attention of cognitive psychologists. The typical behavior of the majority, i.e., not switching, may be explained by phenomena known in the psychological literature as: 1) the endowment effect (); people tend to overvalue the winning probability of the already chosen – already "owned" – door; 2) the status quo bias (); people prefer to stick with the choice of door they have already made; 3) the errors of omission vs. errors of commission effect (); all else considered equal, people prefer any errors they are responsible for to have occurred through 'omission' of taking action, rather than through having taken an explicit action that later becomes known to have been erroneous. Experimental evidence confirms that these are plausible explanations which do not depend on probability intuition (; ).
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 69-72 | Added on Thursday, 3 November 2016 20:53:04

Most of us want to believe that automation frees us to spend our time on higher pursuits but doesn’t otherwise alter the way we behave or think. That view is a fallacy—an expression of what scholars of automation call the “substitution myth.” A labor-saving device doesn’t just provide a substitute for some isolated component of a job or other activity. It alters the character of the entire task, including the roles, attitudes, and skills of the people taking part.
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 77-80 | Added on Thursday, 3 November 2016 20:55:24

Automation bias occurs when we place too much faith in the accuracy of the information coming through our monitors. Our trust in the software becomes so strong that we ignore or discount other information sources, including our own eyes and ears. When a computer provides incorrect or insufficient data, we remain oblivious to the error.
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 78-80 | Added on Thursday, 3 November 2016 20:55:39

Our trust in the software becomes so strong that we ignore or discount other information sources, including our own eyes and ears. When a computer provides incorrect or insufficient data, we remain oblivious to the error.
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 81-81 | Added on Thursday, 3 November 2016 20:56:43

recent studies suggest that the problems can bedevil anyone working with a computer.
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 178-180 | Added on Friday, 4 November 2016 08:06:17

An Inuit on a GPS-equipped snowmobile is not so different from a suburban commuter in a GPS-equipped SUV: as he devotes his attention to the instructions coming from the computer, he loses sight of his surroundings.
==========
All Can Be Lost: The Risk of Putting Our Knowledge in the Hands of Machines (Yoni Appelbaum)
- Your Highlight at location 181-182 | Added on Friday, 4 November 2016 08:06:43

Whether it’s a pilot on a flight deck, a doctor in an examination room, or an Inuit hunter on an ice floe, knowing demands doing.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6986-6987 | Added on Friday, 4 November 2016 08:09:07

It’s important to profile Python programs before optimizing because the source of slowdowns is often obscure.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6987-6990 | Added on Friday, 4 November 2016 08:09:14

Use the cProfile module instead of the profile module because it provides more accurate profiling information.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 6996-6998 | Added on Friday, 4 November 2016 08:09:50

Memory management in the default implementation of Python, CPython, uses reference counting. This ensures that as soon as all references to an object have expired, the referenced object is also cleared. CPython also has a built-in cycle detector to ensure that self-referencing objects are eventually garbage collected.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 7001-7004 | Added on Friday, 4 November 2016 08:11:10

The first way to debug memory usage is to ask the gc built-in module to list every object currently known by the garbage collector. Although it’s quite a blunt tool, this approach does let you quickly get a sense of where your program’s memory is being used.
==========
Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series) (Slatkin, Brett)
- Your Highlight at location 7055-7058 | Added on Friday, 4 November 2016 08:13:07

The tracemalloc built-in module provides powerful tools for understanding the source of memory usage.  tracemalloc is only available in Python 3.4 and above.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 497-500 | Added on Friday, 4 November 2016 11:14:21

The following are the properties of Behavioral patterns: They are concerned with the interaction among objects and responsibility of objects Objects should be able to interact and still be loosely coupled An example of a behavioral pattern is the Observer pattern.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 487-491 | Added on Friday, 4 November 2016 11:15:01

The following are the properties of Creational patterns: They work on the basis of how objects can be created They isolate the details of object creation Code is independent of the type of object to be created An example of a creational pattern is the Singleton pattern.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 492-495 | Added on Friday, 4 November 2016 11:15:07

The following are the properties of Structural patterns: They design the structure of objects and classes so that they can compose to achieve larger results The focus is on simplifying the structure and identifying the relationship between classes and objects They focus on class inheritance and composition
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 518-519 | Added on Friday, 4 November 2016 11:18:21

Singleton provides you with a mechanism to have one, and only one, object of a given type and provides a global point of access.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 523-526 | Added on Friday, 4 November 2016 11:19:32

In brief, the intentions of the Singleton design pattern are as follows: Ensuring that one and only one object of the class gets created Providing an access point for an object that is global to the program Controlling concurrent access to resources that are shared
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 532-535 | Added on Friday, 4 November 2016 11:21:05

Here is a sample code of the Singleton pattern in Python v3.5. In this example, we will do two major things: We will allow the creation of only one instance of the Singleton class. If an instance exists, we will serve the same object
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 540-541 | Added on Friday, 4 November 2016 11:24:33

In the preceding code snippet, we override the __new__ method (Python's special method to instantiate objects) to control the object creation.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 542-544 | Added on Friday, 4 November 2016 11:24:45

The hasattr method (Python's special method to know if an object has a certain property) is used to see if the cls object has the instance property, which checks whether the class already has an object.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 584-586 | Added on Friday, 4 November 2016 12:47:23

A metaclass is a class of a class, which means that the class is an instance of its metaclass. With metaclasses, programmers get an opportunity to create classes of their own type from the predefined Python classes. For instance, if you have an object, MyClass, you can create a metaclass, MyKls, that redefines the behavior of MyClass to the way that you need.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 659-664 | Added on Friday, 4 November 2016 21:58:16

As Singletons have a global point of access, the following issues can occur: Global variables can be changed by mistake at one place and, as the developer may think that they have remained unchanged, the variables get used elsewhere in the application. Multiple references may get created to the same object. As Singleton creates only one object, multiple references can get created at this point to the same object. All classes that are dependent on global variables get tightly coupled as a change to the global data by one class can inadvertently impact the other class.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 675-677 | Added on Saturday, 5 November 2016 12:33:53

We also discussed the Borg or Monostate pattern, which is a variation of the Singleton pattern. Borg allows the creation of multiple objects that share the same state unlike the single pattern described by GoF.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 677-678 | Added on Saturday, 5 November 2016 12:34:11

We went on to explore the webapp application where Singleton can be applied for consistent database operations across multiple services.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 694-696 | Added on Saturday, 5 November 2016 12:36:39

In object-oriented programming, the term factory means a class that is responsible for creating objects of other types. Typically, the class that acts as a factory has an object and methods associated with it. The client calls this method with certain parameters; objects of desired types are created in turn and returned to the client by the factory.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 697-703 | Added on Saturday, 5 November 2016 12:38:00

a factory provides certain advantages that are listed here: The first advantage is loose coupling in which object creation can be independent of the class implementation. The client need not be aware of the class that creates the object which, in turn, is utilized by the client. It is only necessary to know the interface, methods, and parameters that need to be passed to create objects of the desired type. This simplifies implementations for the client. Adding another class to the factory to create objects of another type can be easily done without the client changing the code.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Highlight at location 735-739 | Added on Saturday, 5 November 2016 12:50:14

the factory method pattern: We define an interface to create objects, but instead of the factory being responsible for the object creation, the responsibility is deferred to the subclass that decides the class to be instantiated. The Factory method creation is through inheritance and not through instantiation. The Factory method makes the design more customizable.
==========
Learning Python Design Patterns - Second Edition (Chetan Giridhar)
- Your Bookmark at location 751 | Added on Saturday, 5 November 2016 12:55:43


==========
Python decorators: metaprogramming with style (Leonardo Giordani)
- Your Highlight at location 6-7 | Added on Saturday, 5 November 2016 22:37:03

"Python 3 Patterns, Recipes and Idioms"
==========
Introduction to Redis – Redis (redis.io)
- Your Highlight at location 4-5 | Added on Tuesday, 8 November 2016 08:50:23

Redis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker.
==========
Introduction to Redis – Redis (redis.io)
- Your Highlight at location 17-21 | Added on Tuesday, 8 November 2016 08:51:08

In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log. Persistence can be optionally disabled, if you just need a feature-rich, networked, in-memory cache.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 15-18 | Added on Tuesday, 8 November 2016 09:06:53

the popular Outliers idea posited by Malcolm Gladwell, popularizing the idea that many successful people are a product of their environment rather than ‘gifted’.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 18-22 | Added on Tuesday, 8 November 2016 09:07:17

Gladwell shows how the success of Bill Gates, the Beatles, and other outstanding performers is not so much to do with ‘what they are like’ but rather ‘where they come from.’ ‘The people who stand before kings may look like they did it all by themselves,’ Gladwell writes. ‘But in fact they are invariably the beneficiaries of hidden advantages and extraordinary opportunities and cultural legacies that allow them to learn and work hard and make sense of the world in ways others cannot.’”
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 30-32 | Added on Tuesday, 8 November 2016 09:08:50

Say your child plays on a soccer team for kids born any time in the year 2007. If your child is born in January, then they will have almost a 12 month head start on a child born in December, and a year is like a lifetime at that stage of physical development. Those physical skills manifest themselves in playing time, which further develops the child.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 33-36 | Added on Tuesday, 8 November 2016 09:09:40

But what most of these forces have in common – at least when it comes to attaining excellence – is the extent to which they confer (or deny) opportunities for serious practice. Once the opportunity for practice is in place, the prospects of high achievement take off. And if practice is denied or diminished, no amount of talent is going to get you there.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 38-42 | Added on Tuesday, 8 November 2016 09:10:25

The best type of practice does two things: It helps us to acquire the skills that speed up/automate processes and feedback (see how Brazil develops its soccer players, for example.) It pushes us to the edge of our competence and forces us to focus. This is where the learning happens.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 45-50 | Added on Tuesday, 8 November 2016 09:11:54

Say I asked you to read the line below once and then, without looking back at the page, repeat the letters back to me. HOCBTELAKGD The average person will find this difficult to do. Generally speaking, our mind can only keep track of about seven things at once, and I asked you to try and recall eleven. Now watch what happens when I rearrange the letters. THE BLACK DOG These are the exact same letters, but sensibly grouped in a way that your mind can understand: This is chunking.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 52-54 | Added on Tuesday, 8 November 2016 09:12:00

This is one way that experts become so good. They learn how to chunk processes specific to their area of expertise. This helps them so use a sort of autopilot, allowing them to elevate their minds to a higher level.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 62-64 | Added on Tuesday, 8 November 2016 09:14:56

length of time in many occupations is only weakly related to performance. Mere experience, if it is not matched by deep concentration, does not translate into excellence.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 66-73 | Added on Tuesday, 8 November 2016 09:16:55

Take a look at the anagrams in List A and try to solve them. Then do the same for list B. Both lists are the same words. The only difference is that one list was more difficult to solve. When researchers asked participants to list off words like those in List A, that were easy, the participants had problems recalling them. Their recall soared when asked to list words from more difficult anagrams like those is List B. To figure out words like those in list B it takes more time, concentration, and effort: You are engaging much more of your brain. This means that if you want to remember something or maintain your focus, make it hard.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 74-77 | Added on Tuesday, 8 November 2016 12:59:41

“When most people practice they focus on the things they can do effortlessly,’ Ericsson has said. ‘Expert practice is different. It entails considerable, specific, and sustained efforts to do something you can’t do well – or even at all. Research across domains shows that it is only by working at what you can’t do that you turn into the expert you want to become.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 80-81 | Added on Tuesday, 8 November 2016 13:00:12

…world-class performance comes by striving for a target just out of reach, but with a vivid awareness of how the gap might be breached.
==========
Becoming an Expert: The Elements of Success (farnamstreetblog.com)
- Your Highlight at location 89-90 | Added on Tuesday, 8 November 2016 16:55:21

10,000 hours of hard, correct work is all it takes.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1409-1410 | Added on Wednesday, 9 November 2016 08:12:13

Whichever technology or programming language these programmers favor, they have one important thing in common: They know their limits, and they thrive on pushing them little by little every day.
==========
97 Things Every Programmer Should Know - Extended (Shirish Padalkar)
- Your Highlight at location 1421-1422 | Added on Wednesday, 9 November 2016 08:14:52

At the end of the day, it is not about surviving. It is about surviving in the best way possible, by actively challenging yourself to excel as a programmer.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 64-66 | Added on Wednesday, 9 November 2016 20:49:10

exactly twenty years after Howie Rubin became a scandalous household name for losing $250 million, another mortgage bond trader named Howie, inside Morgan Stanley, would lose $9 billion on a single mortgage trade, and remain essentially unknown, without anyone beyond a small circle inside Morgan Stanley ever hearing about what he'd done, or why.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 214-215 | Added on Thursday, 10 November 2016 08:19:40

The big fear of the 1980s mortgage bond investor was that he would be repaid too quickly, not that he would fail to be repaid at all.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 228-230 | Added on Thursday, 10 November 2016 08:23:46

The implications of turning home mortgages into bonds were mind-bogglingly vast. One man's liability had always been another man's asset, but now more and more of the liabilities could be turned into bits of paper that you could sell to anyone. In short order, the Salomon Brothers trading floor gave
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 236-237 | Added on Thursday, 10 November 2016 08:26:42

The growing interface between high finance and lower-middle-class America was assumed to be good for lower-middle-class America.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Bookmark at location 507 | Added on Friday, 11 November 2016 19:50:55


==========
The Linux Command Line (Shotts, William E.)
- Your Highlight at location 39-41 | Added on Friday, 11 November 2016 22:08:03

Many people speak of “freedom” with regard to Linux, but I don’t think most people know what this freedom really means. Freedom is the power to decide what your computer does, and the only way to have this freedom is to know what your computer is doing. Freedom is a computer that is without secrets, one where everything can be known if you care enough to find out.
==========
The Linux Command Line (Shotts, William E.)
- Your Highlight at location 838-841 | Added on Saturday, 12 November 2016 08:39:18

Here is a useful tip: Whenever you use wildcards with rm (besides carefully checking your typing!), test the wildcard first with ls. This will let you see the files that will be deleted. Then press the up arrow key to recall the command and replace the ls with rm.
==========
The Linux Command Line (Shotts, William E.)
- Your Highlight at location 1019-1021 | Added on Saturday, 12 November 2016 14:58:21

One thing to remember about symbolic links is that most file operations are carried out on the link’s target, not the link itself. However, rm is an exception. When you delete a link, it is the link that is deleted, not the target.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 516-517 | Added on Tuesday, 15 November 2016 10:40:38

To sell a stock or bond short, you needed to borrow it, and these tranches of mortgage bonds were tiny and impossible to find.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 522-523 | Added on Tuesday, 15 November 2016 10:43:31

A credit default swap was confusing mainly because it wasn't really a swap at all. It was an insurance policy, typically on a corporate bond, with semiannual premium payments and a fixed term.
==========
The Big Short: Inside the Doomsday Machine (Michael Lewis)
- Your Highlight at location 624-627 | Added on Wednesday, 16 November 2016 21:43:57

Nevertheless, he had found time to make himself a financial expert of sorts. "Time is a variable continuum," he wrote to one of his e-mail friends, one Sunday morning in 1999: An afternoon can fly by or it can take 5 hours. Like you probably do, I productively fill the gaps that most people leave as dead time. My drive to be productive probably cost me my first marriage and a few days ago almost cost me my fiancee.
==========
Bioinformatics Zen - Software development, the happy path, and confirmation bias (bioinformaticszen.com)
- Your Highlight at location 33-35 | Added on Saturday, 19 November 2016 22:09:56

Write the edge cases and failure scenario tests first. It's tempting to write the unit and feature tests for the "happy path" first. Listing all the possible failure modes for the given piece of code and then writing all the unit tests for these first should help overcome confirmation bias and the temptation
==========
Bioinformatics Zen - Software development, the happy path, and confirmation bias (bioinformaticszen.com)
- Your Highlight at location 33-35 | Added on Saturday, 19 November 2016 22:10:19

Write the edge cases and failure scenario tests first. It's tempting to write the unit and feature tests for the "happy path" first. Listing all the possible failure modes for the given piece of code and then writing all the unit tests for these first should help overcome confirmation bias and the temptation to write tests for the assumed perfect scenario.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 723-726 | Added on Saturday, 19 November 2016 22:17:23

The framework I found, which made the decision incredibly easy, was what I called—which only a nerd would call—a “regret minimization framework.” So I wanted to project myself forward to age 80 and say, “Okay, now I’m looking back on my life. I want to have minimized the number of regrets I have.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 729-730 | Added on Saturday, 19 November 2016 22:19:58

Computer science can’t offer you a life with no regret. But it can, potentially, offer you just what Bezos was looking for: a life with minimal regret.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 761-762 | Added on Saturday, 19 November 2016 22:24:03

Upper Confidence Bound algorithms implement a principle that has been dubbed “optimism in the face of uncertainty.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 767-769 | Added on Saturday, 19 November 2016 22:25:20

The success of Upper Confidence Bound algorithms offers a formal justification for the benefit of the doubt. Following the advice of these algorithms, you should be excited to meet new people and try new things—to assume the best about them, in the absence of evidence to the contrary. In the long run, optimism is the best prevention for regret.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 900-901 | Added on Saturday, 19 November 2016 22:51:58

In general, it seems that people tend to over-explore—to favor the new disproportionately over the best.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 967-969 | Added on Saturday, 19 November 2016 23:02:33

over a lifetime, you’re going to make a lot of decisions. And it’s actually rational to emphasize exploration—the new rather than the best, the exciting rather than the safe, the random rather than the considered—for many of those choices, particularly earlier in life.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1004-1006 | Added on Saturday, 19 November 2016 23:11:06

Perhaps the deepest insight that comes from thinking about later life as a chance to exploit knowledge acquired over decades is this: life should get better over time. What an explorer trades off for knowledge is pleasure.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1007-1008 | Added on Saturday, 19 November 2016 23:11:30

exploration necessarily leads to being let down on most occasions.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1058-1058 | Added on Saturday, 19 November 2016 23:27:34

The truncated top of an immense, sorted list is in many ways the universal user interface.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1270-1273 | Added on Sunday, 20 November 2016 00:09:26

Computer science shows that the hazards of mess and the hazards of order are quantifiable and that their costs can be measured in the same currency: time. Leaving something unsorted might be thought of as an act of procrastination—passing the buck to one’s future self, who’ll have to pay off with interest what we chose not to pay up front. But the whole story is subtler than that. Sometimes mess is more than just the easy choice. It’s the optimal choice.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1837-1838 | Added on Sunday, 20 November 2016 15:56:58

How we spend our days is, of course, how we spend our lives. —ANNIE DILLARD
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1845-1846 | Added on Sunday, 20 November 2016 15:58:09

“We are what we repeatedly do,” you seem to recall Aristotle saying—whether it’s mop the floor, spend more time with family, file taxes on time, learn French.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1849-1852 | Added on Sunday, 20 November 2016 15:59:27

Getting Things Done advocates a policy of immediately doing any task of two minutes or less as soon as it comes to mind. Rival bestseller Eat That Frog! advises beginning with the most difficult task and moving toward easier and easier things. The Now Habit suggests first scheduling one’s social engagements and leisure time and then filling the gaps with work—rather than the other way around, as we so often do.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1852-1854 | Added on Sunday, 20 November 2016 15:59:47

William James, the “father of American psychology,” asserts that “there’s nothing so fatiguing as the eternal hanging on of an uncompleted task,” but Frank Partnoy, in Wait, makes the case for deliberately not doing things right away.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1863-1865 | Added on Sunday, 20 November 2016 16:03:19

Henry Gantt, who in the 1910s developed the Gantt charts that would help organize many of the twentieth century’s most ambitious construction projects, from the Hoover Dam to the Interstate Highway System. A century later, Gantt charts still adorn the walls and screens of project managers at firms like Amazon, IKEA, and SpaceX.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1924-1926 | Added on Sunday, 20 November 2016 16:40:04

Do the difficult things while they are easy and do the great things while they are small. —LAO TZU
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1935-1936 | Added on Sunday, 20 November 2016 16:42:09

Minimizing the sum of completion times leads to a very simple optimal algorithm called Shortest Processing Time: always do the quickest task you can.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 1947-1949 | Added on Sunday, 20 November 2016 16:44:13

a simple modification of Shortest Processing Time: divide the weight of each task by how long it will take to finish, and then work in order from the highest resulting importance-per-unit-time
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2007-2009 | Added on Sunday, 20 November 2016 16:53:11

priority inversion. What happens in a priority inversion is that a low-priority task takes possession of a system resource (access to a database, let’s say) to do some work, but is then interrupted partway through that work by a timer, which pauses it and invokes the system scheduler.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2007-2012 | Added on Sunday, 20 November 2016 16:54:04

priority inversion. What happens in a priority inversion is that a low-priority task takes possession of a system resource (access to a database, let’s say) to do some work, but is then interrupted partway through that work by a timer, which pauses it and invokes the system scheduler. The scheduler tees up a high-priority task, but it can’t run because the database is occupied. And so the scheduler moves down the priority list, running various unblocked medium-priority tasks instead—rather than the high-priority one (which is blocked), or the low-priority one that’s blocking it (which is stuck in line behind all the medium-priority work). In these nightmarish scenarios, the system’s highest priority
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2023-2024 | Added on Sunday, 20 November 2016 16:56:39

A commitment to fastidiously doing the most important thing you can, if pursued in a head-down, myopic fashion, can lead to what looks for all the world like procrastination. As with a car spinning its tires, the very desire to make immediate progress is how one gets stuck.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2027-2028 | Added on Sunday, 20 November 2016 16:57:12

When a certain task can’t be started until another one is finished, scheduling theorists call that a “precedence constraint.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2072-2075 | Added on Sunday, 20 November 2016 17:07:04

A recent survey showed that the status of about 7% of all problems is still unknown, scheduling’s terra incognita. Of the 93% of the problems that we do understand, however, the news isn’t great: only 9% can be solved efficiently, and the other 84% have been proven intractable.* In other words, most scheduling problems admit no ready solution. If trying to perfectly manage your calendar feels overwhelming, maybe that’s because it actually is.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2097-2099 | Added on Sunday, 20 November 2016 17:46:53

In fact, the weighted version of Shortest Processing Time is a pretty good candidate for best general-purpose scheduling strategy in the face of uncertainty. It offers a simple prescription for time management: each time a new piece of work comes in, divide its importance by the amount of time it will take to complete.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2097-2100 | Added on Sunday, 20 November 2016 17:47:24

In fact, the weighted version of Shortest Processing Time is a pretty good candidate for best general-purpose scheduling strategy in the face of uncertainty. It offers a simple prescription for time management: each time a new piece of work comes in, divide its importance by the amount of time it will take to complete. If that figure is higher than for the task you’re currently doing, switch to the new one; otherwise stick with the current task.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2112-2115 | Added on Sunday, 20 November 2016 17:49:19

Programmers don’t talk because they must not be interrupted.… To synchronize with other people (or their representation in telephones, buzzers and doorbells) can only mean interrupting the thought train. Interruptions mean certain bugs. You must not get off the train. —ELLEN ULLMAN
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2120-2122 | Added on Sunday, 20 November 2016 17:50:12

Second, preemption isn’t free. Every time you switch tasks, you pay a price, known in computer science as a context switch. When a computer processor shifts its attention away from a given program, there’s always a certain amount of necessary overhead.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2172-2174 | Added on Sunday, 20 November 2016 17:56:30

This is thrashing: a system running full-tilt and accomplishing nothing at all. Denning first diagnosed this phenomenon in a memory-management context, but computer scientists now use the term “thrashing” to refer to pretty much any situation where the system grinds to a halt because it’s entirely preoccupied with metawork.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2237-2239 | Added on Sunday, 20 November 2016 18:04:16

The moral is that you should try to stay on a single task as long as possible without decreasing your responsiveness below the minimum acceptable limit. Decide how responsive you need to be—and then, if you want to get things done, be no more responsive than that. If you
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2254-2254 | Added on Sunday, 20 November 2016 18:06:56

In academia, holding office hours is a way of coalescing interruptions from students.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2257-2261 | Added on Sunday, 20 November 2016 18:08:46

the legendary programmer Donald Knuth. “I do one thing at a time,” he says. “This is what computer scientists call batch processing—the alternative is swapping in and out. I don’t swap in and out.” Knuth isn’t kidding. On January 1, 2014, he embarked on “The TeX Tuneup of 2014,” in which he fixed all of the bugs that had been reported in his TeX typesetting software over the previous six years. His report ends with the cheery sign-off “Stay tuned for The TeX Tuneup of 2021!”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2261-2262 | Added on Sunday, 20 November 2016 18:09:08

Likewise, Knuth has not had an email address since 1990. “Email is a wonderful thing for people whose role in life is to be on top of things. But not for me; my role is to be on the bottom of things. What I do takes long hours of studying and uninterruptible concentration.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2270-2272 | Added on Sunday, 20 November 2016 18:10:05

All human knowledge is uncertain, inexact, and partial. —BERTRAND RUSSELL
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2342-2343 | Added on Sunday, 20 November 2016 18:20:05

In 1774, completely unaware of the previous work by Bayes, Laplace published an ambitious paper called “Treatise on the Probability of the Causes of Events.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2350-2354 | Added on Sunday, 20 November 2016 18:22:22

for any possible drawing of w winning tickets in n attempts, the expectation is simply the number of wins plus one, divided by the number of attempts plus two: (w+1)⁄(n+2). This incredibly simple scheme for estimating probabilities is known as Laplace’s Law, and it is easy to apply in any situation where you need to assess the chances of an event based on its history.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2395-2397 | Added on Sunday, 20 November 2016 19:19:45

When you do have some estimate of prior probabilities, meanwhile, Bayes’s Rule applies to a wide range of prediction problems, be they of the big-data variety or the more common small-data sort.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2400-2401 | Added on Sunday, 20 November 2016 19:20:48

It’s difficult to make predictions, especially about the future. —DANISH PROVERB
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2472-2473 | Added on Sunday, 20 November 2016 19:27:00

The power-law distribution characterizes a host of phenomena in everyday life that have the same basic quality as town populations: most things below the mean, and a few enormous ones above it.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2476-2478 | Added on Sunday, 20 November 2016 19:28:49

Power-law distributions characterize both people’s wealth and people’s incomes. The mean income in America, for instance, is $55,688—but because income is roughly power-law distributed, we know, again, that many more people will be below this mean than above it, while those who are above might be practically off the charts.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2627-2629 | Added on Sunday, 20 November 2016 19:50:01

He is careful of what he reads, for that is what he will write. He is careful of what he learns, for that is what he will know. —ANNIE DILLARD
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2640-2642 | Added on Sunday, 20 November 2016 19:52:48

There’s a curious tension, then, between communicating with others and maintaining accurate priors about the world. When people talk about what interests them—and offer stories they think their listeners will find interesting—it skews the statistics of our experience.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2649-2651 | Added on Sunday, 20 November 2016 19:54:48

Simply put, the representation of events in the media does not track their frequency in the world. As sociologist Barry Glassner notes, the murder rate in the United States declined by 20% over the course of the 1990s, yet during that time period the presence of gun violence on American news increased by 600%.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2651-2653 | Added on Sunday, 20 November 2016 19:55:06

If you want to be a good intuitive Bayesian—if you want to naturally make good predictions, without having to think about what kind of prediction rule is appropriate—you need to protect your priors. Counterintuitively, that might mean turning off the news.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2714-2716 | Added on Sunday, 20 November 2016 20:09:11

The lesson is this: it is indeed true that including more factors in a model will always, by definition, make it a better fit for the data we have already. But a better fit for the available data does not necessarily mean a better prediction.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2725-2728 | Added on Sunday, 20 November 2016 20:12:03

So one of the deepest truths of machine learning is that, in fact, it’s not always better to use a more complex model, one that takes a greater number of factors into account. And the issue is not just that the extra factors might offer diminishing returns—performing better than a simpler model, but not enough to justify the added complexity. Rather, they might make our predictions dramatically worse.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2729-2732 | Added on Sunday, 20 November 2016 20:12:39

If we had copious data, drawn from a perfectly representative sample, completely mistake-free, and representing exactly what we’re trying to evaluate, then using the most complex model available would indeed be the best approach. But if we try to perfectly fit our model to the data when any of these factors fails to hold, we risk overfitting. In other words, overfitting
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2739-2740 | Added on Sunday, 20 November 2016 22:10:54

Fundamentally, overfitting is a kind of idolatry of data, a consequence of focusing on what we’ve been able to measure rather than what matters.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2805-2806 | Added on Sunday, 20 November 2016 22:23:55

Simply put, Cross-Validation means assessing not only how well a model fits the data it’s given, but how well it generalizes to data it hasn’t seen.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2832-2834 | Added on Sunday, 20 November 2016 22:27:52

One way to choose among several competing models is the Occam’s razor principle, which suggests that, all things being equal, the simplest possible hypothesis is probably the correct one.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2834-2837 | Added on Sunday, 20 November 2016 22:28:50

it’s not immediately obvious how to apply something like Occam’s razor in a mathematical context. Grappling with this challenge in the 1960s, Russian mathematician Andrey Tikhonov proposed one answer: introduce an additional term to your calculations that penalizes more complex solutions. If we introduce a complexity penalty, then more complex models need to do not merely a better job but a significantly better job of explaining the data to justify their greater complexity.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2834-2838 | Added on Sunday, 20 November 2016 22:28:58

it’s not immediately obvious how to apply something like Occam’s razor in a mathematical context. Grappling with this challenge in the 1960s, Russian mathematician Andrey Tikhonov proposed one answer: introduce an additional term to your calculations that penalizes more complex solutions. If we introduce a complexity penalty, then more complex models need to do not merely a better job but a significantly better job of explaining the data to justify their greater complexity. Computer scientists refer to this principle—using constraints that penalize models for their complexity—as Regularization.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 2867-2867 | Added on Sunday, 20 November 2016 22:35:07

it’s precisely because of the complexity of real life that a simple heuristic might in fact be the rational solution.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3009-3010 | Added on Sunday, 20 November 2016 22:57:47

In fact, no one understands as well as a computer scientist that in the face of a seemingly unmanageable challenge, you should neither toil forever nor give up, but—as
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3031-3032 | Added on Sunday, 20 November 2016 23:01:10

O(n!) “factorial time”—the computational equivalent of sorting a deck of cards by throwing them in the air until they happen to land in order.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3039-3043 | Added on Sunday, 20 November 2016 23:03:02

Cobham–Edmonds thesis: an algorithm should be considered “efficient” if it runs in what’s called “polynomial time”—that is, O(n2), O(n3), or in fact n to the power of any number at all. A problem, in turn, is considered “tractable” if we know how to solve it using an efficient algorithm. A problem we don’t know how to solve in polynomial time, on the other hand, is considered “intractable.” And
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3062-3065 | Added on Sunday, 20 November 2016 23:05:10

Constraint Relaxation. In this technique, researchers remove some of the problem’s constraints and set about solving the problem they wish they had. Then, after they’ve made a certain amount of headway, they try to add the constraints back in. That is, they make the problem temporarily easier to handle before bringing it back to reality.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3065-3068 | Added on Sunday, 20 November 2016 23:08:23

you can relax the traveling salesman problem by letting the salesman visit the same town more than once, and letting him retrace his steps for free. Finding the shortest route under these looser rules produces what’s called the “minimum spanning tree.” (If you prefer, you can also think of the minimum spanning tree as the fewest miles of road needed to connect every town to at least one other town. The
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3176-3177 | Added on Monday, 21 November 2016 08:07:07

Lagrangian Relaxation—where some impossibilities are downgraded to penalties, the inconceivable to the undesirable—enables progress to be made.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3187-3191 | Added on Monday, 21 November 2016 08:09:01

There are many ways to relax a problem, and we’ve seen three of the most important. The first, Constraint Relaxation, simply removes some constraints altogether and makes progress on a looser form of the problem before coming back to reality. The second, Continuous Relaxation, turns discrete or binary choices into continua: when deciding between iced tea and lemonade, first imagine a 50–50 “Arnold Palmer” blend and then round it up or down. The third, Lagrangian Relaxation, turns impossibilities into mere penalties, teaching the art of bending the rules (or breaking them and accepting the consequences).
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3191-3193 | Added on Monday, 21 November 2016 08:09:15

rock band deciding which songs to cram into a limited set, for instance, is up against what computer scientists call the “knapsack problem”—a puzzle that asks one to decide which of a set of items of different bulk and importance to pack into a confined volume.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3212-3214 | Added on Monday, 21 November 2016 08:13:21

must admit that after many years of work in this area, the efficacy of randomness for so many algorithmic problems is absolutely mysterious to me. It is efficient, it works; but why and how is absolutely mysterious. —MICHAEL RABIN
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3219-3222 | Added on Monday, 21 November 2016 08:14:57

Recent work in computer science has shown that there are cases where randomized algorithms can produce good approximate answers to difficult questions faster than all known deterministic algorithms. And while they do not always guarantee the optimal solutions, randomized algorithms can get surprisingly close to them in a fraction of the time, just by strategically flipping a few coins while their deterministic cousins sweat it out.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3283-3286 | Added on Monday, 21 November 2016 08:32:20

The Sieve of Erastothenes works as follows: To find all the primes less than n, begin by writing down all the numbers from 1 to n in sequence. Then cross out all the numbers that are multiples of 2, besides itself (4, 6, 8, 10, 12, and so on). Take the next smallest number that hasn’t been crossed out (in this case, 3), and cross out all multiples of that number (6, 9, 12, 15). Keep going like this, and the numbers that remain at the end are the primes.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3288-3291 | Added on Monday, 21 November 2016 08:33:24

pivotal in cryptography and online security. As it happens, it is much easier to multiply primes together than to factor them back out. With big enough primes—say, a thousand digits—the multiplication can be done in a fraction of a second while the factoring could take literally millions of years; this makes for what is known as a “one-way function.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3293-3293 | Added on Monday, 21 November 2016 08:33:54

virtually all secure communication online—be it commerce, banking, or email—begins with a hunt for prime numbers.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3319-3320 | Added on Monday, 21 November 2016 13:04:45

The Miller-Rabin primality test, as it’s now known, provides a way to quickly identify even gigantic prime numbers with an arbitrary degree of certainty.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3378-3382 | Added on Monday, 21 November 2016 13:18:11

When we need to make sense of, say, national health care reform—a vast apparatus too complex to be readily understood—our political leaders typically offer us two things: cherry-picked personal anecdotes and aggregate summary statistics. The anecdotes, of course, are rich and vivid, but they’re unrepresentative. Almost any piece of legislation, no matter how enlightened or misguided, will leave someone better off and someone worse off, so carefully selected stories don’t offer any perspective on broader patterns. Aggregate statistics, on the other hand, are the reverse: comprehensive but thin.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3387-3388 | Added on Monday, 21 November 2016 13:19:00

A close examination of random samples can be one of the most effective means of making sense of something too complex to be comprehended directly.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3425-3430 | Added on Monday, 21 November 2016 13:23:42

Named for its inventor, Burton H. Bloom, a Bloom filter works much like the Rabin-Miller primality test: the URL is entered into a set of equations that esssentially check for “witnesses” to its novelty. (Rather than proclaim “n is not prime,” these equations say “I have not seen n before.”) If you’re willing to tolerate an error rate of just 1% or 2%, storing your findings in a probabilistic data structure like a Bloom filter will save you significant amounts of both time and space. And the usefulness of such filters is not confined to search engines: Bloom filters have shipped with a number of recent web browsers to check URLs against a list of known malicious websites, and they are also an important part of cryptocurrencies like Bitcoin.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3447-3448 | Added on Monday, 21 November 2016 17:46:56

This is an example of a so-called greedy algorithm, which you can also think of as a “myopic algorithm”: one that shortsightedly takes the best thing available every step of the way.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3451-3457 | Added on Monday, 21 November 2016 17:48:06

Once you’ve assembled a baseline itinerary, you might test some alternatives by making slight perturbations to the city sequence and seeing if that makes an improvement. For instance, if we are going first to Seattle, then to Los Angeles, we can try doing those cities in reverse order: L.A. first, then Seattle. For any given itinerary, we can make eleven such two-city flip-flops; let’s say we try them all and then go with the one that gives us the best savings. From here we’ve got a new itinerary to work with, and we can start permuting that one, again looking for the best local improvement. This is an algorithm known as Hill Climbing—since the search through a space of solutions, some better and some worse, is commonly thought of in terms of a landscape with hills and valleys, where your goal is to reach the highest peak.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3479-3483 | Added on Monday, 21 November 2016 17:53:08

instead of turning to full-bore randomness when you’re stuck, use a little bit of randomness every time you make a decision. This technique, developed by the same Los Alamos team that came up with the Monte Carlo Method, is called the Metropolis Algorithm. The Metropolis Algorithm is like Hill Climbing, trying out different small-scale tweaks on a solution, but with one important difference: at any given point, it will potentially accept bad tweaks as well as good ones. We
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3523-3523 | Added on Monday, 21 November 2016 18:14:14

mathematicians are trained to really distrust intuition.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3669-3671 | Added on Monday, 21 November 2016 20:25:59

“There are no connections in the Internet. Talking about a connection in the Internet is like talking about a connection in the US Mail system. You write letters to people and each letter goes independently—and you may have a correspondence that goes back and forth and has some continuity to it, but the US Mail doesn’t need to know about that.… They just deliver the letters.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3756-3760 | Added on Monday, 21 November 2016 22:20:12

The world’s most difficult word to translate has been identified as “ilunga,” from the Tshiluba language spoken in south-eastern DR Congo.… Ilunga means “a person who is ready to forgive any abuse for the first time, to tolerate it a second time, but never a third time.” —BBC NEWS If at first you don’t succeed, / Try, try again. —T. H. PALMER
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3846-3851 | Added on Monday, 21 November 2016 22:36:27

At the heart of TCP congestion control is an algorithm called Additive Increase, Multiplicative Decrease, or AIMD. Before AIMD kicks in, a new connection will ramp up its transmission rate aggressively: if the first packet is received successfully it sends out two more, if both of those get through it sends out a batch of four, and so on. But as soon as any packet’s ACK does not come back to the sender, the AIMD algorithm takes over. Under AIMD, any fully received batch of packets causes the number of packets in flight not to double but merely to increase by 1, and dropped packets cause the transmission rate to cut back by half (hence the name Additive Increase, Multiplicative Decrease).
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Bookmark at location 3846 | Added on Monday, 21 November 2016 22:36:51


==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3873-3875 | Added on Monday, 21 November 2016 22:44:31

The satirical “Peter Principle,” articulated in the 1960s by education professor Laurence J. Peter, states that “every employee tends to rise to his level of incompetence.” The idea is that in a hierarchical organization, anyone doing a job proficiently will be rewarded with a promotion into a new job that may involve more complex and/or different challenges.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3880-3882 | Added on Monday, 21 November 2016 22:45:45

Some organizations have attempted to remediate the Peter Principle by simply firing employees who don’t advance. The so-called Cravath System, devised by leading law firm Cravath, Swaine & Moore, involves hiring almost exclusively recent graduates, placing them into the bottom ranks, and then routinely either promoting or firing them over the following years.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3897-3899 | Added on Wednesday, 23 November 2016 22:01:27

Under an AIMD system, no one is long anxious about being overtaxed, nor long resentful about a missed promotion; both are temporary and frequent correctives, and the system hovers near its equilibrium despite everything changing all the time. Perhaps one day we’ll speak not of the arc of one’s career, but rather of its sawtooth.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3902-3903 | Added on Wednesday, 23 November 2016 22:17:54

In TCP, as we’ve seen, there’s no such thing as a one-way transmission: without consistent feedback, the sender will slow down almost immediately.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3919-3921 | Added on Wednesday, 23 November 2016 22:22:06

We’ve all had the experience of talking to someone whose eyes drifted away—to their phone, perhaps—making us wonder whether our lackluster storytelling was to blame. In fact, it’s now clear that the cause and effect are often the reverse: a poor listener destroys the tale.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 3974-3976 | Added on Wednesday, 23 November 2016 22:32:16

Dropped packets are the Internet’s primary feedback mechanism. A buffer that’s too large—a restaurant taking every order no matter how short-staffed the kitchen, a modem taking every packet that comes in regardless of how long it’ll take to send them on—prevents this moderation from happening as it should.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4003-4003 | Added on Wednesday, 23 November 2016 22:37:02

In real life, packet loss is almost total.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4005-4008 | Added on Wednesday, 23 November 2016 22:38:33

The most prevalent critique of modern communications is that we are “always connected.” But the problem isn’t that we’re always connected; we’re not. The problem is that we’re always buffered. The difference is enormous. The feeling that one needs to look at everything on the Internet, or read all possible books, or see all possible shows, is bufferbloat.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4040-4041 | Added on Wednesday, 23 November 2016 22:46:48

Apple’s Stuart Cheshire concurs that it’s high time for latency to become a top priority for network engineers. He’s appalled that companies who advertise “fast” Internet connections refer only to high bandwidth, not to low delay.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4076-4077 | Added on Wednesday, 23 November 2016 22:56:23

John Maynard Keynes, once said that “successful investing is anticipating the anticipations of others.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4077-4079 | Added on Wednesday, 23 November 2016 22:57:00

For a share of stock to be sold at, say, $60, the buyer must believe he can sell it later for $70—to someone who believes he can sell it for $80 to someone who believes he can sell it for $90 to someone who believes he can sell it for $100 to someone else. In this way, the value of a stock isn’t what people think it’s worth but what people think people think it’s worth.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4212-4213 | Added on Thursday, 24 November 2016 13:43:38

the famous line by James Branch Cabell: “The optimist proclaims that we live in the best of all possible worlds; and the pessimist fears this is true.”
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4216-4218 | Added on Thursday, 24 November 2016 13:44:42

A low price of anarchy means the system is, for better or worse, about as good on its own as it would be if it were carefully managed. A high price of anarchy, on the other hand, means that things have the potential to turn out fine if they’re carefully coordinated—but
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4351-4354 | Added on Thursday, 24 November 2016 21:59:43

Nature is full of examples of individuals being essentially hijacked to serve the goals of another species. The lancet liver fluke (Dicrocoelium dendriticum), for instance, is a parasite that makes ants deliberately climb to the tops of grass blades so that they’ll be eaten by sheep—the lancet fluke’s preferred host. Likewise, the parasite Toxoplasma gondii makes mice permanently lose their fear of cats, with similar results.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4417-4418 | Added on Thursday, 24 November 2016 22:18:58

Another classic auction format, the “Dutch auction” or “descending auction,” gradually lowers an item’s price until someone is willing to buy it. The
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4455-4459 | Added on Friday, 25 November 2016 09:11:08

Peter A. Lawrence’s developmental biology text The Making of a Fly, which in April 2011 was selling for $23,698,655.93 (plus $3.99 shipping) on Amazon’s third-party marketplace. How and why had this—admittedly respected—book reached a sale price of more than $23 million? It turns out that two of the sellers were setting their prices algorithmically as constant fractions of each other: one was always setting it to 0.99830 times the competitor’s price, while the competitor was automatically setting their own price to 1.27059 times the other’s.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4467-4471 | Added on Friday, 25 November 2016 09:13:21

Investors are said to fall into two broad camps: “fundamental” investors, who trade on what they perceive as the underlying value of a company, and “technical” investors, who trade on the fluctuations of the market. The rise of high-speed algorithmic trading has upset the balance between these two strategies, and it’s frequently complained that computers, unanchored to the real-world value of goods—unbothered at pricing a texbook at tens of millions of dollars and blue-chip stocks at a penny—worsen the irrationality of the market.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4492-4496 | Added on Friday, 25 November 2016 09:19:44

Named for Nobel Prize–winning economist William Vickrey, the Vickrey auction, just like the first-price auction, is a “sealed bid” auction process. That is, every participant simply writes down a single number in secret, and the highest bidder wins. However, in a Vickrey auction, the winner ends up paying not the amount of their own bid, but that of the second-place bidder. That is to say, if you bid $25 and I bid $10, you win the item at my price: you only have to pay $10.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4501-4503 | Added on Friday, 25 November 2016 09:21:10

This makes the Vickrey auction what mechanism designers call “strategy-proof,” or just “truthful.” In the Vickrey auction, honesty is literally the best policy. Even better,
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4577-4578 | Added on Friday, 25 November 2016 19:13:03

people preferred receiving a constrained problem, even if the constraints were plucked out of thin air, than a wide-open one.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4577-4580 | Added on Friday, 25 November 2016 19:13:34

that people preferred receiving a constrained problem, even if the constraints were plucked out of thin air, than a wide-open one. It was seemingly less difficult for them to accommodate our preferences and constraints than to compute a better option based on their own. Computer scientists would nod knowingly here, citing the complexity gap between “verification” and “search”—which is about as wide as the gap between knowing a good song when you hear it and writing one on the spot.
==========
Algorithms to Live By: The Computer Science of Human Decisions (Brian Christian;Tom Griffiths)
- Your Highlight at location 4598-4600 | Added on Friday, 25 November 2016 19:20:24

computational kindness and conventional etiquette diverge. Politely withholding your preferences puts the computational problem of inferring them on the rest of the group. In contrast, politely asserting your preferences (“Personally, I’m inclined toward x. What do you think?”) helps shoulder the cognitive load of moving the group toward resolution.
==========
